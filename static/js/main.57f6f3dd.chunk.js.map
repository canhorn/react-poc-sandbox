{"version":3,"sources":["editor/state/EditorStateUpdated.ts","editor/state/EditorState.ts","notificationCenter/send/SendErrorMssage.ts","editor/home/EditorHomeRender.tsx","editor/home/EditorHome.ts","editor/text/file/FileEditor.tsx","editor/text/TextEditor.tsx","editor/sidebar/EditorSidebar.tsx","core/logger/api/ILoggerFactory.ts","core/logger/create/CreateLogger.ts","skill/state/SkillEditorState.ts","skill/list/SkillList.tsx","skill/editor/SkillEditor.tsx","skill/SkillEditorContainer.tsx","editor/Editor.tsx","editor/state/FetchEditorState.ts","core/event/model/StandardEventService.ts","core/throttle/impl/Throttle.ts","core/logger/model/ConsoleLogger.ts","core/throttle/decorator/ThrottleMethod.ts","core/logger/factory/StandardLoggerFactory.ts","notificationCenter/NotificationCenter.tsx","SetupIoC.ts","index.tsx","core/ioc/model/Container.ts","core/ioc/decorator/AutoWired.ts","core/ioc/api/Scope.ts","core/ioc/index.ts","core/ioc/container/IoCContainer.ts","core/event/index.ts","core/event/api/IEventService.ts","core/event/model/EventType.ts","core/ioc/api/Inject.ts","core/ioc/create/CreateProviderService.ts","core/ioc/create/CreateService.ts","core/ioc/create/CreateSingletonProviderService.ts","core/ioc/create/CreateSingletonService.ts","core/ioc/create/CreateSingletonServiceFactory.ts"],"names":["EDITOR_STATE_UPDATED","EventType","STATE","editorState","fileMenu","root","serverFileMap","Map","DEFAULT_FILE","id","type","content","setEditorState","eventService","arguments","length","undefined","Inject","IEventService","Object","assign","publish","getEditorState","setFileContent","file","get","updatedFile","set","getFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","getFileContent","stop","_x","apply","this","fileContentId","Promise","resolve","reject","fetch","concat","then","response","json","result","publishContentChanged","catch","error","MAIN_CONTENT_CHANGE_LISTENER","listenForMainContentChange","notificationFunction","context","handler","replace","c","r","Math","random","v","toString","forEach","changeListener","call","EditorHomeRender","props","state","react","className","EditorHome","render","_this","Component","FileEditor","fileId","options","selectOnLineNumbers","_onChangeHandler","editorDidMount","getCurrentValue","editor","console","log","match","params","setState","onChange","newValue","e","onContentChanged","delete","_this2","ex","prevProps","_this3","lib_default","key","width","height","language","theme","value","React","TextEditor","react_router","path","component","EditorSidebar","map","menuItem","EditorSidebar_SidebarMenuItem","SidebarMenuItem","style","paddingLeft","isFolder","name","react_router_dom","to","getContentUrl","children","menuItemChild","ILoggerFactory","classCallCheck","createLogger","loggerName","create","getSkillList","skillList","getSkill","skillId","filter","skill","COLUMNS","fieldName","minWidth","maxWidth","isResizable","skillContainsFilterParser","toLocaleLowerCase","indexOf","deepSearchSkill","substring","searchSkill","description","target","JSON","stringify","SkillList","history","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","setFilter","_useState5","_useState6","detailsList","setDetailsList","useEffect","objectSpread","react_default","createElement","Fragment","TextField","label","underlined","ev","text","DetailsList","items","selectionMode","SelectionMode","none","columns","setKey","layoutMode","DetailsListLayoutMode","justified","onItemInvoked","push","SkillEditor","Text","nowrap","block","onContextMenu","alert","SkillEditorContainer","Editor","_logger","_eventService","on","onEditorStateUpdated","t0","off","EditorSidebar_EditorSidebar","StandardEventService","_eventListenerList","createClass","event","eventListeners","len","index","listener","function","data","eventListener","listenerList","throttle","fn","threshold","scope","last","Date","now","args","LOGGED_MESSAGE_LIST","window","LOGGED_MESSAGES","ConsoleLogger","_dec","propertyKey","descriptor","method","_class","_name","_isDebug","_isTrace","message","messageToLog","formattedNowDate","throttledLog","level","info","throttledTrace","trace","toUTCString","applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor","StandardLoggerFactory","NotificationCenter","createSingletonService","rootElement","document","getElementById","Fabric","NotificationCenter_NotificationCenter","Container","source","IoCContainer","isBound","bind","newConstructor","InjectorHanlder","decorateConstructor","toConstructor","AutoWired","getType","config","snapshots","providers","iocprovider","iocscope","scopes","has","TypeError","provider","Scope","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","Local","Singleton","LocalScope","SingletonScope","instance","instances","__block_Instantiation","getConstructorFromType","_api_Inject__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_api_Provider__WEBPACK_IMPORTED_MODULE_1__","o","_create_CreateSingletonService__WEBPACK_IMPORTED_MODULE_6__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","checkType","baseSource","bindings","ConfigImpl","getInstance","targetSource","propertyType","propKey","defineProperty","enumerable","decoratedConstructor","paramTypes","configImpl","getParameters","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__","reset","_len","Array","_key","Error","paramType","ioc_wrapper","_getPrototypeOf2","_len2","_key2","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","assertInstantiable","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","__parent","constructorName","constructor","constructorNameRegEx","_unused","typeConstructor","hasNamedConstructor","_api_IEventType__WEBPACK_IMPORTED_MODULE_1__","_api_IEventService__WEBPACK_IMPORTED_MODULE_2__","_model_EventType__WEBPACK_IMPORTED_MODULE_3__","C_Users_i832863_Source_testing_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_model_Container__WEBPACK_IMPORTED_MODULE_0__","_api_Scope__WEBPACK_IMPORTED_MODULE_0__","_model_Container__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/main.57f6f3dd.chunk.js","sourcesContent":["import { IEventType, EventType, IEvent } from \"../../core/event\";\r\n\r\nexport const EDITOR_STATE_UPDATED: IEventType = new EventType(\r\n  \"EDITOR_STATE_UPDATED\"\r\n);\r\n\r\nexport const createEditorStateUpdatedEvent = (): IEvent => ({\r\n  type: EDITOR_STATE_UPDATED\r\n});\r\n","import { IEventService } from \"../../core/event\";\r\nimport { Inject } from \"../../core/ioc\";\r\nimport { createEditorStateUpdatedEvent } from \"./EditorStateUpdated\";\r\n\r\ninterface InternalState {\r\n  editorState: IEditorServerState;\r\n  serverFileMap: Map<string, IServerFile>;\r\n}\r\n\r\nconst STATE: InternalState = {\r\n  editorState: {\r\n    fileMenu: {\r\n      root: []\r\n    }\r\n  },\r\n  serverFileMap: new Map<string, IServerFile>()\r\n};\r\n\r\nexport const DEFAULT_FILE: IServerFile = {\r\n  id: \"invalid-id\",\r\n  type: \"plaintext\",\r\n  content: \"Loading...\"\r\n};\r\n\r\nexport const setEditorState = (\r\n  editorState: IEditorServerState,\r\n  eventService: IEventService = Inject(IEventService)\r\n) => {\r\n  Object.assign(STATE.editorState, editorState);\r\n  eventService.publish(createEditorStateUpdatedEvent());\r\n};\r\n\r\nexport const getEditorState = () => STATE.editorState;\r\n\r\n/**\r\n * ====================\r\n */\r\n\r\nexport const setFileContent = (id: string, content: string): void => {\r\n  const file = STATE.serverFileMap.get(id) || { id, type: \"new\", content };\r\n  const updatedFile = Object.assign({}, file, { content }) as IServerFile;\r\n  STATE.serverFileMap.set(id, updatedFile);\r\n};\r\n\r\nexport const getFile = async (id: string): Promise<IServerFile> => {\r\n  const file = STATE.serverFileMap.get(id);\r\n  if (!file) {\r\n    // Request file content\r\n    return getFileContent(id);\r\n  }\r\n  return file;\r\n};\r\nexport const getFileFromMap = (id: string): IServerFile | undefined => {\r\n  return STATE.serverFileMap.get(id);\r\n};\r\n\r\nexport const getFileContent = (fileContentId: string) =>\r\n  new Promise<IServerFile>((resolve, reject) => {\r\n    fetch(`/serverData/content/${fileContentId}.json`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        // TODO: Cache content\r\n        STATE.serverFileMap.set(fileContentId, result);\r\n        publishContentChanged();\r\n        return result;\r\n      })\r\n      .then(result => resolve(result))\r\n      .catch(error => reject(error));\r\n  });\r\n\r\nexport const loadFileContentFromServerForMenuItem = (menuItem: IMenuItem) => {};\r\n\r\nconst MAIN_CONTENT_CHANGE_LISTENER: Map<string, IEventListener> = new Map<\r\n  string,\r\n  IEventListener\r\n>();\r\n\r\nexport const listenForMainContentChange = (\r\n  notificationFunction: () => void,\r\n  context: any\r\n): string => {\r\n  const handler = guid();\r\n  MAIN_CONTENT_CHANGE_LISTENER.set(handler, {\r\n    notificationFunction,\r\n    context\r\n  });\r\n  return handler;\r\n};\r\nexport const removeListenerForContentChange = (handler: string): void => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.delete(handler);\r\n};\r\nexport const publishContentChanged = () => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.forEach(changeListener => {\r\n    changeListener.notificationFunction.call(changeListener.context);\r\n  });\r\n};\r\n\r\ninterface IEventListener {\r\n  notificationFunction: () => void;\r\n  context: any;\r\n}\r\n\r\nexport interface IEditorServerState {\r\n  fileMenu: {\r\n    root: Array<IMenuItem>;\r\n  };\r\n}\r\nexport interface IServerFile {\r\n  id: string;\r\n  type: \"json\" | \"csharp\" | \"javascript\" | \"plaintext\";\r\n  content: string;\r\n}\r\nexport interface IMenuItem {\r\n  id: string;\r\n  name: string;\r\n  path: Array<string>;\r\n  isFolder: boolean;\r\n  children: Array<IMenuItem>;\r\n}\r\n\r\nfunction guid(): string {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","export const sendErrorMessage = (title: string, message: string) => {\r\n  // TODO: Publish event\r\n};\r\n","import * as React from \"react\";\r\nimport { IEditorHomeProps, IEditorHomeState } from \"./EditorHome\";\r\n\r\nexport const EditorHomeRender = (\r\n  props: IEditorHomeProps,\r\n  state: IEditorHomeState\r\n) => (\r\n  <div className=\"editor-home\">\r\n    <h1>Editor Home</h1>\r\n  </div>\r\n);\r\n","import { Component } from \"react\";\r\nimport \"./EditorHome.css\";\r\nimport { EditorHomeRender } from \"./EditorHomeRender\";\r\n\r\nexport interface IEditorHomeProps {}\r\nexport interface IEditorHomeState {}\r\n\r\nclass EditorHome extends Component<IEditorHomeProps, IEditorHomeState> {\r\n  state: IEditorHomeState = {};\r\n  async componentDidMount() {}\r\n\r\n  render = () => EditorHomeRender(this.props, this.state);\r\n}\r\n\r\nexport default EditorHome;\r\n","import \"./FileEditor.css\";\r\nimport * as React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {\r\n  IServerFile,\r\n  setFileContent,\r\n  getFile,\r\n  listenForMainContentChange,\r\n  removeListenerForContentChange,\r\n  DEFAULT_FILE\r\n} from \"../../state/EditorState\";\r\n\r\ninterface IRouterParams {\r\n  fileId: string;\r\n}\r\nexport interface IFileEditorProps extends RouteChildrenProps<IRouterParams> {}\r\nexport interface IFileEditorState {\r\n  fileId: string;\r\n  file: IServerFile;\r\n  options: {\r\n    selectOnLineNumbers: boolean;\r\n  };\r\n}\r\n\r\nclass FileEditor extends React.Component<IFileEditorProps, IFileEditorState> {\r\n  state: IFileEditorState = {\r\n    fileId: \"not-valid\",\r\n    file: DEFAULT_FILE,\r\n    options: {\r\n      selectOnLineNumbers: true\r\n    }\r\n  };\r\n  private _onChangeHandler!: string;\r\n  async componentDidMount() {\r\n    this._onChangeHandler = listenForMainContentChange(\r\n      this.onContentChanged,\r\n      this\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    removeListenerForContentChange(this._onChangeHandler);\r\n  }\r\n  private onContentChanged() {\r\n    try {\r\n      if(!this.props.match) {\r\n        return;\r\n      }\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          this.setState({\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    } catch (ex) {\r\n      console.error(\"Error\", ex);\r\n    }\r\n  }\r\n  editorDidMount = (getCurrentValue: () => string, editor: any) => {\r\n    console.log(\"editorDidMount\", { getCurrentValue, editor });\r\n    // editor.focus();\r\n    // TODO: Wire to onChange to make sure state is updated\r\n    if (this.props.match !== null) {\r\n      console.log(\"DidMount\", this.props.match.params.fileId as string);\r\n      getFile(this.props.match.params.fileId).then(file =>\r\n        this.setState({\r\n          file\r\n        })\r\n      );\r\n    }\r\n  };\r\n  onChange = (newValue: string, e:any) => {\r\n    console.log(this.state.fileId);\r\n    if (this.state.fileId === \"not-valid\") {\r\n      return;\r\n    }\r\n    console.log(\"onChange\", newValue, e);\r\n    setFileContent(this.state.fileId, newValue);\r\n  };\r\n  componentDidUpdate(prevProps: IFileEditorProps) {\r\n    if(!prevProps.match || !this.props.match) {\r\n      return;\r\n    }\r\n    if (prevProps.match.params.fileId !== this.props.match.params.fileId) {\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          if(!this.props.match) {\r\n            return;\r\n          }\r\n          this.setState({\r\n            fileId: this.props.match.params.fileId,\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { file } = this.state;\r\n    let fileId = \"invalid\"\r\n    if(this.props.match) {\r\n      fileId = this.props.match.params.fileId\r\n    }\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <div>({fileId})</div>\r\n        <Editor\r\n          key=\"something\"\r\n          width=\"100%\"\r\n          height={300}\r\n          language=\"json\"\r\n          theme=\"dark\"\r\n          value={file.content}\r\n          options={this.state.options}\r\n          editorDidMount={this.editorDidMount}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileEditor;\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport \"./TextEditor.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport FileEditor from \"./file/FileEditor\";\r\n\r\nexport interface ITextEditorProps {}\r\nexport interface ITextEditorState {}\r\n\r\nclass TextEditor extends Component<ITextEditorProps, ITextEditorState> {\r\n  state: ITextEditorState = {};\r\n  async componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <h1>Text Editor</h1>\r\n        <div>\r\n          <Route path=\"/text-editor/file/:fileId\" component={FileEditor} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextEditor;\r\n","import \"./EditorSidebar.css\";\r\nimport * as React from \"react\";\r\nimport { IEditorServerState, IMenuItem } from \"../state/EditorState\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IEventService } from \"../../core/event\";\r\nimport { Inject } from \"../../core/ioc\";\r\nimport { autobind } from \"../../core/autobind\";\r\n\r\ninterface IProps {\r\n  editorState: IEditorServerState;\r\n}\r\ninterface IState {}\r\n\r\nexport default class EditorSidebar extends React.Component<IProps, IState> {\r\n  state: IState = {};\r\n\r\n  componentDidMount() {\r\n    console.log(\"sidebar: \", this.props.editorState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-sidebar\">\r\n        (editor sidebar)\r\n        {this.props.editorState.fileMenu.root.map(menuItem => (\r\n          <SidebarMenuItem key={menuItem.id} menuItem={menuItem} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SidebarMenuItem extends React.Component<{ menuItem: IMenuItem }, {}> {\r\n  render() {\r\n    const { menuItem } = this.props;\r\n    return (\r\n      <div style={{ paddingLeft: \"5px\" }}>\r\n        {menuItem.isFolder ? (\r\n          <span>{menuItem.name}</span>\r\n        ) : (\r\n          <NavLink className=\"menu-link\" to={getContentUrl(menuItem)}>\r\n            {menuItem.name}\r\n          </NavLink>\r\n        )}\r\n        <div>\r\n          {(menuItem.children || []).map(menuItemChild => (\r\n            <SidebarMenuItem key={menuItemChild.id} menuItem={menuItemChild} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getContentUrl = (menuItem: IMenuItem) => {\r\n  return `/text-editor/file/${menuItem.id}`;\r\n};\r\n","import { ILogger } from \"./ILogger\";\r\n\r\nexport abstract class ILoggerFactory {\r\n  public abstract create(loggerName: string): ILogger;\r\n}\r\n","import { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { Inject } from \"../../ioc\";\r\nimport { ILogger } from \"../api/ILogger\";\r\n\r\nexport const createLogger = (\r\n  loggerName: string,\r\n  loggerFactory: ILoggerFactory = Inject(ILoggerFactory)\r\n): ILogger => loggerFactory.create(loggerName);\r\n","import skillEditorState from \"./skill-editor-state.json\";\r\nimport { ISkill } from \"../api/ISkill.js\";\r\n\r\ninterface ISkillEditorState {\r\n  skillList: ISkill[];\r\n}\r\n\r\nconst STATE: ISkillEditorState = skillEditorState;\r\n\r\nexport const getSkillList = () => STATE.skillList;\r\n\r\nexport const getSkill = (skillId: string) => {\r\n  return STATE.skillList.filter(skill => skill.id == skillId)[0];\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getSkillList } from \"../state/SkillEditorState\";\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  SelectionMode\r\n} from \"office-ui-fabric-react/lib/DetailsList\";\r\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\r\nimport { ISkill } from \"../api/ISkill\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nconst COLUMNS = [\r\n  {\r\n    key: \"id\",\r\n    name: \"Id\",\r\n    fieldName: \"id\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"name\",\r\n    name: \"Name\",\r\n    fieldName: \"name\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  }\r\n];\r\n\r\nexport const skillContainsFilterParser = (skill: ISkill, filter: string) => {\r\n  if (filter.toLocaleLowerCase().indexOf(\"deepsearch:\") === 0) {\r\n    return deepSearchSkill(skill, filter.substring(11));\r\n  }\r\n  return searchSkill(skill, filter);\r\n};\r\n\r\nexport const searchSkill = (skill: ISkill, filter: string) =>\r\n  skill.id.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n  skill.name.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n  skill.description.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >=\r\n    0 ||\r\n  skill.type.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n  skill.target.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\nexport const deepSearchSkill = (skill: ISkill, filter: string) =>\r\n  JSON.stringify(skill || {})\r\n    .toLocaleLowerCase()\r\n    .indexOf(filter) >= 0;\r\n\r\nexport function SkillList({ match, history }: RouteComponentProps) {\r\n  const [skillList, setSkillList] = useState(getSkillList());\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n  const [detailsList, setDetailsList] = useState<ISkill[]>([]);\r\n  useEffect(() => {\r\n    setDetailsList(\r\n      skillList\r\n        .map(skill => ({\r\n          ...skill\r\n        }))\r\n        .filter(\r\n          skill => filter === \"\" || skillContainsFilterParser(skill, filter)\r\n        )\r\n    );\r\n  }, [skillList, filter]);\r\n  const onItemInvoked = (skill: ISkill) => {\r\n    console.log(\"Open \" + skill.name);\r\n    history.push(`/skill-editor/edit/${skill.id}`);\r\n  };\r\n  const onChangeText = (\r\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    text: string | undefined\r\n  ) => {\r\n    setFilter(text || \"\");\r\n  };\r\n  return (\r\n    <>\r\n      <TextField\r\n        label=\"Search:\"\r\n        underlined\r\n        description=\"Prefix search with 'deepsearch:' to search into skills.\"\r\n        onChange={onChangeText}\r\n      />\r\n      <DetailsList\r\n        items={detailsList}\r\n        selectionMode={SelectionMode.none}\r\n        columns={COLUMNS}\r\n        setKey=\"set\"\r\n        layoutMode={DetailsListLayoutMode.justified}\r\n        onItemInvoked={onItemInvoked}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport { ISkill } from \"../api/ISkill\";\r\nimport { getSkill } from \"../state/SkillEditorState\";\r\n\r\nexport default function SkillEditor({\r\n  match\r\n}: RouteComponentProps<{ skillId: string }>) {\r\n  const [skill, setSkill] = useState<ISkill | undefined>(\r\n    getSkill(match.params.skillId)\r\n  );\r\n  return (\r\n    <>\r\n      <Text nowrap block onContextMenu={() => alert(\"open context\")}>\r\n        {match.params.skillId}\r\n      </Text>\r\n        <pre>{JSON.stringify(skill, null, 4)}</pre>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { SkillList } from \"./list/SkillList\";\r\nimport SkillEditor from './editor/SkillEditor';\r\n\r\nexport function SkillEditorContainer() {\r\n  return (\r\n    <>\r\n      <h1>Skill Editor</h1>\r\n      <Switch>\r\n        <Route path=\"/skill-editor/edit/:skillId\" component={SkillEditor} />\r\n        <Route path=\"/skill-editor\" component={SkillList} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import \"./Editor.css\";\r\nimport * as React from \"react\";\r\nimport { getEditorState, IEditorServerState } from \"./state/EditorState\";\r\nimport { fetchEditorState } from \"./state/FetchEditorState\";\r\nimport EditorHome from \"./home/EditorHome\";\r\nimport TextEditor from \"./text/TextEditor\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport EditorSidebar from \"./sidebar/EditorSidebar\";\r\nimport { createLogger, ILogger } from \"../core/logger\";\r\nimport { IEventService } from \"../core/event\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { EDITOR_STATE_UPDATED } from \"./state/EditorStateUpdated\";\r\nimport { SkillEditorContainer } from \"../skill/SkillEditorContainer\";\r\n\r\nexport interface IProps {}\r\nexport interface IState {\r\n  editorState: IEditorServerState;\r\n}\r\n\r\nclass Editor extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    editorState: getEditorState()\r\n  };\r\n  private readonly _logger: ILogger = createLogger(\"View.Editor\");\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  async componentDidMount() {\r\n    this._eventService.on(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n    try {\r\n      await fetchEditorState();\r\n    } catch (ex) {\r\n      this._logger.error(\"Some Error\", ex);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this._eventService.off(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n  }\r\n  onEditorStateUpdated() {\r\n    this.setState({\r\n      editorState: getEditorState()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor\">\r\n        <div className=\"editor-sidebar\">\r\n          <EditorSidebar editorState={this.state.editorState} />\r\n        </div>\r\n        <div className=\"editor-main\">\r\n          <Switch>\r\n            <Route path=\"/skill-editor\" component={SkillEditorContainer} />\r\n            <Route path=\"/text-editor\" component={TextEditor} />\r\n            <Route path=\"/\" component={EditorHome} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import { setEditorState } from \"./EditorState\";\r\nimport { sendErrorMessage } from \"../../notificationCenter/send/SendErrorMssage\";\r\n\r\nexport const fetchEditorState = (): Promise<void> =>\r\n  fetch(\"serverData/editor-data.json\")\r\n    .then(response => response.json())\r\n    .then(result => setEditorState(result))\r\n    .catch(error =>\r\n      sendErrorMessage(\"Fetch Editor State Error\", JSON.stringify(error))\r\n    );\r\n","import { IEventListener } from \"../api/IEventListener\";\nimport { IEventService } from \"../api/IEventService\";\nimport { IEvent } from \"../api/IEvent\";\nimport { IEventType } from \"../api/IEventType\";\n\nexport class StandardEventService implements IEventService {\n  private _eventListenerList: Map<string, IEventListener[]> = new Map<\n    string,\n    IEventListener[]\n  >();\n\n  public publish(event: IEvent): void {\n    const eventListeners = this._eventListenerList.get(event.type.key) || [];\n    const len = eventListeners.length;\n    for (let index = 0; index < len; index++) {\n      const listener = eventListeners[index];\n      try {\n        listener.function.call(listener.context, event.data);\n      } catch (ex) {\n        console.error(\"Listener failed\", ex);\n      }\n    }\n  }\n\n  public on(\n    type: IEventType,\n    eventListener: (data: any) => void,\n    context: any\n  ): IEventService {\n    const listenerList = this._eventListenerList.get(type.key) || [];\n    listenerList.push({\n      function: eventListener,\n      context\n    });\n    this._eventListenerList.set(type.key, listenerList);\n\n    return this;\n  }\n\n  public off(\n    type: IEventType,\n    eventListener: (data: any) => void,\n    context: any\n  ): IEventService {\n    this._eventListenerList.set(\n      type.key,\n      (this._eventListenerList.get(type.key) || []).filter(\n        listener =>\n          listener.function !== eventListener || listener.context !== context\n      )\n    );\n    return this;\n  }\n}\n","export const throttle = (\r\n  fn: Function,\r\n  threshold: number,\r\n  scope?: any\r\n): ((...argList: any[]) => void) => {\r\n  threshold || (threshold = 250);\r\n  let last = +new Date();\r\n  return function(this: any) {\r\n    const context = scope || this,\r\n      now = +new Date(),\r\n      args = arguments;\r\n    if (last && now > last + threshold) {\r\n      fn.apply(context, args);\r\n      last = now;\r\n    }\r\n  };\r\n};\r\n","// import dateFormat from \"dateformat\";\r\nimport { ILogger } from \"../api/ILogger\";\r\nimport { ILogMessage } from \"../api/ILogMessage\";\r\nimport { throttleMethod } from \"../../throttle\";\r\n\r\nexport const LOGGED_MESSAGE_LIST: ILogMessage[] = [];\r\n(window as any).LOGGED_MESSAGES = LOGGED_MESSAGE_LIST;\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n  constructor(\r\n    private readonly _name: string,\r\n    private readonly _isDebug: boolean = true,\r\n    private readonly _isTrace: boolean = true\r\n  ) {\r\n    console.log(\"hi\");\r\n  }\r\n\r\n  public log(message: string, data: any = \"\") {\r\n    const messageToLog = `[${this.formattedNowDate()}] [INFO]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    this.throttledLog(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"INFO\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public debug(message: string, data: any = \"[no-data]\") {\r\n    this.formattedNowDate();\r\n    if (!this._isDebug) {\r\n      return;\r\n    }\r\n    const messageToLog = `[${this.formattedNowDate()}] [DEBUG]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    console.info(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"DEBUG\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public error(message: string, data: any = \"\") {\r\n    const messageToLog = `[${this.formattedNowDate()}] [ERROR]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    console.error(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"ERROR\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public trace(message: string, data: any = \"\") {\r\n    if (this._isTrace) {\r\n      const messageToLog = `[${this.formattedNowDate()}] [TRACE]: [${\r\n        this._name\r\n      }] \\r\\n\\t${message}`;\r\n      this.throttledTrace(messageToLog, data);\r\n      LOGGED_MESSAGE_LIST.push({\r\n        level: \"TRACE\",\r\n        message: messageToLog,\r\n        data\r\n      });\r\n    }\r\n  }\r\n  @throttleMethod(1000)\r\n  private throttledLog(messageToLog: string, data: any = \"\") {\r\n    console.log(messageToLog, data);\r\n  }\r\n  private throttledTrace(messageToLog: string, data: any = \"\") {\r\n    console.log(messageToLog, data);\r\n    console.trace();\r\n  }\r\n\r\n  /**\r\n   * 01-14-2019 21:22:45.0123456-06:00\r\n   */\r\n  private formattedNowDate() {\r\n    const now = new Date();\r\n    return now.toUTCString();\r\n    // const formattedOffset = dateFormat(now, \"o\");\r\n    // return (\r\n    //   dateFormat(now, \"mm-dd-yyyy HH:MM:ss.l\") +\r\n    //   formattedOffset.slice(0, 3) +\r\n    //   \":\" +\r\n    //   formattedOffset.slice(3)\r\n    // );\r\n  }\r\n}\r\n","import { throttle } from \"../impl/Throttle\";\r\n\r\nexport function throttleMethod(threshold: number) {\r\n  return function(\r\n    this: any,\r\n    target: any,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    const method = descriptor.value;\r\n    descriptor.value = throttle(function(this: any) {\r\n      return method.apply(this, arguments);\r\n    }, threshold);\r\n  };\r\n}\r\n","import { ILogger } from \"../api/ILogger\";\r\nimport { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { ConsoleLogger } from \"../model/ConsoleLogger\";\r\n\r\nexport class StandardLoggerFactory implements ILoggerFactory {\r\n  public create(loggerName: string): ILogger {\r\n    return new ConsoleLogger(loggerName);\r\n  }\r\n}\r\n","import \"./NotificationCenter.css\";\r\nimport * as React from \"react\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { IEventService } from \"../core/event\";\r\n\r\ninterface IProps {}\r\ninterface IState {}\r\n\r\nexport default class NotificationCenter extends React.Component<\r\n  IProps,\r\n  IState\r\n> {\r\n  state: IState = {};\r\n\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  componentDidMount() {}\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <div className=\"notification-center\" />;\r\n  }\r\n}\r\n","import { createSingletonService } from \"./core/ioc\";\r\nimport { IEventService } from \"./core/event\";\r\nimport { StandardEventService } from \"./core/event/model/StandardEventService\";\r\nimport { ILoggerFactory } from \"./core/logger\";\r\nimport { StandardLoggerFactory } from \"./core/logger/factory/StandardLoggerFactory\";\r\n\r\nexport const setupIoC = () => {\r\n  console.log(\"setup ioc\");\r\n  // Setup Event Services\r\n  createSingletonService(IEventService, StandardEventService);\r\n  // Setup logger\r\n  createSingletonService(ILoggerFactory, StandardLoggerFactory);\r\n};\r\n","import \"./styles.css\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { HashRouter as Router, NavLink } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router\";\nimport Editor from \"./editor/Editor\";\nimport { setupIoC } from \"./SetupIoC\";\nimport NotificationCenter from \"./notificationCenter/NotificationCenter\";\nimport { Fabric } from \"office-ui-fabric-react/lib/Fabric\";\n// import { FluentCustomizations } from \"@uifabric/fluent-theme\";\n\nsetupIoC();\n\nfunction App() {\n  return (\n    <Fabric>\n      <div className=\"App\">\n        <Router>\n          <NavLink to=\"/\">Home</NavLink> {\" | \"}\n          <NavLink to=\"/text-editor\">Text Editor</NavLink> {\" | \"}\n          <NavLink to=\"/skill-editor\">Skill Editor</NavLink>\n          <Switch>\n            <Route path=\"/\" component={Editor} />\n          </Switch>\n        </Router>\n        <NotificationCenter />\n      </div>\n    </Fabric>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","import { Config } from \"../container/Config\";\nimport { IoCContainer, ConfigImpl } from \"../container/IoCContainer\";\nimport { AutoWired } from \"../decorator/AutoWired\";\nimport { Provider } from \"../api/Provider\";\nimport { Scope } from \"../api/Scope\";\n\n/**\n * The IoC Container class. Can be used to register and to retrieve your dependencies.\n * You can also use de decorators [[AutoWired]], [[Scoped]], [[Singleton]], [[Provided]] and [[Provides]]\n * to configure the dependency directly on the class.\n */\nexport class Container {\n  /**\n   * Add a dependency to the Container. If this type is already present, just return its associated\n   * configuration object.\n   * Example of usage:\n   *\n   * ```\n   * Container.bind(PersonDAO).to(ProgrammerDAO).scope(Scope.Singleton);\n   * ```\n   * @param source The type that will be bound to the Container\n   * @return a container configuration\n   */\n  public static bind(source: Function): Config {\n    if (!IoCContainer.isBound(source)) {\n      AutoWired(source);\n      return IoCContainer.bind(source).to(source);\n    }\n\n    return IoCContainer.bind(source);\n  }\n\n  /**\n   * Retrieve an object from the container. It will resolve all dependencies and apply any type replacement\n   * before return the object.\n   * If there is no declared dependency to the given source type, an implicity bind is performed to this type.\n   * @param source The dependency type to resolve\n   * @return an object resolved for the given source type;\n   */\n  public static get<T>(source: Function & { prototype: T }): T {\n    return IoCContainer.get(source);\n  }\n\n  /**\n   * Retrieve a type associated with the type provided from the container\n   * @param source The dependency type to resolve\n   * @return an object resolved for the given source type;\n   */\n  public static getType(source: Function) {\n    return IoCContainer.getType(source);\n  }\n\n  /**\n   * Store the state for a specified binding.  Can then be restored later.   Useful for testing.\n   * @param source The dependency type\n   */\n  public static snapshot(source: Function): void {\n    const config = Container.bind(source) as ConfigImpl;\n    Container.snapshots.providers.set(source, config.iocprovider);\n    if (config.iocscope) {\n      Container.snapshots.scopes.set(source, config.iocscope);\n    }\n    return;\n  }\n\n  /**\n   * Restores the state for a specified binding that was previously captured by snapshot.\n   * @param source The dependency type\n   */\n  public static restore(source: Function): void {\n    if (!Container.snapshots.providers.has(source)) {\n      throw new TypeError(\"Config for source was never snapshoted.\");\n    }\n    const config = Container.bind(source);\n    config.provider(Container.snapshots.providers.get(source) as any);\n    if (Container.snapshots.scopes.has(source)) {\n      config.scope(Container.snapshots.scopes.get(source) as any);\n    }\n  }\n\n  /**\n   * Internal storage for snapshots\n   * @type {providers: Map<Function, Provider>; scopes: Map<Function, Scope>}\n   */\n  private static snapshots: {\n    providers: Map<Function, Provider>;\n    scopes: Map<Function, Scope>;\n  } = {\n    providers: new Map(),\n    scopes: new Map()\n  };\n}\n","import {\r\n  InjectorHanlder,\r\n  IoCContainer,\r\n  ConfigImpl\r\n} from \"../container/IoCContainer\";\r\n\r\n/**\r\n * A decorator to tell the container that this class should its instantiation always handled by the Container.\r\n *\r\n * An AutoWired class will have its constructor overriden to always delegate its instantiation to the IoC Container.\r\n * So, if you write:\r\n *\r\n * ```\r\n * @ AutoWired\r\n * class PersonService {\r\n *   @ Inject\r\n *   personDAO: PersonDAO;\r\n * }\r\n * ```\r\n *\r\n * Any PersonService instance will be created by the IoC Container, even when a direct call to its constructor is called:\r\n *\r\n * ```\r\n * let PersonService = new PersonService(); // will be returned by Container, and all internal dependencies resolved.\r\n * ```\r\n *\r\n * It is the same that use:\r\n *\r\n * ```\r\n * Container.bind(PersonService);\r\n * let personService: PersonService = Container.get(PersonService);\r\n * ```\r\n */\r\nexport function AutoWired(target: Function) {\r\n  // <T extends {new(...args:any[]):{}}>(target:T) {\r\n  const newConstructor = InjectorHanlder.decorateConstructor(target);\r\n  const config: ConfigImpl = IoCContainer.bind(target) as ConfigImpl;\r\n  config.toConstructor(newConstructor);\r\n  return newConstructor;\r\n}\r\n","import { Provider } from \"./Provider\";\r\nimport { InjectorHanlder } from \"../container/IoCContainer\";\r\n\r\n/**\r\n * Class responsible to handle the scope of the instances created by the Container\r\n */\r\nexport abstract class Scope {\r\n  /**\r\n   * A reference to the LocalScope. Local Scope return a new instance for each dependency resolution requested.\r\n   * This is the default scope.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Local: Scope;\r\n  /**\r\n   * A reference to the SingletonScope. Singleton Scope return the same instance for any\r\n   * dependency resolution requested.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Singleton: Scope;\r\n\r\n  /**\r\n   * Method called when the Container needs to resolve a dependency. It should return the instance that will\r\n   * be returned by the Container.\r\n   * @param provider The provider associated with the current bind. Used to create new instances when necessary.\r\n   * @param source The source type of this bind.\r\n   * @return the resolved instance.\r\n   */\r\n  public abstract resolve(provider: Provider, source: Function): any;\r\n\r\n  /**\r\n   * Called by the IoC Container when some configuration is changed on the Container binding.\r\n   * @param source The source type that has its configuration changed.\r\n   */\r\n  public reset(source: Function) {\r\n    // Do nothing\r\n  }\r\n}\r\n\r\n/**\r\n * Default [[Scope]] that always create a new instace for any dependency resolution request\r\n */\r\nclass LocalScope extends Scope {\r\n  public resolve(provider: Provider, source: Function) {\r\n    return provider.get();\r\n  }\r\n}\r\n\r\nScope.Local = new LocalScope();\r\n\r\n/**\r\n * Scope that create only a single instace to handle all dependency resolution requests.\r\n */\r\nclass SingletonScope extends Scope {\r\n  private static instances: Map<Function, any> = new Map<Function, any>();\r\n\r\n  public resolve(provider: Provider, source: any) {\r\n    let instance: any = SingletonScope.instances.get(source);\r\n    if (!instance) {\r\n      source.__block_Instantiation = false;\r\n      instance = provider.get();\r\n      source.__block_Instantiation = true;\r\n      SingletonScope.instances.set(source, instance);\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  public reset(source: Function) {\r\n    SingletonScope.instances.delete(\r\n      InjectorHanlder.getConstructorFromType(source)\r\n    );\r\n  }\r\n}\r\n\r\nScope.Singleton = new SingletonScope();\r\n","export * from \"./api/Inject\";\r\nexport * from \"./api/Provider\";\r\nexport * from \"./api/Scope\";\r\n\r\nexport * from \"./create/CreateProviderService\";\r\nexport * from \"./create/CreateService\";\r\nexport * from \"./create/CreateSingletonProviderService\";\r\nexport * from \"./create/CreateSingletonService\";\r\nexport * from \"./create/CreateSingletonServiceFactory\";\r\n","import { Scope } from \"../api/Scope\";\nimport { Config } from \"./Config\";\nimport { Provider } from \"../api/Provider\";\n\n/**\n * Internal implementation of IoC Container.\n */\nexport class IoCContainer {\n  public static isBound(source: Function): boolean {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    const config: ConfigImpl | undefined = IoCContainer.bindings.get(\n      baseSource\n    );\n    return !!config;\n  }\n\n  public static bind(source: Function): Config {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    let config: ConfigImpl | undefined = IoCContainer.bindings.get(baseSource);\n    if (!config) {\n      config = new ConfigImpl(baseSource);\n      IoCContainer.bindings.set(baseSource, config);\n    }\n    return config;\n  }\n\n  public static get(source: Function) {\n    const config: ConfigImpl = IoCContainer.bind(source) as ConfigImpl;\n    if (!config.iocprovider) {\n      config.to(config.source as FunctionConstructor);\n    }\n    return config.getInstance();\n  }\n\n  public static getType(source: Function): Function {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    const config: ConfigImpl | undefined = IoCContainer.bindings.get(\n      baseSource\n    );\n    if (!config) {\n      throw new TypeError(\n        `The type ${source.name} hasn't been registered with the IOC Container`\n      );\n    }\n    return config.targetSource || config.source;\n  }\n\n  public static injectProperty(\n    target: any,\n    key: string,\n    propertyType: Function\n  ) {\n    const propKey = `__${key}`;\n    Object.defineProperty(target, key, {\n      enumerable: true,\n      get() {\n        return this[propKey]\n          ? this[propKey]\n          : (this[propKey] = IoCContainer.get(propertyType));\n      },\n      set(newValue) {\n        this[propKey] = newValue;\n      }\n    });\n  }\n\n  public static assertInstantiable(target: any) {\n    if (target.__block_Instantiation) {\n      throw new TypeError(\n        \"Can not instantiate Singleton class. \" +\n          \"Ask Container for it, using Container.get\"\n      );\n    }\n  }\n  private static bindings: Map<FunctionConstructor, ConfigImpl> = new Map<\n    FunctionConstructor,\n    ConfigImpl\n  >();\n}\n\n/**\n * Utility function to validate type\n */\nfunction checkType(source: Object) {\n  if (!source) {\n    throw new TypeError(\n      \"Invalid type requested to IoC \" + \"container. Type is not defined.\"\n    );\n  }\n}\n\nexport class ConfigImpl implements Config {\n  public source: Function;\n  public targetSource!: Function;\n  public iocprovider!: Provider;\n  public iocscope?: Scope;\n  public decoratedConstructor!: FunctionConstructor;\n  public paramTypes!: any[];\n\n  constructor(source: Function) {\n    this.source = source;\n  }\n\n  public to(target: FunctionConstructor) {\n    checkType(target);\n    const targetSource = InjectorHanlder.getConstructorFromType(target);\n    this.targetSource = targetSource;\n    if (this.source === targetSource) {\n      const configImpl = this;\n      this.iocprovider = {\n        get: () => {\n          const params = configImpl.getParameters();\n          if (configImpl.decoratedConstructor) {\n            return params\n              ? new configImpl.decoratedConstructor(...params)\n              : new configImpl.decoratedConstructor();\n          }\n          return params ? new target(...params) : new target();\n        }\n      };\n    } else {\n      this.iocprovider = {\n        get: () => {\n          return IoCContainer.get(target);\n        }\n      };\n    }\n    if (this.iocscope) {\n      this.iocscope.reset(this.source);\n    }\n    return this;\n  }\n\n  public provider(provider: Provider) {\n    this.iocprovider = provider;\n    if (this.iocscope) {\n      this.iocscope.reset(this.source);\n    }\n    return this;\n  }\n\n  public scope(scope: Scope) {\n    this.iocscope = scope;\n    if (scope === Scope.Singleton) {\n      (this as any).source.__block_Instantiation = true;\n      scope.reset(this.source);\n    } else if ((this as any).source.__block_Instantiation) {\n      delete (this as any).source.__block_Instantiation;\n    }\n    return this;\n  }\n\n  public withParams(...paramTypes: any[]) {\n    this.paramTypes = paramTypes;\n    return this;\n  }\n\n  public toConstructor(newConstructor: FunctionConstructor) {\n    this.decoratedConstructor = newConstructor;\n    return this;\n  }\n\n  public getInstance() {\n    if (!this.iocscope) {\n      this.scope(Scope.Local);\n    }\n    if (!this.iocscope) {\n      throw new Error(\"IocScope was not set correctly.\");\n    }\n    return this.iocscope.resolve(this.iocprovider, this.source);\n  }\n\n  private getParameters() {\n    if (this.paramTypes) {\n      return this.paramTypes.map(paramType => IoCContainer.get(paramType));\n    }\n    return null;\n  }\n}\n\n/**\n * Utility class to handle injection behavior on class decorations.\n */\nexport class InjectorHanlder {\n  public static constructorNameRegEx = /function (\\w*)/;\n\n  public static decorateConstructor(target: Function) {\n    let newConstructor: any;\n    // tslint:disable-next-line:class-name\n    newConstructor = class ioc_wrapper extends (target as FunctionConstructor) {\n      constructor(...args: any[]) {\n        super(...args);\n        IoCContainer.assertInstantiable(target);\n      }\n    };\n    newConstructor.__parent = target;\n    return newConstructor;\n  }\n\n  public static hasNamedConstructor(source: Function): boolean {\n    if (source.name) {\n      return source.name !== \"ioc_wrapper\";\n    } else {\n      try {\n        const constructorName = source.prototype.constructor\n          .toString()\n          .match(this.constructorNameRegEx)[1];\n        return constructorName && constructorName !== \"ioc_wrapper\";\n      } catch {\n        // make linter happy\n      }\n\n      return false;\n    }\n  }\n\n  public static getConstructorFromType(target: Function): FunctionConstructor {\n    let typeConstructor: any = target;\n    if (this.hasNamedConstructor(typeConstructor)) {\n      return typeConstructor as FunctionConstructor;\n    }\n    typeConstructor = typeConstructor.__parent;\n    while (typeConstructor) {\n      if (this.hasNamedConstructor(typeConstructor)) {\n        return typeConstructor as FunctionConstructor;\n      }\n      typeConstructor = typeConstructor.__parent;\n    }\n    throw TypeError(\n      \"Can not identify the base Type for requested target \" + target.toString()\n    );\n  }\n}\n","export * from \"./api/IEvent\";\r\nexport * from \"./api/IEventType\";\r\nexport * from \"./api/IEventService\";\r\n\r\nexport * from \"./model/EventType\";\r\n","import { IEvent } from \"./IEvent\";\r\nimport { IEventType } from \"./IEventType\";\r\n\r\nexport abstract class IEventService {\r\n  public abstract publish(event: IEvent): void;\r\n  public abstract on(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n  public abstract off(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n}\r\n","import { IEventType } from \"../api/IEventType\";\r\n\r\nexport class EventType implements IEventType {\r\n  constructor(public key: string) {}\r\n}\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const Inject = <T>(bind: Function): T => Container.get<T>(bind);\r\n","import { Provider } from \"../api/Provider\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createProviderService = (bind: Function, provider: Provider) =>\r\n  Container.bind(bind).provider(provider);\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const createService = (bind: Function, to: Object) =>\r\n  Container.bind(bind).to(to);\r\n","import { Container } from \"../model/Container\";\r\nimport { Provider } from \"../api/Provider\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonProviderService = (\r\n  bind: Function,\r\n  provider: Provider\r\n) =>\r\n  Container.bind(bind)\r\n    .provider(provider)\r\n    .scope(Scope.Singleton);\r\n","import { Scope } from \"../api/Scope\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createSingletonService = (bind: Function, to: Object) =>\r\n  Container.bind(bind)\r\n    .to(to)\r\n    .scope(Scope.Singleton);\r\n","import { Container } from \"../model/Container\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonServiceFactory = (\r\n  bind: Function,\r\n  provider: Function\r\n) =>\r\n  Container.bind(bind)\r\n    .provider({ get: () => provider() })\r\n    .scope(Scope.Singleton);\r\n"],"sourceRoot":""}