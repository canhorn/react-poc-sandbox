{"version":3,"sources":["core/event/api/IEventService.ts","core/event/model/EventType.ts","core/ioc/api/Inject.ts","core/ioc/create/CreateProviderService.ts","core/ioc/create/CreateService.ts","core/ioc/create/CreateSingletonProviderService.ts","core/ioc/create/CreateSingletonService.ts","core/ioc/create/CreateSingletonServiceFactory.ts","core/event/index.ts","core/ioc/index.ts","editor/state/EditorStateUpdated.ts","editor/state/EditorState.ts","editor/home/EditorHome.tsx","editor/text/file/FileEditor.tsx","editor/text/TextEditor.tsx","editor/sidebar/EditorSidebar.tsx","core/logger/api/ILoggerFactory.ts","core/logger/create/CreateLogger.ts","skill/changed/SkillChangedEvent.ts","skill/state/SkillEditorState.ts","skill/tutorial/change/TutorialStepChangedEvent.ts","skill/tutorial/state/TurorialState.ts","skill/tutorial/TutorialBubble.tsx","skill/list/SkillList.tsx","skill/editor/effect/SkillEffectList.tsx","skill/editor/validator/SkillValidatorList.tsx","skill/editor/effect/SkillEffectMappingEdit.tsx","skill/editor/UseSkillEffectSelected.ts","skill/editor/UseSkillEffectListState.ts","skill/editor/data/DataEditor.tsx","skill/editor/effect/SkillEffectEdit.tsx","skill/editor/SkillEditor.tsx","skill/SkillEditorContainer.tsx","editor/Editor.tsx","editor/state/FetchEditorState.ts","core/event/model/StandardEventService.ts","core/throttle/impl/Throttle.ts","core/logger/model/ConsoleLogger.ts","core/throttle/decorator/ThrottleMethod.ts","core/logger/factory/StandardLoggerFactory.ts","notificationCenter/NotificationCenter.tsx","SetupIoC.ts","index.tsx","core/ioc/model/Container.ts","core/ioc/decorator/AutoWired.ts","core/ioc/api/Scope.ts","core/ioc/container/IoCContainer.ts"],"names":["IEventService","Object","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","EventType","key","__webpack_require__","d","__webpack_exports__","Inject","_model_Container__WEBPACK_IMPORTED_MODULE_0__","bind","Container","get","createSingletonService","_api_Scope__WEBPACK_IMPORTED_MODULE_0__","_model_Container__WEBPACK_IMPORTED_MODULE_1__","to","scope","Scope","Singleton","_api_IEventType__WEBPACK_IMPORTED_MODULE_1__","o","_api_IEventService__WEBPACK_IMPORTED_MODULE_2__","_model_EventType__WEBPACK_IMPORTED_MODULE_3__","_api_Inject__WEBPACK_IMPORTED_MODULE_0__","_api_Provider__WEBPACK_IMPORTED_MODULE_1__","_create_CreateSingletonService__WEBPACK_IMPORTED_MODULE_6__","EDITOR_STATE_UPDATED","STATE","editorState","fileMenu","root","serverFileMap","Map","DEFAULT_FILE","id","type","content","setEditorState","eventService","arguments","length","undefined","assign","publish","getEditorState","setFileContent","file","updatedFile","set","getFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","getFileContent","stop","_x","apply","fileContentId","Promise","resolve","reject","fetch","concat","then","response","json","result","publishContentChanged","catch","error","MAIN_CONTENT_CHANGE_LISTENER","listenForMainContentChange","notificationFunction","context","handler","replace","c","r","Math","random","v","toString","forEach","changeListener","call","EditorHome","react_default","createElement","className","href","style","fontWeight","FileEditor","state","fileId","options","selectOnLineNumbers","_onChangeHandler","editorDidMount","getCurrentValue","editor","console","log","_this","props","match","params","setState","onChange","newValue","e","onContentChanged","delete","_this2","ex","prevProps","_this3","react","lib_default","width","height","language","theme","value","React","TextEditor","react_router","path","component","Component","EditorSidebar","map","menuItem","EditorSidebar_SidebarMenuItem","SidebarMenuItem","paddingLeft","isFolder","name","react_router_dom","getContentUrl","children","menuItemChild","ILoggerFactory","classCallCheck","createLogger","loggerName","create","SKILL_CHANGED_EVENT","instanceOfEvent","data","SKILL_MAP","SKILL_LIST","skillEditorState","skillList","skill","push","getSkillList","getSkill","skillId","updateSkill","objectSpread","$$pendingSave","splice","actionType","TUTORIAL_STEP_CHANGED_EVENT","tutorialStep","getStep","updateStep","step","TutorialBubble","stepKey","_useState","useState","createRef","_useState2","slicedToArray","target","setTarget","_useState3","_useState4","setStep","useEffect","onStepChanged","on","off","isVisible","Fragment","ref","Coachmark","positioningContainerProps","directionalHint","doNotLayer","TeachingBubbleContent","hasCloseIcon","closeButtonAriaLabel","onDismiss","text","tutorialSteps","steps","COLUMNS","fieldName","minWidth","maxWidth","isResizable","skillContainsFilterParser","filter","toLocaleLowerCase","indexOf","deepSearchSkill","substring","searchSkill","description","JSON","stringify","SkillList","history","setFilter","_useState5","_useState6","detailsList","setDetailsList","TextField","label","underlined","ev","DetailsList","items","selectionMode","SelectionMode","none","columns","setKey","layoutMode","DetailsListLayoutMode","justified","onItemInvoked","onRenderItemColumn","item","index","column","fieldContent","getId","onRenderRow","hostId","customStyles","TooltipHost","calloutProps","gapSpace","DetailsRow","styles","filterSearch","search","effect","SkillEffectList","effectList","onSelected","onAdd","onDelete","filteredList","setFilteredList","isHeaderVisible","IconButton","menuIconProps","iconName","role","aria-haspopup","aria-label","float","menuProps","onClick","DefaultButton","validator","SkillValidatorList","validatorList","stackStyles","stackItemStyles","display","minHeight","padding","headerStyles","stackTokens","childrenGap","SkillEffectMappingEdit","failedList","_ref$events","events","onValidatorSelect","onEffectSelect","onFailedSelect","onValidatorAddClicked","onEffectAddClick","onEffectDeleteClick","onFailedAddClick","onFailedDeleteClick","Stack","horizontal","tokens","Item","grow","Text","variant","useSkillEffectSelected","selectedSkillEffect","setSelectedSkillEffect","selectedSkillEffectIndex","setSelectedSkillEffectIndex","selectedSkillFailedIndex","setSelectedSkillFailedIndex","effectIndex","failedIndex","reset","useSkillEffectListState","toConsumableArray","comment","onValidatorDeleteClick","toDeleteIndex","_","DataEditor","onParentChange","isOpen","setIsOpen","dataItems","setDataItems","keys","RenderStringDataEditor","_ref2","newData","defineProperty","Modal","containerClassName","CommandBar","cacheKey","iconProps","ariaLabel","subMenuProps","List","onRenderCell","data-is-focusable","SkillEffectEdit","onChangeToParent","onBackToParent","onBack","_useSkillEffectSelect","_useSkillEffectListSt","DataEditor_DataEditor","SkillEditor","setSkill","onSkillUpdated","onSkillEffectChanged","createOnSkillEffectChanged","nowrap","block","onContextMenu","alert","SkillEditorContainer","Editor","_logger","_eventService","onEditorStateUpdated","t0","EditorSidebar_EditorSidebar","StandardEventService","_eventListenerList","createClass","event","eventListeners","len","listener","function","eventListener","listenerList","throttle","fn","threshold","last","Date","now","args","LOGGED_MESSAGE_LIST","window","LOGGED_MESSAGES","ConsoleLogger","_dec","propertyKey","descriptor","method","_class","_name","_isDebug","_isTrace","message","messageToLog","formattedNowDate","throttledLog","level","info","throttledTrace","trace","toUTCString","applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor","StandardLoggerFactory","NotificationCenter","initializeIcons","rootElement","document","getElementById","render","Fabric","NotificationCenter_NotificationCenter","source","IoCContainer","isBound","newConstructor","InjectorHanlder","decorateConstructor","toConstructor","AutoWired","getType","config","snapshots","providers","iocprovider","iocscope","scopes","has","TypeError","provider","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","Local","LocalScope","SingletonScope","instance","instances","__block_Instantiation","getConstructorFromType","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","checkType","baseSource","bindings","ConfigImpl","getInstance","targetSource","propertyType","propKey","enumerable","decoratedConstructor","paramTypes","configImpl","getParameters","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__","_len","Array","_key","Error","paramType","ioc_wrapper","_getPrototypeOf2","_len2","_key2","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","assertInstantiable","C_Users_codya_Source_GitHub_react_poc_sandbox_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","__parent","constructorName","constructor","constructorNameRegEx","_unused","typeConstructor","hasNamedConstructor"],"mappings":"gMAGsBA,EAAtB,SAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,iFCDaI,EACX,SAAAA,EAAmBC,GAAcJ,OAAAC,EAAA,EAAAD,CAAAE,KAAAC,GAAAD,KAAdE,yCCHrBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,IAEaG,EAAS,SAAIE,GAAJ,OAA0BC,IAAUC,IAAOF,0DCDjEL,EAAA,sCCDAA,EAAA,sCCAAA,EAAA,IAAAA,EAAA,sCCAAA,EAAAC,EAAAC,EAAA,sBAAAM,IAAA,IAAAC,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAGaQ,EAAyB,SAACH,EAAgBM,GAAjB,OACpCL,IAAUD,KAAKA,GACZM,GAAGA,GACHC,MAAMC,IAAMC,8CCNjBd,EAAA,IAAAA,EAAA,wxSCAAA,EAAA,SAAAe,EAAAf,EAAA,KAAAA,EAAAgB,EAAAD,EAAA,cAAAf,EAAAC,EAAAC,EAAA,8BAAAa,EAAA,YAAAf,EAAAgB,EAAAD,EAAA,kBAAAf,EAAAC,EAAAC,EAAA,kCAAAa,EAAA,oBAAAE,EAAAjB,EAAA,KAAAA,EAAAC,EAAAC,EAAA,kCAAAe,EAAA,QAAAC,EAAAlB,EAAA,KAAAA,EAAAC,EAAAC,EAAA,8BAAAgB,EAAA,yLCAA,IAAAC,EAAAnB,EAAA,KAAAA,EAAAC,EAAAC,EAAA,2BAAAiB,EAAA,QAAAC,EAAApB,EAAA,KAAAA,EAAAgB,EAAAI,EAAA,2BAAApB,EAAAC,EAAAC,EAAA,2CAAAkB,EAAA,yBAAApB,EAAA,IAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,SAAAqB,EAAArB,EAAA,KAAAA,EAAAC,EAAAC,EAAA,2CAAAmB,EAAA,IAAArB,EAAA,4PCEasB,EAAmC,IAAIxB,YAClD,wBCMIyB,EAAuB,CAC3BC,YAAa,CACXC,SAAU,CACRC,KAAM,KAGVC,cAAe,IAAIC,KAGRC,EAA4B,CACvCC,GAAI,aACJC,KAAM,YACNC,QAAS,cAGEC,EAAiB,SAC5BT,GAEG,IADHU,EACGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2BhC,iBAAOT,iBAErCC,OAAO2C,OAAOf,EAAMC,YAAaA,GACjCU,EAAaK,QDvB6C,CAC1DR,KAAMT,KCyBKkB,EAAiB,kBAAMjB,EAAMC,aAM7BiB,EAAiB,SAACX,EAAYE,GACzC,IAAMU,EAAOnB,EAAMI,cAAcpB,IAAIuB,IAAO,CAAEA,KAAIC,KAAM,MAAOC,WACzDW,EAAchD,OAAO2C,OAAO,GAAII,EAAM,CAAEV,YAC9CT,EAAMI,cAAciB,IAAId,EAAIa,IAGjBE,EAAO,eAAAC,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,EAAAC,EAAAC,KAAG,SAAAC,EAAOrB,GAAP,IAAAY,EAAA,OAAAM,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfb,EAAOnB,EAAMI,cAAcpB,IAAIuB,GADhB,CAAAuB,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAIZC,EAAe3B,IAJH,cAAAuB,EAAAG,OAAA,SAMdd,GANc,wBAAAW,EAAAK,SAAAP,MAAH,gBAAAQ,GAAA,OAAAb,EAAAc,MAAA/D,KAAAsC,YAAA,GAYPsB,EAAiB,SAACI,GAAD,OAC5B,IAAIC,QAAqB,SAACC,EAASC,GACjCC,MAAK,sBAAAC,OAAuBL,EAAvB,UACFM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAIJ,OAFA/C,EAAMI,cAAciB,IAAIiB,EAAeS,GACvCC,IACOD,IAERH,KAAK,SAAAG,GAAM,OAAIP,EAAQO,KACvBE,MAAM,SAAAC,GAAK,OAAIT,EAAOS,QAKvBC,EAA4D,IAAI9C,IAKzD+C,EAA6B,SACxCC,EACAC,GAEA,IAAMC,EAwCC,uCAAuCC,QAAQ,QAAS,SAASC,GACtE,IAAIC,EAAqB,GAAhBC,KAAKC,SAAiB,EAC7BC,EAAU,MAANJ,EAAYC,EAAS,EAAJA,EAAW,EAClC,OAAOG,EAAEC,SAAS,MAtCpB,OAJAX,EAA6B9B,IAAIkC,EAAS,CACxCF,uBACAC,YAEKC,GAKIP,EAAwB,WACnCG,EAA6BY,QAAQ,SAAAC,GACnCA,EAAeX,qBAAqBY,KAAKD,EAAeV,mBC1F7C,SAASY,IACpB,OACIC,EAAAzC,EAAA0C,cAAA,OAAKC,UAAU,eACXF,EAAAzC,EAAA0C,cAAA,yBACAD,EAAAzC,EAAA0C,cAAA,0BACAD,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,oDAC4C,IACxCD,EAAAzC,EAAA0C,cAAA,KAAGE,KAAK,4DAAR,cAIJH,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,QAAMG,MAAO,CAAEC,WAAY,SAA3B,iBAA0D,IAD9D,YAEc,IACVL,EAAAzC,EAAA0C,cAAA,KAAGE,KAAK,wDAAR,iBAHJ,qDAQAH,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,QAAMG,MAAO,CAAEC,WAAY,SAA3B,iBAA0D,IAD9D,wBAE0B,IACtBL,EAAAzC,EAAA0C,cAAA,KAAGE,KAAK,gDAAR,aAEK,IALT,2FAQIH,EAAAzC,EAAA0C,cAAA,OAAKG,MAAO,CAAEC,WAAY,SAA1B,yBAGAL,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,QAAMG,MAAO,CAAEC,WAAY,SAA3B,eAEQ,IAHZ,wEAOAL,EAAAzC,EAAA0C,cAAA,UACID,EAAAzC,EAAA0C,cAAA,QAAMG,MAAO,CAAEC,WAAY,SAA3B,aAEQ,IAHZ,8ICyFTC,6MAzGbC,MAA0B,CACxBC,OAAQ,YACRxD,KAAMb,EACNsE,QAAS,CACPC,qBAAqB,MAGjBC,0BA8BRC,eAAiB,SAACC,EAA+BC,GAC/CC,QAAQC,IAAI,iBAAkB,CAAEH,kBAAiBC,WAGxB,OAArBG,EAAKC,MAAMC,QACbJ,QAAQC,IAAI,WAAYC,EAAKC,MAAMC,MAAMC,OAAOZ,QAChDrD,EAAQ8D,EAAKC,MAAMC,MAAMC,OAAOZ,QAAQ/B,KAAK,SAAAzB,GAAI,OAC/CiE,EAAKI,SAAS,CACZrE,eAKRsE,SAAW,SAACC,EAAkBC,GAC5BT,QAAQC,IAAIC,EAAKV,MAAMC,QACG,cAAtBS,EAAKV,MAAMC,SAGfO,QAAQC,IAAI,WAAYO,EAAUC,GAClCzE,EAAekE,EAAKV,MAAMC,OAAQe,gMA/ClCpH,KAAKwG,iBAAmB1B,EACtB9E,KAAKsH,iBACLtH,uJFmDwC,IAACiF,IE/CZjF,KAAKwG,iBFgDtC3B,EAA6B0C,OAAOtC,8CE9CT,IAAAuC,EAAAxH,KACzB,IACE,IAAIA,KAAK+G,MAAMC,MACb,OAEFhH,KAAKkH,SAAS,CACZb,OAAQrG,KAAK+G,MAAMC,MAAMC,OAAOZ,OAChCxD,KAAMb,IAERgB,EAAQhD,KAAK+G,MAAMC,MAAMC,OAAOZ,QAC7B/B,KAAK,SAAAzB,GACJ2E,EAAKN,SAAS,CACZrE,WAGH8B,MAAM,SAAAC,GAAK,OAAIgC,QAAQhC,MAAM,QAASA,KACzC,MAAO6C,GACPb,QAAQhC,MAAM,QAAS6C,+CAwBRC,GAA6B,IAAAC,EAAA3H,KAC1C0H,EAAUV,OAAUhH,KAAK+G,MAAMC,OAG/BU,EAAUV,MAAMC,OAAOZ,SAAWrG,KAAK+G,MAAMC,MAAMC,OAAOZ,SAC5DrG,KAAKkH,SAAS,CACZb,OAAQrG,KAAK+G,MAAMC,MAAMC,OAAOZ,OAChCxD,KAAMb,IAERgB,EAAQhD,KAAK+G,MAAMC,MAAMC,OAAOZ,QAC7B/B,KAAK,SAAAzB,GACA8E,EAAKZ,MAAMC,OAGfW,EAAKT,SAAS,CACZb,OAAQsB,EAAKZ,MAAMC,MAAMC,OAAOZ,OAChCxD,WAGH8B,MAAM,SAAAC,GAAK,OAAIgC,QAAQhC,MAAM,QAASA,uCAIpC,IACC/B,EAAS7C,KAAKoG,MAAdvD,KACJwD,EAAS,UAIb,OAHGrG,KAAK+G,MAAMC,QACZX,EAASrG,KAAK+G,MAAMC,MAAMC,OAAOZ,QAGjCuB,EAAA,qBAAK7B,UAAU,eACb6B,EAAA,6BAAOvB,EAAP,KACAuB,EAAA,cAACC,EAAAzE,EAAD,CACElD,IAAI,YACJ4H,MAAM,OACNC,OAAQ,IACRC,SAAS,OACTC,MAAM,OACNC,MAAOrF,EAAKV,QACZmE,QAAStG,KAAKoG,MAAME,QACpBG,eAAgBzG,KAAKyG,yBAnGN0B,aCAVC,6MAfbhC,MAA0B,qTAIxB,OACEwB,EAAA,qBAAK7B,UAAU,eACb6B,EAAA,uCACAA,EAAA,yBACEA,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,4BAA4BC,UAAWpC,aATpCqC,aCCJC,qNACjBrC,MAAgB,2EAGZ,OACIwB,EAAA,qBAAK7B,UAAU,kBAAf,mBAEK/F,KAAK+G,MAAMpF,YAAYC,SAASC,KAAK6G,IAAI,SAAAC,GAAQ,OAC9Cf,EAAA,cAACgB,EAAD,CAAiB1I,IAAKyI,EAAS1G,GAAI0G,SAAUA,cARtBR,cAerCU,mLACO,IACGF,EAAa3I,KAAK+G,MAAlB4B,SACR,OACIf,EAAA,qBAAK3B,MAAO,CAAE6C,YAAa,QACtBH,EAASI,SACNnB,EAAA,0BAAOe,EAASK,MAEhBpB,EAAA,cAACqB,EAAA,EAAD,CAASlD,UAAU,YAAYjF,GAAIoI,EAAcP,IAC5CA,EAASK,MAGlBpB,EAAA,0BACMe,EAASQ,UAAY,IAAIT,IAAI,SAAAU,GAAa,OACxCxB,EAAA,cAACiB,EAAD,CACI3I,IAAKkJ,EAAcnH,GACnB0G,SAAUS,eAhBRjB,aAyBxBe,EAAgB,SAACP,GACnB,2BAAAtE,OAA4BsE,EAAS1G,KCjDnBoH,EAAtB,SAAAA,IAAAvJ,OAAAwJ,EAAA,EAAAxJ,CAAAE,KAAAqJ,ICEaE,EAAe,SAC1BC,GAD0B,OAAAlH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAEMhC,iBAAO+I,IACbI,OAAOD,wFCAtBE,EAAsB,IAAIzJ,YAAU,6BAK3C0J,EAAkB,0CAHbzH,KAAmBwH,OACnBE,aCALC,EAAiC,IAAI9H,IACrC+H,EAAuB,GAQfC,EANWC,UACXvE,QAAQ,SAAAwE,GACdH,EAAWI,KAAKD,GAChBJ,EAAU9G,IAAIkH,EAAMhI,GAAIgI,KAKzB,IAAME,EAAe,kBAAML,GAErBM,GAAW,SAACC,GACrB,OAAOR,EAAUnJ,IAAI2J,IAGZC,GAAc,SACvBL,GAEC,IDhBDL,ECeAvH,EACCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6BhC,iBAAOT,iBAErCgK,EAAU9G,IAAIkH,EAAMhI,GAApBnC,OAAAyK,EAAA,EAAAzK,CAAA,GAA6BmK,EAA7B,CAAoCO,eAAe,KACnDV,EAAWW,OAAO,EAAGX,EAAWvH,QAChCsH,EAAUpE,QAAQ,SAAAwE,GACdH,EAAWI,KAAKD,KAEpB5H,EAAaK,SDtBbkH,ECuB4B,CAAEc,WAAY,mBDrB1Cf,EAAgBC,KAAOA,EAChBD,yBEVEgB,GAA8B,IAAI1K,YAC3C,wCAME0J,GAAkB,0CAHbzH,KAAmByI,QACnBf,uBCGLlI,GAAgB,CAClBkJ,aAAc,IAAI7I,KAGT8I,GAAU,SAAC3K,GAAD,OAAiBwB,GAAMkJ,aAAalK,IAAIR,IAClD4K,GAAa,SACtBC,GAEC,IDPDnB,ECMAvH,EACCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6BhC,iBAAOT,iBAErC6B,GAAMkJ,aAAa7H,IAAIgI,EAAK7K,IAAK6K,GACjC1I,EAAaK,SDTbkH,ECSoD,GDPpDD,GAAgBC,KAAOA,EAChBD,MERI,SAASqB,GAAT/H,GAAuD,IAA7BgI,EAA6BhI,EAA7BgI,QAAS9B,EAAoBlG,EAApBkG,SAAoB+B,EACtCC,mBAAcC,uBADwBC,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GAC3DK,EAD2DF,EAAA,GACnDG,EADmDH,EAAA,GAAAI,EAE1CN,mBAASN,GAAQI,IAFyBS,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAE3DV,EAF2DW,EAAA,GAErDC,EAFqDD,EAAA,GA6BlE,OAnBAE,oBAAU,WACN,IAAMvJ,EAA8B/B,iBAAOT,iBACrCgM,EAAgB,WAClBF,EAAQd,GAAQI,KAOpB,OALA5I,EAAayJ,GACTnB,GACAkB,EACA,kBAEG,WACHxJ,EAAa0J,IACTpB,GACAkB,EACA,oBAGT,CAACZ,IAECF,GAASA,EAAKiB,UAKfnG,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAAA,OAAKoG,IAAKV,GAAYrC,GACtBtD,EAAAzC,EAAA0C,cAACqG,GAAA,EAAD,CACIZ,OAAQA,EACRa,0BAA2B,CACvBC,gBAAiBtB,EAAKsB,gBACtBC,YAAY,IAGhBzG,EAAAzC,EAAA0C,cAACyG,GAAA,EAAD,CACIC,cAAc,EACdC,qBAAqB,QACrBC,UA3CE,WACT3B,IAGLD,GAAWhL,OAAAyK,EAAA,EAAAzK,CAAA,GAAKiL,EAAN,CAAYiB,WAAW,KACjCL,EAAQd,GAAQI,OAwCHF,EAAK4B,QAlBX9G,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KAAG9C,GDXdyD,GAAcC,MAAMpH,QAAQ,SAAAsF,GAAI,OAC5BrJ,GAAMkJ,aAAa7H,IAAIgI,EAAK7K,IAAK6K,KEbzC,IAAM+B,GAAU,CACZ,CACI5M,IAAK,KACL8I,KAAM,KACN+D,UAAW,KACXC,SAAU,IACVC,SAAU,IACVC,aAAa,GAEjB,CACIhN,IAAK,OACL8I,KAAM,OACN+D,UAAW,OACXC,SAAU,IACVC,SAAU,IACVC,aAAa,IAIRC,GAA4B,SAAClD,EAAemD,GACrD,OAA0D,IAAtDA,EAAOC,oBAAoBC,QAAQ,eAC5BC,GAAgBtD,EAAOmD,EAAOI,UAAU,KAE5CC,GAAYxD,EAAOmD,IAGjBK,GAAc,SAACxD,EAAemD,GAAhB,OACvBnD,EAAMhI,GAAGoL,oBAAoBC,QAAQF,EAAOC,sBAAwB,GACpEpD,EAAMjB,KAAKqE,oBAAoBC,QAAQF,EAAOC,sBAAwB,GACtEpD,EAAMyD,YAAYL,oBAAoBC,QAAQF,EAAOC,sBACjD,GACJpD,EAAM/H,KAAKmL,oBAAoBC,QAAQF,EAAOC,sBAAwB,GACtEpD,EAAMsB,OAAO8B,oBAAoBC,QAAQF,EAAOC,sBAAwB,GAE/DE,GAAkB,SAACtD,EAAemD,GAAhB,OAC3BO,KAAKC,UAAU3D,GAAS,IACnBoD,oBACAC,QAAQF,EAAOC,sBAAwB,GAEzC,SAASQ,GAAT5K,GAA4DA,EAAvC+D,MAAuC,IAAhC8G,EAAgC7K,EAAhC6K,QAAgC5C,EAC3CC,mBAAShB,KAAtBH,EADwDlK,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,MAAAO,EAEnCN,mBAAiB,IAFkBO,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAExD2B,EAFwD1B,EAAA,GAEhDqC,EAFgDrC,EAAA,GAAAsC,EAGzB7C,mBAAmB,IAHM8C,EAAAnO,OAAAwL,EAAA,EAAAxL,CAAAkO,EAAA,GAGxDE,EAHwDD,EAAA,GAG3CE,EAH2CF,EAAA,GAI/DrC,oBAAU,WACNuC,EACInE,EACKtB,IAAI,SAACuB,GAAD,OAAAnK,OAAAyK,EAAA,EAAAzK,CAAA,GACEmK,KAENmD,OACG,SAACnD,GAAD,MACe,KAAXmD,GACAD,GAA0BlD,EAAOmD,OAGlD,CAACpD,EAAWoD,IAmDf,OACIvH,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAM,UACNC,YAAU,EACVZ,YAAY,0DACZvG,SApDS,SACjBoH,EACA5B,GAEAoB,EAAUpB,GAAQ,OAkDd9G,EAAAzC,EAAA0C,cAACkF,GAAD,CAAgBC,QAAQ,UACpBpF,EAAAzC,EAAA0C,cAAC0I,EAAA,EAAD,CACIC,MAAOP,EACPQ,cAAeC,IAAcC,KAC7BC,QAAS/B,GACTgC,OAAO,MACPC,WAAYC,IAAsBC,UAClCC,cAjEM,SAACjF,GACnBrD,QAAQC,IAAI,QAAUoD,EAAMjB,MAC5B8E,EAAQ5D,KAAR,sBAAA7F,OAAmC4F,EAAMhI,MAgE7BkN,mBAxDW,SACvBC,EACAC,EACAC,GAEA,QAAa9M,IAAT4M,QAAiC5M,IAAX8M,EACtB,OAAOzJ,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,kBAEX,IAAMsD,EAAeH,EAAKE,EAAOvC,WAEjC,GAAIqC,EAAK5E,eAAsC,OAArB8E,EAAOvC,UAG7B,OAFuByC,YAAM,mCAEtB3J,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,UAAKsD,GAEhB,OAAO1J,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KAAGsD,IA0CEE,YAxCI,SAAC1I,GACjB,IAAM2I,EAAiBF,YAAM,mCAC7B,QAAchN,IAAVuE,EACA,OAAOlB,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,kBAGX,GADqBlF,EAAMqI,KAClB5E,cAAe,CACpB,IAAMmF,EAA2C,CACjDA,KAAoB,CAChBzJ,WAAY,SAEhB,OACIL,EAAAzC,EAAA0C,cAAC8J,EAAA,EAAD,CACIzN,QAAQ,gCACRF,GAAIyN,EACJG,aAAc,CAAEC,SAAU,IAE1BjK,EAAAzC,EAAA0C,cAACiK,EAAA,EAADjQ,OAAA2C,OAAA,GAAgBsE,EAAhB,CAAuBiJ,OAAQL,MAI3C,OAAO9J,EAAAzC,EAAA0C,cAACiK,EAAA,EAAehJ,oDC9GzB+F,GAAU,CACZ,CACI5M,IAAK,SACL8I,KAAM,SACN+D,UAAW,SACXC,SAAU,IACVC,SAAU,IACVC,aAAa,IAIR+C,GAAe,SAAChG,EAAqBmD,GAC9C,OAA0D,IAAtDA,EAAOC,oBAAoBC,QAAQ,eAC5BC,GAAgBtD,EAAOmD,EAAOI,UAAU,KAE5C0C,GAAOjG,EAAOmD,IAGZ8C,GAAS,SAACC,EAAsB/C,GAAvB,OAClB+C,EAAOA,OAAO9C,oBAAoBC,QAAQF,EAAOC,sBAAwB,GAEhEE,GAAkB,SAAC4C,EAAsB/C,GAAvB,OAC3BO,KAAKC,UAAUuC,GAAU,IACpB9C,oBACAC,QAAQF,EAAOC,sBAAwB,GASzC,SAAS+C,GAATnN,GAKI,IAJPoN,EAIOpN,EAJPoN,WACAC,EAGOrN,EAHPqN,WACAC,EAEOtN,EAFPsN,MACAC,EACOvN,EADPuN,SACOtF,EACqBC,mBAAiB,IADtCE,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GACAkC,EADA/B,EAAA,GACQ0C,EADR1C,EAAA,GAAAI,EAEiCN,mBAAyB,IAF1DO,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAEAgF,EAFA/E,EAAA,GAEcgF,EAFdhF,EAAA,GAGPE,oBAAU,WACN8E,EACIL,EACK3H,IAAI,SAACyH,GAAD,OAAArQ,OAAAyK,EAAA,EAAAzK,CAAA,GACEqQ,KAEN/C,OACG,SAAC+C,GAAD,MACe,KAAX/C,GAAiB6C,GAAaE,EAAQ/C,OAGvD,CAACiD,EAAYjD,IAgDhB,OACIvH,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAM,UACNC,YAAU,EACVZ,YAAY,2DACZvG,SAhDS,SACjBoH,EACA5B,GAEAoB,EAAUpB,GAAQ,OA8Cd9G,EAAAzC,EAAA0C,cAACkF,GAAD,CAAgBC,QAAQ,UACpBpF,EAAAzC,EAAA0C,cAAC0I,EAAA,EAAD,CACIC,MAAOgC,EACP/B,cAAeC,IAAcC,KAC7BC,QAAS/B,GACT6D,iBAAiB,EACjB7B,OAAO,MACPC,WAAYC,IAAsBC,UAClCC,cA/DM,SAACiB,EAAsBd,QAC3B7M,IAAV6M,GACAiB,EAAWjB,IA8DHF,mBArDW,SACvBC,EACAC,EACAC,GAEA,QAAc9M,IAAV6M,QAAkC7M,IAAX8M,EAA3B,CAGA,IAAMC,EAAeH,EAAKE,EAAOvC,WAEjC,MAAmB,WAAfuC,EAAOpP,IAEH2F,EAAAzC,EAAA0C,cAAA,WACKyJ,EACD1J,EAAAzC,EAAA0C,cAAC8K,GAAA,EAAD,CACIC,cAAe,CAAEC,SAAU,gBAC3BC,KAAK,SACLC,iBAAe,EACfC,aAAW,eACXjB,OAAQ,CAAEnO,KAAM,CAAEqP,MAAO,QAASnJ,OAAQ,YAC1CoJ,UAAW,CACP1C,MAAO,CACH,CACIvO,IAAK,SACLyM,KAAM,SACNyE,QAAS,kBAAMZ,EAASnB,UAQzCxJ,EAAAzC,EAAA0C,cAAA,YAAOyJ,QAuBbgB,EAAQ1K,EAAAzC,EAAA0C,cAACuL,GAAA,EAAD,CAAeD,QAASb,GAAxB,OAAqD,ICzH1E,IAAMzD,GAAU,CACZ,CACI5M,IAAK,YACL8I,KAAM,YACN+D,UAAW,YACXC,SAAU,IACVC,SAAU,IACVC,aAAa,IAIR+C,GAAe,SAAChG,EAAwBmD,GACjD,OAA0D,IAAtDA,EAAOC,oBAAoBC,QAAQ,eAC5BC,GAAgBtD,EAAOmD,EAAOI,UAAU,KAE5C0C,GAAOjG,EAAOmD,IAGZ8C,GAAS,SAACoB,EAA4BlE,GAA7B,OAClBkE,EAAUA,UACLjE,oBACAC,QAAQF,EAAOC,sBAAwB,GAEnCE,GAAkB,SAAC+D,EAA4BlE,GAA7B,OAC3BO,KAAKC,UAAU0D,GAAa,IACvBjE,oBACAC,QAAQF,EAAOC,sBAAwB,GAQzC,SAASkE,GAATtO,GAII,IAHPuO,EAGOvO,EAHPuO,cACAlB,EAEOrN,EAFPqN,WACAC,EACOtN,EADPsN,MACOrF,EACqBC,mBAAiB,IADtCE,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GACAkC,EADA/B,EAAA,GACQ0C,EADR1C,EAAA,GAAAI,EAEiCN,mBAA4B,IAF7DO,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAEAgF,EAFA/E,EAAA,GAEcgF,EAFdhF,EAAA,GAGPE,oBAAU,WACN8E,EACIc,EACK9I,IAAI,SAAC4I,GAAD,OAAAxR,OAAAyK,EAAA,EAAAzK,CAAA,GACEwR,KAENlE,OACG,SAACkE,GAAD,MACe,KAAXlE,GAAiB6C,GAAaqB,EAAWlE,OAG1D,CAACoE,EAAepE,IAUnB,OACIvH,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAM,UACNC,YAAU,EACVZ,YAAY,8DACZvG,SAZS,SACjBoH,EACA5B,GAEAoB,EAAUpB,GAAQ,OAUd9G,EAAAzC,EAAA0C,cAACkF,GAAD,CAAgBC,QAAQ,UACpBpF,EAAAzC,EAAA0C,cAAC0I,EAAA,EAAD,CACIC,MAAOgC,EACP/B,cAAeC,IAAcC,KAC7BC,QAAS/B,GACT6D,iBAAiB,EACjB7B,OAAO,MACPC,WAAYC,IAAsBC,UAClCC,cAzBM,SAACoC,GACnBhB,EAAWgB,OA2BNf,EAAQ1K,EAAAzC,EAAA0C,cAACuL,GAAA,EAAD,CAAeD,QAASb,GAAxB,OAAqD,IChF1E,IAAMkB,GAA4B,CAC9B5P,KAAM,IAEJ6P,GAAoC,CACtC7P,KAAM,CACFqE,WAAY,OACZyL,QAAS,OACTC,UAAW,OACX9J,MAAO,MACP+J,QAAS,QAGXC,GAA4B,CAC9BjQ,KAAM,CACFqE,WAAY,SAGd6L,GAA4B,CAC9BC,YAAa,EACbH,QAAS,OAoBE,SAASI,GAAThP,GAeJ,IAdPuO,EAcOvO,EAdPuO,cACAnB,EAaOpN,EAbPoN,WACA6B,EAYOjP,EAZPiP,WAYOC,EAAAlP,EAXPmP,OACIC,EAUGF,EAVHE,kBACAC,EASGH,EATHG,eACAC,EAQGJ,EARHI,eAEAC,EAMGL,EANHK,sBACAC,EAKGN,EALHM,iBACAC,EAIGP,EAJHO,oBACAC,EAGGR,EAHHQ,iBACAC,EAEGT,EAFHS,oBAGJ,OACI/M,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAD,CAAOC,YAAU,EAAC9C,OAAQyB,GAAasB,OAAQhB,IAC3ClM,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAMG,KAAP,CAAYC,KAAM,EAAGjD,OAAQ0B,IACzB7L,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAD,CAAO7C,OAAQ,CAAEnO,KAAM,CAAEiG,MAAO,UAC5BjC,EAAAzC,EAAA0C,cAACoN,GAAA,EAAD,CAAMlD,OAAQ8B,GAAcqB,QAAS,SAArC,QAGAtN,EAAAzC,EAAA0C,cAACsK,GAAD,CACIC,WAAYA,EACZC,WAAYgC,EACZ/B,MAAOkC,EACPjC,SAAUkC,MAItB7M,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAMG,KAAP,CAAYC,KAAM,EAAGjD,OAAQ0B,IACzB7L,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAD,CAAO7C,OAAQ,CAAEnO,KAAM,CAAEiG,MAAO,UAC5BjC,EAAAzC,EAAA0C,cAACoN,GAAA,EAAD,CAAMlD,OAAQ8B,GAAcqB,QAAS,SAArC,cAGAtN,EAAAzC,EAAA0C,cAACyL,GAAD,CACIC,cAAeA,EACflB,WAAY+B,EACZ9B,MAAOiC,IAEX3M,EAAAzC,EAAA0C,cAAA,MAAIG,MAAO,CAAE6B,MAAO,UACpBjC,EAAAzC,EAAA0C,cAACoN,GAAA,EAAD,CAAMlD,OAAQ8B,GAAcqB,QAAS,SAArC,WAGAtN,EAAAzC,EAAA0C,cAACsK,GAAD,CACIC,WAAY6B,GAAc,GAC1B5B,WAAYiC,EACZhC,MAAOoC,EACPnC,SAAUoC,OCjG3B,IAAMQ,GAAyB,SAClCjD,GACC,IAAAjF,EACqDC,wBAEpD3I,GAHD6I,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GACMmI,EADNhI,EAAA,GAC2BiI,EAD3BjI,EAAA,GAAAI,EAI+DN,oBAE7D,GANFO,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAIM8H,EAJN7H,EAAA,GAIgC8H,EAJhC9H,EAAA,GAAAsC,EAO+D7C,oBAE7D,GATF8C,EAAAnO,OAAAwL,EAAA,EAAAxL,CAAAkO,EAAA,GAOMyF,EAPNxF,EAAA,GAOgCyF,EAPhCzF,EAAA,GAUDrC,oBAAU,WACFuE,GAAUA,EAAOzM,MAAQ6P,GAA4B,GACrDD,EAAuBnD,EAAOzM,KAAK6P,KAExC,CAACpD,EAAQoD,IACZ3H,oBAAU,WACFuE,GAAUA,EAAO+B,YAAcuB,GAA4B,GAC3DH,EAAuBnD,EAAO+B,WAAWuB,KAE9C,CAACtD,EAAQsD,IAcZ,MAAO,CACHJ,sBACAE,2BACAE,2BACApB,kBAjBwB,SAACf,GACzB1K,QAAQC,IAAI,qBAAsByK,IAiBlCgB,eAfqB,SAACqB,GAAD,OACrBH,EAA4BG,IAe5BpB,eAdqB,SAACqB,GAAD,OACrBF,EAA4BE,IAc5BC,MAbU,WACVL,GAA6B,GAC7BE,GAA6B,GAC7BJ,OAAuB9Q,eCjClBsR,GAA0B,SACnC3D,EACAhJ,GAqFA,MAAO,CACHqL,sBApF0B,WACrBrC,IAGAA,EAAOqB,gBACRrB,EAAOqB,cAAgB,IAE3BrB,EAAOqB,cAAP,GAAAnN,OAAAvE,OAAAiU,GAAA,EAAAjU,CACOqQ,EAAOqB,eADd,CAEI,CACIF,UAAW,qBACX0C,QAAS,mDAGjB7M,EAASgJ,KAuET8D,uBArE2B,SAACC,GACvB/D,IAGAA,EAAOqB,gBACRrB,EAAOqB,cAAgB,IAE3BrB,EAAOqB,cAAgBrB,EAAOqB,cAAcpE,OACxC,SAAC+G,EAAG9E,GAAJ,OAAcA,IAAU6E,IAE5B/M,EAASgJ,KA4DTsC,iBA1DqB,WAChBtC,IAGAA,EAAOzM,OACRyM,EAAOzM,KAAO,IAElByM,EAAOzM,KAAP,GAAAW,OAAAvE,OAAAiU,GAAA,EAAAjU,CACOqQ,EAAOzM,MADd,CAEI,CACIyM,OAAQ,kBACR6D,QAAS,gDAGjB7M,EAASgJ,KA6CTuC,oBA3CwB,SAACwB,GACpB/D,IAGAA,EAAOzM,OACRyM,EAAOzM,KAAO,IAElByM,EAAOzM,KAAOyM,EAAOzM,KAAK0J,OAAO,SAAC+G,EAAG9E,GAAJ,OAAcA,IAAU6E,IACzD/M,EAASgJ,KAoCTwC,iBAlCqB,WAChBxC,IAGAA,EAAO+B,aACR/B,EAAO+B,WAAa,IAExB/B,EAAO+B,WAAP,GAAA7N,OAAAvE,OAAAiU,GAAA,EAAAjU,CACOqQ,EAAO+B,YADd,CAEI,CACI/B,OAAQ,kBACR6D,QAAS,gDAGjB7M,EAASgJ,KAqBTyC,oBAnBwB,SAACsB,GACpB/D,IAGAA,EAAO+B,aACR/B,EAAO+B,WAAa,IAExB/B,EAAO+B,WAAa/B,EAAO+B,WAAW9E,OAClC,SAAC+G,EAAG9E,GAAJ,OAAcA,IAAU6E,IAE5B/M,EAASgJ,uDCpEF,SAASiE,GAATnR,GAAgE,IAA1C2G,EAA0C3G,EAA1C2G,KAAgByK,EAA0BpR,EAApCkE,SAAoC+D,EAC/CC,oBAAS,GADsCE,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GACpEoJ,EADoEjJ,EAAA,GAC5DkJ,EAD4DlJ,EAAA,GAAAI,EAEzCN,mBAAsB,IAFmBO,EAAA5L,OAAAwL,EAAA,EAAAxL,CAAA2L,EAAA,GAEpE+I,EAFoE9I,EAAA,GAEzD+I,EAFyD/I,EAAA,GAAAsC,EAGrC7C,wBAClC3I,GAJuEyL,EAAAnO,OAAAwL,EAAA,EAAAxL,CAAAkO,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAM3ErC,oBAAU,WACDhC,GAGL6K,EACI3U,OAAO4U,KAAK9K,GAAMlB,IAAI,SAAAxI,GAAG,MAAK,CAC1BA,MACAgI,MAAO0B,EAAK1J,GACZgC,YAAa0H,EAAK1J,QAG3B,CAAC0J,IACJ,IAkCM+K,EAAyB,SAAAC,GAAmC,IAAhCxF,EAAgCwF,EAAhCxF,KAO9B,OACIvJ,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAK,GAAAhK,OAAK+K,EAAKlP,IAAV,MAAAmE,OAAkB+K,EAAKlN,KAAvB,KACLgG,MAAK,GAAA7D,OAAK+K,EAAKlH,OACff,SAVS,SAACgN,EAAoB/M,GAClC,IAAIyN,EAAU/U,OAAO2C,OAAO,GAAImH,EAAlB9J,OAAAgV,GAAA,EAAAhV,CAAA,GACTsP,EAAKlP,IAAMkH,IAEhBiN,EAAeQ,OAgCvB,OACIhP,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACuL,GAAA,EAAD,CAAeD,QAzER,WACXmD,GAAU,KAwEN,QACA1O,EAAAzC,EAAA0C,cAACiP,GAAA,EAAD,CACIC,mBAAmB,mBACnBV,OAAQA,EACR5H,UA1EI,WACZ6H,GAAU,KA2EF1O,EAAAzC,EAAA0C,cAACmP,GAAA,EAAD,CAAYxG,MAzED,CACnB,CACIvO,IAAK,UACL8I,KAAM,MACNkM,SAAU,aACVC,UAAW,CACPrE,SAAU,OAEdsE,UAAW,MACXC,aAAc,CACV5G,MAAO,CACH,CACIvO,IAAK,iBACL8I,KAAM,UAEV,CACI9I,IAAK,iBACL8I,KAAM,kBAEV,CACI9I,IAAK,eACL8I,KAAM,iBAqDdnD,EAAAzC,EAAA0C,cAACwP,GAAA,EAAD,CAAM7G,MAAO+F,EAAWe,aA9Bf,SAACnG,EAAkBC,GACpC,OAAKD,EAIDvJ,EAAAzC,EAAA0C,cAAA,OAAK0P,qBAAmB,GACpB3P,EAAAzC,EAAA0C,cAAA,WACmB,WAAdsJ,EAAKlN,MACF2D,EAAAzC,EAAA0C,cAAC6O,EAAD,CAAwBvF,KAAMA,IAEnB,WAAdA,EAAKlN,MAAqB,+BACZ,YAAdkN,EAAKlN,MAAsB,kCAT7B2D,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,SA8BHpG,EAAAzC,EAAA0C,cAAA,WAAM6H,KAAKC,UAAU4G,EAAW,KAAM,MC5FvC,SAASiB,GAATxS,GAIJ,IAHPkN,EAGOlN,EAHPkN,OACUuF,EAEHzS,EAFPkE,SACQwO,EACD1S,EADP2S,OACOC,EAUHzC,GAAuBjD,GALvBkD,EALGwC,EAKHxC,oBACAf,EANGuD,EAMHvD,eACAC,EAPGsD,EAOHtD,eACAF,EARGwD,EAQHxD,kBACAwB,EATGgC,EASHhC,MATGiC,EAkBHhC,GAAwB3D,EAAQuF,GALhClD,EAbGsD,EAaHtD,sBACAC,EAdGqD,EAcHrD,iBACAC,EAfGoD,EAeHpD,oBACAC,EAhBGmD,EAgBHnD,iBACAC,EAjBGkD,EAiBHlD,oBAeJ,OACI/M,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACKoH,EACGxN,EAAAzC,EAAA0C,cAAC2P,GAAD,CACItF,OAAQkD,EACRlM,SAAU,kBAAMP,QAAQC,IAAI,YAC5B+O,OArCD,WACX/B,OAuCQhO,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACuL,GAAA,EAAD,CAAeD,QAASuE,GAAxB,QACA9P,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAM,cACNC,YAAU,EACVpG,MAAOiI,EAAOA,OACdhJ,SA3BF,SACdgN,EACA/M,GAEA+I,EAAOA,OAAS/I,GAAY,GAC5BsO,EAAiBvF,MAwBLtK,EAAAzC,EAAA0C,cAACiQ,GAAD,CAAYnM,KAAMuG,EAAOvG,KAAMzC,SAtBzB,SAACyC,GACnBuG,EAAOvG,KAAOA,EACd8L,EAAiBvF,MAqBLtK,EAAAzC,EAAA0C,cAACmM,GAAD,CACIT,cAAerB,EAAOqB,eAAiB,GACvCnB,WAAYF,EAAOzM,MAAQ,GAC3BwO,WAAY/B,EAAO+B,YAAc,GACjCE,OAAQ,CACJC,oBACAG,wBACAF,iBACAG,mBACAC,sBACAH,iBACAI,mBACAC,0BAMhB/M,EAAAzC,EAAA0C,cAAA,WAAM6H,KAAKC,UAAUuC,EAAQ,KAAM,KCpDhC,SAAS6F,GAAT/S,GAE8B,IADzC+D,EACyC/D,EADzC+D,MACyCkE,EACfC,mBACtBf,GAASpD,EAAMC,OAAOoD,UAFegB,EAAAvL,OAAAwL,EAAA,EAAAxL,CAAAoL,EAAA,GAClCjB,EADkCoB,EAAA,GAC3B4K,EAD2B5K,EAAA,GAAAwK,EAYrCzC,GAAuBnJ,GAPvBoJ,EALqCwC,EAKrCxC,oBACAE,EANqCsC,EAMrCtC,yBACAE,EAPqCoC,EAOrCpC,yBACAnB,EARqCuD,EAQrCvD,eACAC,EATqCsD,EASrCtD,eACAF,EAVqCwD,EAUrCxD,kBACAwB,EAXqCgC,EAWrChC,MAGJjI,oBAAU,WACN,IAAMvJ,EAA8B/B,iBAAOT,iBAC3C,GAAIoK,EAAO,CACP,IAAMiM,EAAiB,SAAAtB,GACA,kBAD2CA,EAAxClK,YAElBmJ,IAEJoC,EAAS7L,GAASpD,EAAMC,OAAOoD,WAGnC,OADAhI,EAAayJ,GAAGpC,EAAqBwM,EAAgB,eAC9C,WACH7T,EAAa0J,IACTrC,EACAwM,EACA,kBAIb,CAACjM,IAEJ,IAAMkM,EAAuBC,GACzBnM,EACAsJ,EACAE,GArCqCqC,EA8CrChC,GAAwB7J,EAAOkM,GAL/B3D,EAzCqCsD,EAyCrCtD,sBACAC,EA1CqCqD,EA0CrCrD,iBACAC,EA3CqCoD,EA2CrCpD,oBACAC,EA5CqCmD,EA4CrCnD,iBACAC,EA7CqCkD,EA6CrClD,oBAMJ,OAAK3I,EAUDpE,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACoN,GAAA,EAAD,CAAMmD,QAAM,EAACC,OAAK,EAACC,cAAe,kBAAMC,MAAM,kBACzCxP,EAAMC,OAAOoD,SAEjBgJ,EACGxN,EAAAzC,EAAA0C,cAAC2P,GAAD,CACItF,OAAQkD,EACRlM,SAAUgP,EACVP,OArBD,WACX/B,OAuBQhO,EAAAzC,EAAA0C,cAAC+M,GAAA,EAAD,KACIhN,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CACIC,MAAM,cACNC,YAAU,EACVpG,MAAO+B,EAAMyD,cAEjB7H,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CAAWC,MAAM,OAAOC,YAAU,EAACpG,MAAO+B,EAAM/H,OAChD2D,EAAAzC,EAAA0C,cAACsI,EAAA,EAAD,CAAWC,MAAM,SAASC,YAAU,EAACpG,MAAO+B,EAAMsB,SAClD1F,EAAAzC,EAAA0C,cAACmM,GAAD,CACIT,cAAevH,EAAMuH,eAAiB,GACtCnB,WAAYpG,EAAMvG,MAAQ,GAC1BwO,WAAYjI,EAAMiI,YAAc,GAChCE,OAAQ,CACJC,oBACAG,wBACAF,iBACAG,mBACAC,sBACAH,iBACAI,mBACAC,0BAKhB/M,EAAAzC,EAAA0C,cAAA,WACAD,EAAAzC,EAAA0C,cAAA,WAAM6H,KAAKC,UAAU3D,EAAO,KAAM,KA7ClCpE,EAAAzC,EAAA0C,cAAAD,EAAAzC,EAAA6I,SAAA,KACIpG,EAAAzC,EAAA0C,cAACoN,GAAA,EAAD,CAAMmD,QAAM,EAACC,OAAK,EAACC,cAAe,kBAAMC,MAAM,kBACzCxP,EAAMC,OAAOoD,UAgDlC,IAAM+L,GAA6B,SAC/BnM,EACAsJ,EACAE,GAH+B,OAI9B,SAACtD,GACGlG,IAGDsJ,GAA4B,GACvBtJ,EAAMvG,OACPuG,EAAMvG,KAAO,IAEjBuG,EAAMvG,KAAK6P,GAA4BpD,GAChCsD,GAA4B,IAC9BxJ,EAAMiI,aACPjI,EAAMiI,WAAa,IAEvBjI,EAAMiI,WAAWuB,GAA4BtD,GAEjD7F,GAAYL,MCrKT,SAASwM,KACd,OACE7O,EAAA,cAAAA,EAAA,cACEA,EAAA,wCACAA,EAAA,cAACS,EAAA,EAAD,KACET,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,8BAA8BC,UAAWyN,KACrDpO,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWsF,iBC0DhC6I,8MAjDbtQ,MAAgB,CACdzE,YAAagB,OAEEgU,QAAmBpN,EAAa,iBAChCqN,cAA+BtW,iBAAOT,mNAGrDG,KAAK4W,cAAc9K,GACjBrK,EACAzB,KAAK6W,qBACL7W,wBC1BJoE,MAAM,+BACHE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAM,OAAIrC,EAAeqC,KAC9BE,MAAM,SAAAC,GACwC+I,KAAKC,UAAUhJ,2DD2B5D5E,KAAK2W,QAAQ/R,MAAM,aAAnBpB,EAAAsT,6JAIF9W,KAAK4W,cAAc7K,IACjBtK,EACAzB,KAAK6W,qBACL7W,qDAIFA,KAAKkH,SAAS,CACZvF,YAAagB,uCAKf,OACEiF,EAAA,qBAAK7B,UAAU,UACb6B,EAAA,qBAAK7B,UAAU,kBACb6B,EAAA,cAACmP,EAAD,CAAepV,YAAa3B,KAAKoG,MAAMzE,eAEzCiG,EAAA,qBAAK7B,UAAU,eACb6B,EAAA,cAACS,EAAA,EAAD,KACET,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWkO,KACvC7O,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWH,IACtCR,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW3C,cA1ClBuC,aEdR6O,GAAb,oBAAAA,IAAAlX,OAAAwJ,EAAA,EAAAxJ,CAAAE,KAAAgX,GAAAhX,KACUiX,mBAAoD,IAAIlV,IADlE,OAAAjC,OAAAoX,EAAA,EAAApX,CAAAkX,EAAA,EAAA9W,IAAA,UAAAgI,MAAA,SAMiBiP,GAGb,IAFA,IAAMC,EAAiBpX,KAAKiX,mBAAmBvW,IAAIyW,EAAMjV,KAAKhC,MAAQ,GAChEmX,EAAMD,EAAe7U,OAClB8M,EAAQ,EAAGA,EAAQgI,EAAKhI,IAAS,CACxC,IAAMiI,EAAWF,EAAe/H,GAChC,IACEiI,EAASC,SAAS5R,KAAK2R,EAAStS,QAASmS,EAAMvN,MAC/C,MAAOnC,GACPb,QAAQhC,MAAM,kBAAmB6C,OAdzC,CAAAvH,IAAA,KAAAgI,MAAA,SAoBIhG,EACAsV,EACAxS,GAEA,IAAMyS,EAAezX,KAAKiX,mBAAmBvW,IAAIwB,EAAKhC,MAAQ,GAO9D,OANAuX,EAAavN,KAAK,CAChBqN,SAAUC,EACVxS,YAEFhF,KAAKiX,mBAAmBlU,IAAIb,EAAKhC,IAAKuX,GAE/BzX,OA/BX,CAAAE,IAAA,MAAAgI,MAAA,SAmCIhG,EACAsV,EACAxS,GASA,OAPAhF,KAAKiX,mBAAmBlU,IACtBb,EAAKhC,KACJF,KAAKiX,mBAAmBvW,IAAIwB,EAAKhC,MAAQ,IAAIkN,OAC5C,SAAAkK,GAAQ,OACNA,EAASC,WAAaC,GAAiBF,EAAStS,UAAYA,KAG3DhF,SA9CXgX,EAAA,aCLaU,GAAW,SACtBC,EACAC,EACA7W,GAEA6W,IAAcA,EAAY,KAC1B,IAAIC,GAAQ,IAAIC,KAChB,OAAO,WACL,IAAM9S,EAAUjE,GAASf,KACvB+X,GAAO,IAAID,KACXE,EAAO1V,UACLuV,GAAQE,EAAMF,EAAOD,IACvBD,EAAG5T,MAAMiB,EAASgT,GAClBH,EAAOE,KCRN,IAAME,GAAqC,GACjDC,OAAeC,gBAAkBF,GAE3B,ICNwBL,GDMlBQ,ICNkBR,GD+DX,IAzDpBS,GCLS,SAEL9M,EACA+M,EACAC,GAEA,IAAMC,EAASD,EAAWrQ,MAC1BqQ,EAAWrQ,MAAQwP,GAAS,WAC1B,OAAOc,EAAOzU,MAAM/D,KAAMsC,YACzBsV,KDJPa,GAAA,WACI,SAAAL,EACqBM,GAGnB,IAFmBC,IAEnBrW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GADmBsW,IACnBtW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAAxC,OAAAwJ,EAAA,EAAAxJ,CAAAE,KAAAoY,GAAApY,KAHmB0Y,QAGnB1Y,KAFmB2Y,WAEnB3Y,KADmB4Y,WAJzB,OAAA9Y,OAAAoX,EAAA,EAAApX,CAAAsY,EAAA,EAAAlY,IAAA,MAAAgI,MAAA,SAOe2Q,GAAiC,IAAhBjP,EAAgBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC9BwW,EAAY,IAAAzU,OAAOrE,KAAK+Y,mBAAZ,eAAA1U,OACdrE,KAAK0Y,MADS,YAAArU,OAEPwU,GACX7Y,KAAKgZ,aAAaF,EAAclP,GAChCqO,GAAoB/N,KAAK,CACrB+O,MAAO,OACPJ,QAASC,EACTlP,WAfZ,CAAA1J,IAAA,QAAAgI,MAAA,SAkBiB2Q,GAA0C,IAAzBjP,EAAyBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,YAEtC,GADAtC,KAAK+Y,mBACA/Y,KAAK2Y,SAAV,CAGA,IAAMG,EAAY,IAAAzU,OAAOrE,KAAK+Y,mBAAZ,gBAAA1U,OACdrE,KAAK0Y,MADS,YAAArU,OAEPwU,GACXjS,QAAQsS,KAAKJ,EAAclP,GAC3BqO,GAAoB/N,KAAK,CACrB+O,MAAO,QACPJ,QAASC,EACTlP,YA9BZ,CAAA1J,IAAA,QAAAgI,MAAA,SAiCiB2Q,GAAiC,IAAhBjP,EAAgBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAChCwW,EAAY,IAAAzU,OAAOrE,KAAK+Y,mBAAZ,gBAAA1U,OACdrE,KAAK0Y,MADS,YAAArU,OAEPwU,GACXjS,QAAQhC,MAAMkU,EAAclP,GAC5BqO,GAAoB/N,KAAK,CACrB+O,MAAO,QACPJ,QAASC,EACTlP,WAzCZ,CAAA1J,IAAA,QAAAgI,MAAA,SA4CiB2Q,GAAiC,IAAhBjP,EAAgBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACtC,GAAItC,KAAK4Y,SAAU,CACf,IAAME,EAAY,IAAAzU,OAAOrE,KAAK+Y,mBAAZ,gBAAA1U,OACdrE,KAAK0Y,MADS,YAAArU,OAEPwU,GACX7Y,KAAKmZ,eAAeL,EAAclP,GAClCqO,GAAoB/N,KAAK,CACrB+O,MAAO,QACPJ,QAASC,EACTlP,YArDhB,CAAA1J,IAAA,eAAAgI,MAAA,SA0DyB4Q,GAAsC,IAAhBlP,EAAgBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACnDsE,QAAQC,IAAIiS,EAAclP,KA3DlC,CAAA1J,IAAA,iBAAAgI,MAAA,SA6D2B4Q,GAAsC,IAAhBlP,EAAgBtH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACrDsE,QAAQC,IAAIiS,EAAclP,GAC1BhD,QAAQwS,UA/DhB,CAAAlZ,IAAA,mBAAAgI,MAAA,WAuEQ,OADY,IAAI4P,MACLuB,kBAvEnBjB,EAAA,GAAAtY,OAAAwZ,GAAA,GAAAb,GAAAc,UAAA,gBAAAlB,IAAAvY,OAAA0Z,yBAAAf,GAAAc,UAAA,gBAAAd,GAAAc,WAAAd,IEJagB,GAAb,oBAAAA,IAAA3Z,OAAAwJ,EAAA,EAAAxJ,CAAAE,KAAAyZ,GAAA,OAAA3Z,OAAAoX,EAAA,EAAApX,CAAA2Z,EAAA,EAAAvZ,IAAA,SAAAgI,MAAA,SACgBsB,GACZ,OAAO,IAAI4O,GAAc5O,OAF7BiQ,EAAA,GCIqBC,sNAInBtT,MAAgB,KAECwQ,cAA+BtW,iBAAOT,sLAMrD,OAAO+H,EAAA,qBAAK7B,UAAU,+BAZsBoC,kCCA9CxH,iCAAuBd,gBAAemX,IAEtCrW,iCAAuB0I,EAAgBoQ,ICGzCE,eAoBA,IAAMC,GAAcC,SAASC,eAAe,QAC5CC,iBAAOnS,EAAA,cAnBP,WACI,OACIA,EAAA,cAACoS,GAAA,EAAD,KACIpS,EAAA,qBAAK7B,UAAU,OACX6B,EAAA,cAACqB,EAAA,EAAD,KACIrB,EAAA,cAACqB,EAAA,EAAD,CAASnI,GAAG,KAAZ,QADJ,IACoC,MAChC8G,EAAA,cAACqB,EAAA,EAAD,CAASnI,GAAG,gBAAZ,eAFJ,IAEsD,MAClD8G,EAAA,cAACqB,EAAA,EAAD,CAASnI,GAAG,iBAAZ,gBACA8G,EAAA,cAACS,EAAA,EAAD,KACIT,EAAA,cAACS,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWmO,OAGnC9O,EAAA,cAACqS,GAAD,SAOT,MAASL,gGCvBT,IAAMnZ,EAAb,oBAAAA,IAAAX,OAAAwJ,EAAA,EAAAxJ,CAAAE,KAAAS,GAAA,OAAAX,OAAAoX,EAAA,EAAApX,CAAAW,EAAA,OAAAP,IAAA,OAAAgI,MAAA,SAYqBgS,GACjB,OAAKC,IAAaC,QAAQF,GAKnBC,IAAa3Z,KAAK0Z,ICItB,SAAmB3O,GAExB,IAAM8O,EAAiBC,IAAgBC,oBAAoBhP,GAChC4O,IAAa3Z,KAAK+K,GACtCiP,cAAcH,GDZjBI,CAAUP,GACHC,IAAa3Z,KAAK0Z,GAAQpZ,GAAGoZ,MAf1C,CAAAha,IAAA,MAAAgI,MAAA,SA4BuBgS,GACnB,OAAOC,IAAazZ,IAAIwZ,KA7B5B,CAAAha,IAAA,UAAAgI,MAAA,SAqCwBgS,GACpB,OAAOC,IAAaO,QAAQR,KAtChC,CAAAha,IAAA,WAAAgI,MAAA,SA6CyBgS,GACrB,IAAMS,EAASla,EAAUD,KAAK0Z,GAC9BzZ,EAAUma,UAAUC,UAAU9X,IAAImX,EAAQS,EAAOG,aAC7CH,EAAOI,UACTta,EAAUma,UAAUI,OAAOjY,IAAImX,EAAQS,EAAOI,YAjDpD,CAAA7a,IAAA,UAAAgI,MAAA,SA0DwBgS,GACpB,IAAKzZ,EAAUma,UAAUC,UAAUI,IAAIf,GACrC,MAAM,IAAIgB,UAAU,2CAEtB,IAAMP,EAASla,EAAUD,KAAK0Z,GAC9BS,EAAOQ,SAAS1a,EAAUma,UAAUC,UAAUna,IAAIwZ,IAC9CzZ,EAAUma,UAAUI,OAAOC,IAAIf,IACjCS,EAAO5Z,MAAMN,EAAUma,UAAUI,OAAOta,IAAIwZ,QAjElDzZ,EAAA,GAAaA,EAyEIma,UAGX,CACFC,UAAW,IAAI9Y,IACfiZ,OAAQ,IAAIjZ,yHEnFMf,EAAtB,oBAAAA,IAAAlB,OAAAsb,EAAA,EAAAtb,CAAAE,KAAAgB,GAAA,OAAAlB,OAAAub,EAAA,EAAAvb,CAAAkB,EAAA,EAAAd,IAAA,QAAAgI,MAAA,SA2BegS,QA3BflZ,EAAA,GAAsBA,EAMNsa,aANMta,EAYNC,qBAuBVsa,kLACWJ,EAAoBjB,GACjC,OAAOiB,EAASza,aAFKM,GAMzBA,EAAMsa,MAAQ,IAAIC,MAKZC,kLAGWL,EAAoBjB,GACjC,IAAIuB,EAAgBD,EAAeE,UAAUhb,IAAIwZ,GAOjD,OANKuB,IACHvB,EAAOyB,uBAAwB,EAC/BF,EAAWN,EAASza,MACpBwZ,EAAOyB,uBAAwB,EAC/BH,EAAeE,UAAU3Y,IAAImX,EAAQuB,IAEhCA,gCAGIvB,GACXsB,EAAeE,UAAUnU,OACvB+S,IAAgBsB,uBAAuB1B,WAhBhBlZ,GAAvBwa,EACWE,UAAgC,IAAI3Z,IAoBrDf,EAAMC,UAAY,IAAIua,sKClETrB,EAAb,oBAAAA,IAAAra,OAAA+b,EAAA,EAAA/b,CAAAE,KAAAma,GAAA,OAAAra,OAAAgc,EAAA,EAAAhc,CAAAqa,EAAA,OAAAja,IAAA,UAAAgI,MAAA,SAC0BgS,GAClB6B,EAAU7B,GACV,IAAM8B,EAAa1B,EAAgBsB,uBAAuB1B,GAI1D,QAHuCC,EAAa8B,SAASvb,IACzDsb,KALZ,CAAA9b,IAAA,OAAAgI,MAAA,SAUuBgS,GACf6B,EAAU7B,GACV,IAAM8B,EAAa1B,EAAgBsB,uBAAuB1B,GACtDS,EAAiCR,EAAa8B,SAASvb,IACvDsb,GAMJ,OAJKrB,IACDA,EAAS,IAAIuB,EAAWF,GACxB7B,EAAa8B,SAASlZ,IAAIiZ,EAAYrB,IAEnCA,IApBf,CAAAza,IAAA,MAAAgI,MAAA,SAuBsBgS,GACd,IAAMS,EAAqBR,EAAa3Z,KAAK0Z,GAI7C,OAHKS,EAAOG,aACRH,EAAO7Z,GAAG6Z,EAAOT,QAEdS,EAAOwB,gBA5BtB,CAAAjc,IAAA,UAAAgI,MAAA,SA+B0BgS,GAClB6B,EAAU7B,GACV,IAAM8B,EAAa1B,EAAgBsB,uBAAuB1B,GACpDS,EAAiCR,EAAa8B,SAASvb,IACzDsb,GAEJ,IAAKrB,EACD,MAAM,IAAIO,UAAJ,YAAA7W,OAEE6V,EAAOlR,KAFT,mDAMV,OAAO2R,EAAOyB,cAAgBzB,EAAOT,SA5C7C,CAAAha,IAAA,iBAAAgI,MAAA,SAgDQqD,EACArL,EACAmc,GAEA,IAAMC,EAAO,KAAAjY,OAAQnE,GACrBJ,OAAOgV,eAAevJ,EAAQrL,EAAK,CAC/Bqc,YAAY,EACZ7b,IAF+B,WAG3B,OAAOV,KAAKsc,GACNtc,KAAKsc,GACJtc,KAAKsc,GAAWnC,EAAazZ,IAAI2b,IAE5CtZ,IAP+B,SAO3BqE,GACApH,KAAKsc,GAAWlV,OA7DhC,CAAAlH,IAAA,qBAAAgI,MAAA,SAkEqCqD,GAC7B,GAAIA,EAAOoQ,sBACP,MAAM,IAAIT,UACN,sFArEhBf,EAAA,GAmFA,SAAS4B,EAAU7B,GACf,IAAKA,EACD,MAAM,IAAIgB,UACN,iEAtFCf,EA0EM8B,SAAiD,IAAIla,IAiBjE,IAAMma,EAAb,WAQI,SAAAA,EAAYhC,GAAmBpa,OAAA+b,EAAA,EAAA/b,CAAAE,KAAAkc,GAAAlc,KAPxBka,YAOuB,EAAAla,KANvBoc,kBAMuB,EAAApc,KALvB8a,iBAKuB,EAAA9a,KAJvB+a,cAIuB,EAAA/a,KAHvBwc,0BAGuB,EAAAxc,KAFvByc,gBAEuB,EAC1Bzc,KAAKka,OAASA,EATtB,OAAApa,OAAAgc,EAAA,EAAAhc,CAAAoc,EAAA,EAAAhc,IAAA,KAAAgI,MAAA,SAYcqD,GACNwQ,EAAUxQ,GACV,IAAM6Q,EAAe9B,EAAgBsB,uBAAuBrQ,GAE5D,GADAvL,KAAKoc,aAAeA,EAChBpc,KAAKka,SAAWkC,EAAc,CAC9B,IAAMM,EAAa1c,KACnBA,KAAK8a,YAAc,CACfpa,IAAK,WACD,IAAMuG,EAASyV,EAAWC,gBAC1B,OAAID,EAAWF,qBACJvV,EAAMnH,OAAA8c,EAAA,EAAA9c,CACH4c,EAAWF,qBADR1c,OAAA+c,EAAA,EAAA/c,CACgCmH,IACvC,IAAIyV,EAAWF,qBAElBvV,EAAMnH,OAAA8c,EAAA,EAAA9c,CAAOyL,EAAPzL,OAAA+c,EAAA,EAAA/c,CAAiBmH,IAAU,IAAIsE,SAIpDvL,KAAK8a,YAAc,CACfpa,IAAK,WACD,OAAOyZ,EAAazZ,IAAI6K,KAOpC,OAHIvL,KAAK+a,UACL/a,KAAK+a,SAASlH,MAAM7T,KAAKka,QAEtBla,OAvCf,CAAAE,IAAA,WAAAgI,MAAA,SA0CoBiT,GAKZ,OAJAnb,KAAK8a,YAAcK,EACfnb,KAAK+a,UACL/a,KAAK+a,SAASlH,MAAM7T,KAAKka,QAEtBla,OA/Cf,CAAAE,IAAA,QAAAgI,MAAA,SAkDiBnH,GAQT,OAPAf,KAAK+a,SAAWha,EACZA,IAAUC,IAAMC,WACfjB,KAAaka,OAAOyB,uBAAwB,EAC7C5a,EAAM8S,MAAM7T,KAAKka,SACTla,KAAaka,OAAOyB,8BACpB3b,KAAaka,OAAOyB,sBAEzB3b,OA1Df,CAAAE,IAAA,aAAAgI,MAAA,WA6D4C,QAAA4U,EAAAxa,UAAAC,OAAnBka,EAAmB,IAAAM,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAnBP,EAAmBO,GAAA1a,UAAA0a,GAEpC,OADAhd,KAAKyc,WAAaA,EACXzc,OA/Df,CAAAE,IAAA,gBAAAgI,MAAA,SAkEyBmS,GAEjB,OADAra,KAAKwc,qBAAuBnC,EACrBra,OApEf,CAAAE,IAAA,cAAAgI,MAAA,WA2EQ,GAHKlI,KAAK+a,UACN/a,KAAKe,MAAMC,IAAMsa,QAEhBtb,KAAK+a,SACN,MAAM,IAAIkC,MAAM,mCAEpB,OAAOjd,KAAK+a,SAAS7W,QAAQlE,KAAK8a,YAAa9a,KAAKka,UA9E5D,CAAAha,IAAA,gBAAAgI,MAAA,WAkFQ,OAAIlI,KAAKyc,WACEzc,KAAKyc,WAAW/T,IAAI,SAAAwU,GAAS,OAChC/C,EAAazZ,IAAIwc,KAGlB,SAvFfhB,EAAA,GA8Fa5B,EAAb,oBAAAA,IAAAxa,OAAA+b,EAAA,EAAA/b,CAAAE,KAAAsa,GAAA,OAAAxa,OAAAgc,EAAA,EAAAhc,CAAAwa,EAAA,OAAApa,IAAA,sBAAAgI,MAAA,SAGsCqD,GAC9B,IAAI8O,EASJ,OAPAA,EAAc,SAAApX,GACV,SAAAka,IAA4B,IAAAC,EAAAtW,EAAAhH,OAAA+b,EAAA,EAAA/b,CAAAE,KAAAmd,GAAA,QAAAE,EAAA/a,UAAAC,OAAbyV,EAAa,IAAA+E,MAAAM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAbtF,EAAasF,GAAAhb,UAAAgb,GAAA,OACxBxW,EAAAhH,OAAAyd,EAAA,EAAAzd,CAAAE,MAAAod,EAAAtd,OAAA0d,EAAA,EAAA1d,CAAAqd,IAAAxX,KAAA5B,MAAAqZ,EAAA,CAAApd,MAAAqE,OAAS2T,KACTmC,EAAasD,mBAAmBlS,GAFRzE,EADlB,OAAAhH,OAAA4d,EAAA,EAAA5d,CAAAqd,EAAAla,GAAAka,EAAA,CAA8B5R,IAM7BoS,SAAWpS,EACnB8O,IAbf,CAAAna,IAAA,sBAAAgI,MAAA,SAgBsCgS,GAC9B,GAAIA,EAAOlR,KACP,MAAuB,gBAAhBkR,EAAOlR,KAEd,IACI,IAAM4U,EAAkB1D,EAAOX,UAAUsE,YACpCrY,WACAwB,MAAMhH,KAAK8d,sBAAsB,GACtC,OAAOF,GAAuC,gBAApBA,EAC5B,MAAAG,IAIF,OAAO,IA7BnB,CAAA7d,IAAA,yBAAAgI,MAAA,SAkCQqD,GAEA,IAAIyS,EAAuBzS,EAC3B,GAAIvL,KAAKie,oBAAoBD,GACzB,OAAOA,EAGX,IADAA,EAAkBA,EAAgBL,SAC3BK,GAAiB,CACpB,GAAIhe,KAAKie,oBAAoBD,GACzB,OAAOA,EAEXA,EAAkBA,EAAgBL,SAEtC,MAAMzC,UACF,uDACI3P,EAAO/F,gBAjDvB8U,EAAA,GAAaA,EACKwD,qBAAuB","file":"static/js/main.7a283a0c.chunk.js","sourcesContent":["import { IEvent } from \"./IEvent\";\r\nimport { IEventType } from \"./IEventType\";\r\n\r\nexport abstract class IEventService {\r\n  public abstract publish(event: IEvent): void;\r\n  public abstract on(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n  public abstract off(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n}\r\n","import { IEventType } from \"../api/IEventType\";\r\n\r\nexport class EventType implements IEventType {\r\n  constructor(public key: string) {}\r\n}\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const Inject = <T>(bind: Function): T => Container.get<T>(bind);\r\n","import { Provider } from \"../api/Provider\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createProviderService = (bind: Function, provider: Provider) =>\r\n  Container.bind(bind).provider(provider);\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const createService = (bind: Function, to: Object) =>\r\n  Container.bind(bind).to(to);\r\n","import { Container } from \"../model/Container\";\r\nimport { Provider } from \"../api/Provider\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonProviderService = (\r\n  bind: Function,\r\n  provider: Provider\r\n) =>\r\n  Container.bind(bind)\r\n    .provider(provider)\r\n    .scope(Scope.Singleton);\r\n","import { Scope } from \"../api/Scope\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createSingletonService = (bind: Function, to: Object) =>\r\n  Container.bind(bind)\r\n    .to(to)\r\n    .scope(Scope.Singleton);\r\n","import { Container } from \"../model/Container\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonServiceFactory = (\r\n  bind: Function,\r\n  provider: Function\r\n) =>\r\n  Container.bind(bind)\r\n    .provider({ get: () => provider() })\r\n    .scope(Scope.Singleton);\r\n","export * from \"./api/IEvent\";\r\nexport * from \"./api/IEventType\";\r\nexport * from \"./api/IEventService\";\r\n\r\nexport * from \"./model/EventType\";\r\n","export * from \"./api/Inject\";\r\nexport * from \"./api/Provider\";\r\nexport * from \"./api/Scope\";\r\n\r\nexport * from \"./create/CreateProviderService\";\r\nexport * from \"./create/CreateService\";\r\nexport * from \"./create/CreateSingletonProviderService\";\r\nexport * from \"./create/CreateSingletonService\";\r\nexport * from \"./create/CreateSingletonServiceFactory\";\r\n","import { IEventType, EventType, IEvent } from \"../../core/event\";\r\n\r\nexport const EDITOR_STATE_UPDATED: IEventType = new EventType(\r\n  \"EDITOR_STATE_UPDATED\"\r\n);\r\n\r\nexport const createEditorStateUpdatedEvent = (): IEvent => ({\r\n  type: EDITOR_STATE_UPDATED\r\n});\r\n","import { IEventService } from \"../../core/event\";\r\nimport { Inject } from \"../../core/ioc\";\r\nimport { createEditorStateUpdatedEvent } from \"./EditorStateUpdated\";\r\n\r\ninterface InternalState {\r\n  editorState: IEditorServerState;\r\n  serverFileMap: Map<string, IServerFile>;\r\n}\r\n\r\nconst STATE: InternalState = {\r\n  editorState: {\r\n    fileMenu: {\r\n      root: []\r\n    }\r\n  },\r\n  serverFileMap: new Map<string, IServerFile>()\r\n};\r\n\r\nexport const DEFAULT_FILE: IServerFile = {\r\n  id: \"invalid-id\",\r\n  type: \"plaintext\",\r\n  content: \"Loading...\"\r\n};\r\n\r\nexport const setEditorState = (\r\n  editorState: IEditorServerState,\r\n  eventService: IEventService = Inject(IEventService)\r\n) => {\r\n  Object.assign(STATE.editorState, editorState);\r\n  eventService.publish(createEditorStateUpdatedEvent());\r\n};\r\n\r\nexport const getEditorState = () => STATE.editorState;\r\n\r\n/**\r\n * ====================\r\n */\r\n\r\nexport const setFileContent = (id: string, content: string): void => {\r\n  const file = STATE.serverFileMap.get(id) || { id, type: \"new\", content };\r\n  const updatedFile = Object.assign({}, file, { content }) as IServerFile;\r\n  STATE.serverFileMap.set(id, updatedFile);\r\n};\r\n\r\nexport const getFile = async (id: string): Promise<IServerFile> => {\r\n  const file = STATE.serverFileMap.get(id);\r\n  if (!file) {\r\n    // Request file content\r\n    return getFileContent(id);\r\n  }\r\n  return file;\r\n};\r\nexport const getFileFromMap = (id: string): IServerFile | undefined => {\r\n  return STATE.serverFileMap.get(id);\r\n};\r\n\r\nexport const getFileContent = (fileContentId: string) =>\r\n  new Promise<IServerFile>((resolve, reject) => {\r\n    fetch(`serverData/content/${fileContentId}.json`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        // TODO: Cache content\r\n        STATE.serverFileMap.set(fileContentId, result);\r\n        publishContentChanged();\r\n        return result;\r\n      })\r\n      .then(result => resolve(result))\r\n      .catch(error => reject(error));\r\n  });\r\n\r\nexport const loadFileContentFromServerForMenuItem = (menuItem: IMenuItem) => {};\r\n\r\nconst MAIN_CONTENT_CHANGE_LISTENER: Map<string, IEventListener> = new Map<\r\n  string,\r\n  IEventListener\r\n>();\r\n\r\nexport const listenForMainContentChange = (\r\n  notificationFunction: () => void,\r\n  context: any\r\n): string => {\r\n  const handler = guid();\r\n  MAIN_CONTENT_CHANGE_LISTENER.set(handler, {\r\n    notificationFunction,\r\n    context\r\n  });\r\n  return handler;\r\n};\r\nexport const removeListenerForContentChange = (handler: string): void => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.delete(handler);\r\n};\r\nexport const publishContentChanged = () => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.forEach(changeListener => {\r\n    changeListener.notificationFunction.call(changeListener.context);\r\n  });\r\n};\r\n\r\ninterface IEventListener {\r\n  notificationFunction: () => void;\r\n  context: any;\r\n}\r\n\r\nexport interface IEditorServerState {\r\n  fileMenu: {\r\n    root: Array<IMenuItem>;\r\n  };\r\n}\r\nexport interface IServerFile {\r\n  id: string;\r\n  type: \"json\" | \"csharp\" | \"javascript\" | \"plaintext\";\r\n  content: string;\r\n}\r\nexport interface IMenuItem {\r\n  id: string;\r\n  name: string;\r\n  path: Array<string>;\r\n  isFolder: boolean;\r\n  children: Array<IMenuItem>;\r\n}\r\n\r\nfunction guid(): string {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './EditorHome.css';\r\n\r\nexport default function EditorHome() {\r\n    return (\r\n        <div className=\"editor-home\">\r\n            <h1>Editor Home</h1>\r\n            <h3>PoC/Features</h3>\r\n            <ul>\r\n                <li>\r\n                    The layout of the page is created using{' '}\r\n                    <a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">\r\n                        CSS Grid.\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <span style={{ fontWeight: 'bold' }}>Text Editor: </span>{' '}\r\n                    Using the{' '}\r\n                    <a href=\"https://microsoft.github.io/monaco-editor/index.html\">\r\n                        Monaco Editor\r\n                    </a>\r\n                    , from Microsoft, we are able to edit text files.\r\n                </li>\r\n                <li>\r\n                    <span style={{ fontWeight: 'bold' }}>Skill Editor:</span>{' '}\r\n                    The skill editor uses{' '}\r\n                    <a href=\"https://developer.microsoft.com/en-us/fabric\">\r\n                        UI Fabric\r\n                    </a>{' '}\r\n                    to create a responsive UX to edit the details about skills\r\n                    used by the EventHorizon GDK.\r\n                    <div style={{ fontWeight: 'bold' }}>\r\n                        Skill Editor Features\r\n                    </div>\r\n                    <ul>\r\n                        <li>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                                Skill List:\r\n                            </span>{' '}\r\n                            Contains a search, which a deep search of all\r\n                            content in the skills.\r\n                        </li>\r\n                        <li>\r\n                            <span style={{ fontWeight: 'bold' }}>\r\n                                Tutorial:\r\n                            </span>{' '}\r\n                            The lists have attached Tutorial Bubbles that help\r\n                            with some general usages, helps to clean the UI.\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import \"./FileEditor.css\";\r\nimport * as React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {\r\n  IServerFile,\r\n  setFileContent,\r\n  getFile,\r\n  listenForMainContentChange,\r\n  removeListenerForContentChange,\r\n  DEFAULT_FILE\r\n} from \"../../state/EditorState\";\r\n\r\ninterface IRouterParams {\r\n  fileId: string;\r\n}\r\nexport interface IFileEditorProps extends RouteChildrenProps<IRouterParams> {}\r\nexport interface IFileEditorState {\r\n  fileId: string;\r\n  file: IServerFile;\r\n  options: {\r\n    selectOnLineNumbers: boolean;\r\n  };\r\n}\r\n\r\nclass FileEditor extends React.Component<IFileEditorProps, IFileEditorState> {\r\n  state: IFileEditorState = {\r\n    fileId: \"not-valid\",\r\n    file: DEFAULT_FILE,\r\n    options: {\r\n      selectOnLineNumbers: true\r\n    }\r\n  };\r\n  private _onChangeHandler!: string;\r\n  async componentDidMount() {\r\n    this._onChangeHandler = listenForMainContentChange(\r\n      this.onContentChanged,\r\n      this\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    removeListenerForContentChange(this._onChangeHandler);\r\n  }\r\n  private onContentChanged() {\r\n    try {\r\n      if(!this.props.match) {\r\n        return;\r\n      }\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          this.setState({\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    } catch (ex) {\r\n      console.error(\"Error\", ex);\r\n    }\r\n  }\r\n  editorDidMount = (getCurrentValue: () => string, editor: any) => {\r\n    console.log(\"editorDidMount\", { getCurrentValue, editor });\r\n    // editor.focus();\r\n    // TODO: Wire to onChange to make sure state is updated\r\n    if (this.props.match !== null) {\r\n      console.log(\"DidMount\", this.props.match.params.fileId as string);\r\n      getFile(this.props.match.params.fileId).then(file =>\r\n        this.setState({\r\n          file\r\n        })\r\n      );\r\n    }\r\n  };\r\n  onChange = (newValue: string, e:any) => {\r\n    console.log(this.state.fileId);\r\n    if (this.state.fileId === \"not-valid\") {\r\n      return;\r\n    }\r\n    console.log(\"onChange\", newValue, e);\r\n    setFileContent(this.state.fileId, newValue);\r\n  };\r\n  componentDidUpdate(prevProps: IFileEditorProps) {\r\n    if(!prevProps.match || !this.props.match) {\r\n      return;\r\n    }\r\n    if (prevProps.match.params.fileId !== this.props.match.params.fileId) {\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          if(!this.props.match) {\r\n            return;\r\n          }\r\n          this.setState({\r\n            fileId: this.props.match.params.fileId,\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { file } = this.state;\r\n    let fileId = \"invalid\"\r\n    if(this.props.match) {\r\n      fileId = this.props.match.params.fileId\r\n    }\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <div>({fileId})</div>\r\n        <Editor\r\n          key=\"something\"\r\n          width=\"100%\"\r\n          height={300}\r\n          language=\"json\"\r\n          theme=\"dark\"\r\n          value={file.content}\r\n          options={this.state.options}\r\n          editorDidMount={this.editorDidMount}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileEditor;\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport \"./TextEditor.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport FileEditor from \"./file/FileEditor\";\r\n\r\nexport interface ITextEditorProps {}\r\nexport interface ITextEditorState {}\r\n\r\nclass TextEditor extends Component<ITextEditorProps, ITextEditorState> {\r\n  state: ITextEditorState = {};\r\n  async componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <h1>Text Editor</h1>\r\n        <div>\r\n          <Route path=\"/text-editor/file/:fileId\" component={FileEditor} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextEditor;\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IEditorServerState, IMenuItem } from '../state/EditorState';\r\nimport './EditorSidebar.css';\r\n\r\ninterface IProps {\r\n    editorState: IEditorServerState;\r\n}\r\ninterface IState {}\r\n\r\nexport default class EditorSidebar extends React.Component<IProps, IState> {\r\n    state: IState = {};\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editor-sidebar\">\r\n                (editor sidebar)\r\n                {this.props.editorState.fileMenu.root.map(menuItem => (\r\n                    <SidebarMenuItem key={menuItem.id} menuItem={menuItem} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SidebarMenuItem extends React.Component<{ menuItem: IMenuItem }, {}> {\r\n    render() {\r\n        const { menuItem } = this.props;\r\n        return (\r\n            <div style={{ paddingLeft: '5px' }}>\r\n                {menuItem.isFolder ? (\r\n                    <span>{menuItem.name}</span>\r\n                ) : (\r\n                    <NavLink className=\"menu-link\" to={getContentUrl(menuItem)}>\r\n                        {menuItem.name}\r\n                    </NavLink>\r\n                )}\r\n                <div>\r\n                    {(menuItem.children || []).map(menuItemChild => (\r\n                        <SidebarMenuItem\r\n                            key={menuItemChild.id}\r\n                            menuItem={menuItemChild}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst getContentUrl = (menuItem: IMenuItem) => {\r\n    return `/text-editor/file/${menuItem.id}`;\r\n};\r\n","import { ILogger } from \"./ILogger\";\r\n\r\nexport abstract class ILoggerFactory {\r\n  public abstract create(loggerName: string): ILogger;\r\n}\r\n","import { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { Inject } from \"../../ioc\";\r\nimport { ILogger } from \"../api/ILogger\";\r\n\r\nexport const createLogger = (\r\n  loggerName: string,\r\n  loggerFactory: ILoggerFactory = Inject(ILoggerFactory)\r\n): ILogger => loggerFactory.create(loggerName);\r\n","import { EventType, IEvent, IEventType } from '../../core/event';\r\n\r\n/**\r\n * Name: SkillChangedEvent\r\n * NameSpace: Skill\r\n * Type: Event\r\n */\r\nexport const SKILL_CHANGED_EVENT = new EventType('Skill.SKILL_CHANGED_EVENT');\r\nclass EventClass implements IEvent {\r\n    public type: IEventType = SKILL_CHANGED_EVENT;\r\n    public data?: SkillChangedEventData;\r\n}\r\nconst instanceOfEvent = new EventClass();\r\nexport const createSkillChangedEvent = (\r\n    data: SkillChangedEventData\r\n): IEvent => {\r\n    instanceOfEvent.data = data;\r\n    return instanceOfEvent;\r\n};\r\nexport interface SkillChangedEventData {\r\n    actionType: 'DELETE_ACTION' | 'ADDED_TO_ACTION';\r\n}\r\n","import skillEditorState from './skill-editor-state.json';\r\nimport { ISkill } from '../api/ISkill.js';\r\nimport { IEventService } from '../../core/event';\r\nimport { Inject } from '../../core/ioc';\r\nimport { createSkillChangedEvent } from '../changed/SkillChangedEvent';\r\n\r\ninterface ISkillEditorState {\r\n    skillList: ISkill[];\r\n}\r\n\r\nconst SKILL_MAP: Map<string, ISkill> = new Map();\r\nconst SKILL_LIST: ISkill[] = [];\r\n\r\nconst setupSkillMap = ({ skillList }: { skillList: ISkill[] }) => {\r\n    skillList.forEach(skill => {\r\n        SKILL_LIST.push(skill);\r\n        SKILL_MAP.set(skill.id, skill);\r\n    });\r\n};\r\nsetupSkillMap(skillEditorState);\r\n\r\nexport const getSkillList = () => SKILL_LIST;\r\n\r\nexport const getSkill = (skillId: string) => {\r\n    return SKILL_MAP.get(skillId);\r\n};\r\n\r\nexport const updateSkill = (\r\n    skill: ISkill,\r\n    eventService: IEventService = Inject(IEventService)\r\n) => {\r\n    SKILL_MAP.set(skill.id, { ...skill, $$pendingSave: true });\r\n    SKILL_LIST.splice(0, SKILL_LIST.length);\r\n    SKILL_MAP.forEach(skill => {\r\n        SKILL_LIST.push(skill);\r\n    });\r\n    eventService.publish(\r\n        createSkillChangedEvent({ actionType: 'ADDED_TO_ACTION' })\r\n    );\r\n};\r\n","import { EventType, IEvent, IEventType } from '../../../core/event';\r\n\r\n/**\r\n * Name: TutorialStepChangedEvent\r\n * NameSpace: Tutorial\r\n * Type: Event\r\n */\r\nexport const TUTORIAL_STEP_CHANGED_EVENT = new EventType(\r\n    'Tutorial.TUTORIAL_STEP_CHANGED_EVENT'\r\n);\r\nclass EventClass implements IEvent {\r\n    public type: IEventType = TUTORIAL_STEP_CHANGED_EVENT;\r\n    public data?: TutorialStepChangedEventData;\r\n}\r\nconst instanceOfEvent = new EventClass();\r\nexport const createTutorialStepChangedEvent = (\r\n    data: TutorialStepChangedEventData\r\n): IEvent => {\r\n    instanceOfEvent.data = data;\r\n    return instanceOfEvent;\r\n};\r\nexport interface TutorialStepChangedEventData {}\r\n","import tutorialSteps from './tutorial-steps.json';\r\nimport { DirectionalHint } from 'office-ui-fabric-react';\r\nimport { IEventService } from '../../../core/event';\r\nimport { Inject } from '../../../core/ioc';\r\nimport { createTutorialStepChangedEvent } from '../change/TutorialStepChangedEvent';\r\n\r\ninterface ITutorialStep {\r\n    key: string;\r\n    text: string;\r\n    isVisible?: boolean;\r\n    directionalHint?: DirectionalHint;\r\n}\r\ninterface IState {\r\n    tutorialStep: Map<string, ITutorialStep>;\r\n}\r\nconst STATE: IState = {\r\n    tutorialStep: new Map(),\r\n};\r\n\r\nexport const getStep = (key: string) => STATE.tutorialStep.get(key);\r\nexport const updateStep = (\r\n    step: ITutorialStep,\r\n    eventService: IEventService = Inject(IEventService)\r\n) => {\r\n    STATE.tutorialStep.set(step.key, step);\r\n    eventService.publish(createTutorialStepChangedEvent({}));\r\n};\r\n\r\n// Setup the steps from the embedded file\r\n(() => {\r\n    tutorialSteps.steps.forEach(step =>\r\n        STATE.tutorialStep.set(step.key, step as ITutorialStep)\r\n    );\r\n})();\r\n","import { Coachmark, TeachingBubbleContent } from 'office-ui-fabric-react';\r\nimport React, { useEffect, useState, createRef } from 'react';\r\nimport { IEventService } from '../../core/event';\r\nimport { Inject } from '../../core/ioc';\r\nimport { TUTORIAL_STEP_CHANGED_EVENT } from './change/TutorialStepChangedEvent';\r\nimport { getStep, updateStep } from './state/TurorialState';\r\n\r\ninterface IProps {\r\n    stepKey: string;\r\n    children: any;\r\n}\r\nexport default function TutorialBubble({ stepKey, children }: IProps) {\r\n    const [target, setTarget] = useState<any>(createRef<HTMLDivElement>());\r\n    const [step, setStep] = useState(getStep(stepKey));\r\n    const onDismiss = () => {\r\n        if (!step) {\r\n            return;\r\n        }\r\n        updateStep({ ...step, isVisible: false });\r\n        setStep(getStep(stepKey));\r\n    };\r\n    useEffect(() => {\r\n        const eventService: IEventService = Inject(IEventService);\r\n        const onStepChanged = () => {\r\n            setStep(getStep(stepKey));\r\n        };\r\n        eventService.on(\r\n            TUTORIAL_STEP_CHANGED_EVENT,\r\n            onStepChanged,\r\n            'TutorialBubble'\r\n        );\r\n        return () => {\r\n            eventService.off(\r\n                TUTORIAL_STEP_CHANGED_EVENT,\r\n                onStepChanged,\r\n                'TutorialBubble'\r\n            );\r\n        };\r\n    }, [stepKey]);\r\n\r\n    if (!step || !step.isVisible) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={setTarget}>{children}</div>\r\n            <Coachmark\r\n                target={target}\r\n                positioningContainerProps={{\r\n                    directionalHint: step.directionalHint,\r\n                    doNotLayer: false,\r\n                }}\r\n            >\r\n                <TeachingBubbleContent\r\n                    hasCloseIcon={true}\r\n                    closeButtonAriaLabel=\"Close\"\r\n                    onDismiss={onDismiss}\r\n                >\r\n                    {step.text}\r\n                </TeachingBubbleContent>\r\n            </Coachmark>\r\n        </>\r\n    );\r\n}\r\n","import { getId, TooltipHost } from 'office-ui-fabric-react';\r\nimport {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    DetailsRow,\r\n    IColumn,\r\n    IDetailsRowProps,\r\n    IDetailsRowStyles,\r\n    SelectionMode,\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ISkill } from '../api/ISkill';\r\nimport { getSkillList } from '../state/SkillEditorState';\r\nimport TutorialBubble from '../tutorial/TutorialBubble';\r\n\r\nconst COLUMNS = [\r\n    {\r\n        key: 'id',\r\n        name: 'Id',\r\n        fieldName: 'id',\r\n        minWidth: 100,\r\n        maxWidth: 200,\r\n        isResizable: true,\r\n    },\r\n    {\r\n        key: 'name',\r\n        name: 'Name',\r\n        fieldName: 'name',\r\n        minWidth: 100,\r\n        maxWidth: 200,\r\n        isResizable: true,\r\n    },\r\n];\r\n\r\nexport const skillContainsFilterParser = (skill: ISkill, filter: string) => {\r\n    if (filter.toLocaleLowerCase().indexOf('deepsearch:') === 0) {\r\n        return deepSearchSkill(skill, filter.substring(11));\r\n    }\r\n    return searchSkill(skill, filter);\r\n};\r\n\r\nexport const searchSkill = (skill: ISkill, filter: string) =>\r\n    skill.id.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n    skill.name.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n    skill.description.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >=\r\n        0 ||\r\n    skill.type.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0 ||\r\n    skill.target.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\nexport const deepSearchSkill = (skill: ISkill, filter: string) =>\r\n    JSON.stringify(skill || {})\r\n        .toLocaleLowerCase()\r\n        .indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\nexport function SkillList({ match, history }: RouteComponentProps) {\r\n    const [skillList] = useState(getSkillList());\r\n    const [filter, setFilter] = useState<string>('');\r\n    const [detailsList, setDetailsList] = useState<ISkill[]>([]);\r\n    useEffect(() => {\r\n        setDetailsList(\r\n            skillList\r\n                .map((skill: ISkill) => ({\r\n                    ...skill,\r\n                }))\r\n                .filter(\r\n                    (skill: ISkill) =>\r\n                        filter === '' ||\r\n                        skillContainsFilterParser(skill, filter)\r\n                )\r\n        );\r\n    }, [skillList, filter]);\r\n    const onItemInvoked = (skill: ISkill) => {\r\n        console.log('Open ' + skill.name);\r\n        history.push(`/skill-editor/edit/${skill.id}`);\r\n    };\r\n    const onChangeText = (\r\n        ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n        text: string | undefined\r\n    ) => {\r\n        setFilter(text || '');\r\n    };\r\n    const onRenderItemColumn = (\r\n        item?: ISkill,\r\n        index?: number,\r\n        column?: IColumn\r\n    ) => {\r\n        if (item === undefined || column === undefined) {\r\n            return <>NOT FOUND</>;\r\n        }\r\n        const fieldContent = item[column.fieldName as keyof ISkill];\r\n\r\n        if (item.$$pendingSave && column.fieldName === 'id') {\r\n            const hostId: string = getId('skill-list-pending-save-tooltip');\r\n\r\n            return <>* {fieldContent}</>;\r\n        }\r\n        return <>{fieldContent}</>;\r\n    };\r\n    const onRenderRow = (props?: IDetailsRowProps) => {\r\n        const hostId: string = getId('skill-list-pending-save-tooltip');\r\n        if (props === undefined) {\r\n            return <>NOT FOUND</>;\r\n        }\r\n        const item: ISkill = props.item;\r\n        if (item.$$pendingSave) {\r\n            const customStyles: Partial<IDetailsRowStyles> = {};\r\n            customStyles.root = {\r\n                fontWeight: 'bold',\r\n            };\r\n            return (\r\n                <TooltipHost\r\n                    content=\"This skill needs to be saved.\"\r\n                    id={hostId}\r\n                    calloutProps={{ gapSpace: 0 }}\r\n                >\r\n                    <DetailsRow {...props} styles={customStyles} />\r\n                </TooltipHost>\r\n            );\r\n        }\r\n        return <DetailsRow {...props} />;\r\n    };\r\n    return (\r\n        <>\r\n            <TextField\r\n                label=\"Search:\"\r\n                underlined\r\n                description=\"Prefix search with 'deepsearch:' to search into skills.\"\r\n                onChange={onChangeText}\r\n            />\r\n            <TutorialBubble stepKey=\"step_1\">\r\n                <DetailsList\r\n                    items={detailsList}\r\n                    selectionMode={SelectionMode.none}\r\n                    columns={COLUMNS}\r\n                    setKey=\"set\"\r\n                    layoutMode={DetailsListLayoutMode.justified}\r\n                    onItemInvoked={onItemInvoked}\r\n                    onRenderItemColumn={onRenderItemColumn}\r\n                    onRenderRow={onRenderRow}\r\n                />\r\n            </TutorialBubble>\r\n        </>\r\n    );\r\n}\r\n","import { DefaultButton, IconButton } from 'office-ui-fabric-react';\r\nimport {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    IColumn,\r\n    SelectionMode,\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport { ISkillEffect } from '../../api/ISkill';\r\nimport TutorialBubble from '../../tutorial/TutorialBubble';\r\n\r\nconst COLUMNS = [\r\n    {\r\n        key: 'effect',\r\n        name: 'Effect',\r\n        fieldName: 'effect',\r\n        minWidth: 100,\r\n        maxWidth: 200,\r\n        isResizable: true,\r\n    },\r\n];\r\n\r\nexport const filterSearch = (skill: ISkillEffect, filter: string) => {\r\n    if (filter.toLocaleLowerCase().indexOf('deepsearch:') === 0) {\r\n        return deepSearchSkill(skill, filter.substring(11));\r\n    }\r\n    return search(skill, filter);\r\n};\r\n\r\nexport const search = (effect: ISkillEffect, filter: string) =>\r\n    effect.effect.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\nexport const deepSearchSkill = (effect: ISkillEffect, filter: string) =>\r\n    JSON.stringify(effect || {})\r\n        .toLocaleLowerCase()\r\n        .indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\ninterface IProps {\r\n    effectList: ISkillEffect[];\r\n    onSelected: (index: number) => void;\r\n    onAdd?: () => void;\r\n    onDelete: (index: number) => void;\r\n}\r\n\r\nexport function SkillEffectList({\r\n    effectList,\r\n    onSelected,\r\n    onAdd,\r\n    onDelete,\r\n}: IProps) {\r\n    const [filter, setFilter] = useState<string>('');\r\n    const [filteredList, setFilteredList] = useState<ISkillEffect[]>([]);\r\n    useEffect(() => {\r\n        setFilteredList(\r\n            effectList\r\n                .map((effect: ISkillEffect) => ({\r\n                    ...effect,\r\n                }))\r\n                .filter(\r\n                    (effect: ISkillEffect) =>\r\n                        filter === '' || filterSearch(effect, filter)\r\n                )\r\n        );\r\n    }, [effectList, filter]);\r\n    const onItemInvoked = (effect: ISkillEffect, index: number | undefined) => {\r\n        if (index !== undefined) {\r\n            onSelected(index);\r\n        }\r\n    };\r\n    const onChangeText = (\r\n        ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n        text: string | undefined\r\n    ) => {\r\n        setFilter(text || '');\r\n    };\r\n    const onRenderItemColumn = (\r\n        item: ISkillEffect,\r\n        index?: number,\r\n        column?: IColumn\r\n    ) => {\r\n        if (index === undefined || column === undefined) {\r\n            return;\r\n        }\r\n        const fieldContent = item[column.fieldName as keyof ISkillEffect];\r\n\r\n        if (column.key === 'effect') {\r\n            return (\r\n                <div>\r\n                    {fieldContent}\r\n                    <IconButton\r\n                        menuIconProps={{ iconName: 'MoreVertical' }}\r\n                        role=\"button\"\r\n                        aria-haspopup={true}\r\n                        aria-label=\"Show actions\"\r\n                        styles={{ root: { float: 'right', height: 'inherit' } }}\r\n                        menuProps={{\r\n                            items: [\r\n                                {\r\n                                    key: 'delete',\r\n                                    text: 'Delete',\r\n                                    onClick: () => onDelete(index),\r\n                                },\r\n                            ],\r\n                        }}\r\n                    />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <span>{fieldContent}</span>;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <TextField\r\n                label=\"Search:\"\r\n                underlined\r\n                description=\"Prefix search with 'deepsearch:' to search into effects.\"\r\n                onChange={onChangeText}\r\n            />\r\n            <TutorialBubble stepKey=\"step_1\">\r\n                <DetailsList\r\n                    items={filteredList}\r\n                    selectionMode={SelectionMode.none}\r\n                    columns={COLUMNS}\r\n                    isHeaderVisible={false}\r\n                    setKey=\"set\"\r\n                    layoutMode={DetailsListLayoutMode.justified}\r\n                    onItemInvoked={onItemInvoked}\r\n                    onRenderItemColumn={onRenderItemColumn}\r\n                />\r\n            </TutorialBubble>\r\n            {onAdd ? <DefaultButton onClick={onAdd}>Add</DefaultButton> : []}\r\n        </>\r\n    );\r\n}\r\n","import {\r\n    DetailsList,\r\n    DetailsListLayoutMode,\r\n    SelectionMode,\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ISkillValidator } from '../../api/ISkill';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport TutorialBubble from '../../tutorial/TutorialBubble';\r\n\r\nconst COLUMNS = [\r\n    {\r\n        key: 'validator',\r\n        name: 'Validator',\r\n        fieldName: 'validator',\r\n        minWidth: 100,\r\n        maxWidth: 200,\r\n        isResizable: true,\r\n    },\r\n];\r\n\r\nexport const filterSearch = (skill: ISkillValidator, filter: string) => {\r\n    if (filter.toLocaleLowerCase().indexOf('deepsearch:') === 0) {\r\n        return deepSearchSkill(skill, filter.substring(11));\r\n    }\r\n    return search(skill, filter);\r\n};\r\n\r\nexport const search = (validator: ISkillValidator, filter: string) =>\r\n    validator.validator\r\n        .toLocaleLowerCase()\r\n        .indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\nexport const deepSearchSkill = (validator: ISkillValidator, filter: string) =>\r\n    JSON.stringify(validator || {})\r\n        .toLocaleLowerCase()\r\n        .indexOf(filter.toLocaleLowerCase()) >= 0;\r\n\r\ninterface IProps {\r\n    validatorList: ISkillValidator[];\r\n    onSelected: (validator: ISkillValidator) => void;\r\n    onAdd?: () => void;\r\n}\r\n\r\nexport function SkillValidatorList({\r\n    validatorList,\r\n    onSelected,\r\n    onAdd,\r\n}: IProps) {\r\n    const [filter, setFilter] = useState<string>('');\r\n    const [filteredList, setFilteredList] = useState<ISkillValidator[]>([]);\r\n    useEffect(() => {\r\n        setFilteredList(\r\n            validatorList\r\n                .map((validator: ISkillValidator) => ({\r\n                    ...validator,\r\n                }))\r\n                .filter(\r\n                    (validator: ISkillValidator) =>\r\n                        filter === '' || filterSearch(validator, filter)\r\n                )\r\n        );\r\n    }, [validatorList, filter]);\r\n    const onItemInvoked = (validator: ISkillValidator) => {\r\n        onSelected(validator);\r\n    };\r\n    const onChangeText = (\r\n        ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n        text: string | undefined\r\n    ) => {\r\n        setFilter(text || '');\r\n    };\r\n    return (\r\n        <>\r\n            <TextField\r\n                label=\"Search:\"\r\n                underlined\r\n                description=\"Prefix search with 'deepsearch:' to search into validators.\"\r\n                onChange={onChangeText}\r\n            />\r\n            <TutorialBubble stepKey=\"step_1\">\r\n                <DetailsList\r\n                    items={filteredList}\r\n                    selectionMode={SelectionMode.none}\r\n                    columns={COLUMNS}\r\n                    isHeaderVisible={false}\r\n                    setKey=\"set\"\r\n                    layoutMode={DetailsListLayoutMode.justified}\r\n                    onItemInvoked={onItemInvoked}\r\n                />\r\n            </TutorialBubble>\r\n            {onAdd ? <DefaultButton onClick={onAdd}>Add</DefaultButton> : []}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Stack,\r\n    IStackStyles,\r\n    IStackItemStyles,\r\n    IStackTokens,\r\n} from 'office-ui-fabric-react';\r\nimport { ITextStyles, Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { SkillEffectList } from './SkillEffectList';\r\nimport { SkillValidatorList } from '../validator/SkillValidatorList';\r\nimport { ISkillValidator, ISkillEffect } from '../../api/ISkill';\r\n\r\nconst stackStyles: IStackStyles = {\r\n    root: {},\r\n};\r\nconst stackItemStyles: IStackItemStyles = {\r\n    root: {\r\n        fontWeight: 'bold',\r\n        display: 'flex',\r\n        minHeight: '15em',\r\n        width: '50%',\r\n        padding: '1em',\r\n    },\r\n};\r\nconst headerStyles: ITextStyles = {\r\n    root: {\r\n        fontWeight: 'bold',\r\n    },\r\n};\r\nconst stackTokens: IStackTokens = {\r\n    childrenGap: 5,\r\n    padding: '1em',\r\n};\r\n\r\ninterface IProps {\r\n    validatorList: ISkillValidator[];\r\n    effectList: ISkillEffect[];\r\n    failedList: ISkillEffect[];\r\n    events: {\r\n        onValidatorSelect: (validator: ISkillValidator) => void;\r\n        onEffectSelect: (effectIndex: number) => void;\r\n        onFailedSelect: (failedIndex: number) => void;\r\n\r\n        onValidatorAddClicked?: () => void;\r\n        onEffectAddClick?: () => void;\r\n        onEffectDeleteClick: (index: number) => void;\r\n        onFailedAddClick?: () => void;\r\n        onFailedDeleteClick: (index: number) => void;\r\n    };\r\n}\r\n\r\nexport default function SkillEffectMappingEdit({\r\n    validatorList,\r\n    effectList,\r\n    failedList,\r\n    events: {\r\n        onValidatorSelect,\r\n        onEffectSelect,\r\n        onFailedSelect,\r\n\r\n        onValidatorAddClicked,\r\n        onEffectAddClick,\r\n        onEffectDeleteClick,\r\n        onFailedAddClick,\r\n        onFailedDeleteClick,\r\n    },\r\n}: IProps) {\r\n    return (\r\n        <Stack horizontal styles={stackStyles} tokens={stackTokens}>\r\n            <Stack.Item grow={1} styles={stackItemStyles}>\r\n                <Stack styles={{ root: { width: '100%' } }}>\r\n                    <Text styles={headerStyles} variant={'large'}>\r\n                        Next\r\n                    </Text>\r\n                    <SkillEffectList\r\n                        effectList={effectList}\r\n                        onSelected={onEffectSelect}\r\n                        onAdd={onEffectAddClick}\r\n                        onDelete={onEffectDeleteClick}\r\n                    />\r\n                </Stack>\r\n            </Stack.Item>\r\n            <Stack.Item grow={1} styles={stackItemStyles}>\r\n                <Stack styles={{ root: { width: '100%' } }}>\r\n                    <Text styles={headerStyles} variant={'large'}>\r\n                        Validators\r\n                    </Text>\r\n                    <SkillValidatorList\r\n                        validatorList={validatorList}\r\n                        onSelected={onValidatorSelect}\r\n                        onAdd={onValidatorAddClicked}\r\n                    />\r\n                    <hr style={{ width: '100%' }} />\r\n                    <Text styles={headerStyles} variant={'large'}>\r\n                        On Fail\r\n                    </Text>\r\n                    <SkillEffectList\r\n                        effectList={failedList || []}\r\n                        onSelected={onFailedSelect}\r\n                        onAdd={onFailedAddClick}\r\n                        onDelete={onFailedDeleteClick}\r\n                    />\r\n                </Stack>\r\n            </Stack.Item>\r\n        </Stack>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { ISkillEffect, ISkillEffectBase, ISkillValidator } from '../api/ISkill';\r\n\r\nexport const useSkillEffectSelected = (\r\n    effect: ISkillEffectBase | undefined\r\n) => {\r\n    const [selectedSkillEffect, setSelectedSkillEffect] = useState<\r\n        ISkillEffect | undefined\r\n    >(undefined);\r\n    const [selectedSkillEffectIndex, setSelectedSkillEffectIndex] = useState<\r\n        number\r\n    >(-1);\r\n    const [selectedSkillFailedIndex, setSelectedSkillFailedIndex] = useState<\r\n        number\r\n    >(-1);\r\n    useEffect(() => {\r\n        if (effect && effect.next && selectedSkillEffectIndex >= 0) {\r\n            setSelectedSkillEffect(effect.next[selectedSkillEffectIndex]);\r\n        }\r\n    }, [effect, selectedSkillEffectIndex]);\r\n    useEffect(() => {\r\n        if (effect && effect.failedList && selectedSkillFailedIndex >= 0) {\r\n            setSelectedSkillEffect(effect.failedList[selectedSkillFailedIndex]);\r\n        }\r\n    }, [effect, selectedSkillFailedIndex]);\r\n    const onValidatorSelected = (validator: ISkillValidator) => {\r\n        console.log('Validator selected', validator);\r\n    };\r\n    const onEffectSelected = (effectIndex: number) =>\r\n        setSelectedSkillEffectIndex(effectIndex);\r\n    const onFailedSelected = (failedIndex: number) =>\r\n        setSelectedSkillFailedIndex(failedIndex);\r\n    const reset = () => {\r\n        setSelectedSkillEffectIndex(-1);\r\n        setSelectedSkillFailedIndex(-1);\r\n        setSelectedSkillEffect(undefined);\r\n    };\r\n\r\n    return {\r\n        selectedSkillEffect,\r\n        selectedSkillEffectIndex,\r\n        selectedSkillFailedIndex,\r\n        onValidatorSelect: onValidatorSelected,\r\n        onEffectSelect: onEffectSelected,\r\n        onFailedSelect: onFailedSelected,\r\n        reset,\r\n    };\r\n};\r\n","import { ISkillEffectBase } from '../api/ISkill';\r\n\r\nexport const useSkillEffectListState = (\r\n    effect: ISkillEffectBase | undefined,\r\n    onChange: (effect: ISkillEffectBase) => void\r\n) => {\r\n    const onValidatorAddClicked = () => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.validatorList) {\r\n            effect.validatorList = [];\r\n        }\r\n        effect.validatorList = [\r\n            ...effect.validatorList,\r\n            {\r\n                validator: 'Validators_New.csx',\r\n                comment: 'The validator script will log text to server.',\r\n            },\r\n        ];\r\n        onChange(effect);\r\n    };\r\n    const onValidatorDeleteClick = (toDeleteIndex: number) => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.validatorList) {\r\n            effect.validatorList = [];\r\n        }\r\n        effect.validatorList = effect.validatorList.filter(\r\n            (_, index) => index !== toDeleteIndex\r\n        );\r\n        onChange(effect);\r\n    };\r\n    const onEffectAddClick = () => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.next) {\r\n            effect.next = [];\r\n        }\r\n        effect.next = [\r\n            ...effect.next,\r\n            {\r\n                effect: 'Effects_New.csx',\r\n                comment: 'The effect script will log text to server.',\r\n            },\r\n        ];\r\n        onChange(effect);\r\n    };\r\n    const onEffectDeleteClick = (toDeleteIndex: number) => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.next) {\r\n            effect.next = [];\r\n        }\r\n        effect.next = effect.next.filter((_, index) => index !== toDeleteIndex);\r\n        onChange(effect);\r\n    };\r\n    const onFailedAddClick = () => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.failedList) {\r\n            effect.failedList = [];\r\n        }\r\n        effect.failedList = [\r\n            ...effect.failedList,\r\n            {\r\n                effect: 'Effects_New.csx',\r\n                comment: 'The effect script will log text to server.',\r\n            },\r\n        ];\r\n        onChange(effect);\r\n    };\r\n    const onFailedDeleteClick = (toDeleteIndex: number) => {\r\n        if (!effect) {\r\n            return;\r\n        }\r\n        if (!effect.failedList) {\r\n            effect.failedList = [];\r\n        }\r\n        effect.failedList = effect.failedList.filter(\r\n            (_, index) => index !== toDeleteIndex\r\n        );\r\n        onChange(effect);\r\n    };\r\n\r\n    return {\r\n        onValidatorAddClicked,\r\n        onValidatorDeleteClick,\r\n        onEffectAddClick,\r\n        onEffectDeleteClick,\r\n        onFailedAddClick,\r\n        onFailedDeleteClick,\r\n    };\r\n};\r\n","import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Modal } from 'office-ui-fabric-react/lib/Modal';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './DataEditor.css';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { TextField } from 'office-ui-fabric-react';\r\n\r\ninterface IProps {\r\n    data?: any;\r\n    onChange: (data: any) => void;\r\n}\r\ninterface IDataItem {\r\n    key: string;\r\n    value: boolean | string | number;\r\n    type: string;\r\n}\r\n\r\nexport default function DataEditor({ data, onChange: onParentChange }: IProps) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [dataItems, setDataItems] = useState<IDataItem[]>([]);\r\n    const [resolveList, setResolveList] = useState<List<IDataItem> | undefined>(\r\n        undefined\r\n    );\r\n    useEffect(() => {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        setDataItems(\r\n            Object.keys(data).map(key => ({\r\n                key,\r\n                value: data[key],\r\n                type: typeof data[key],\r\n            }))\r\n        );\r\n    }, [data]);\r\n    const onOpen = () => {\r\n        setIsOpen(true);\r\n    };\r\n    const onClose = () => {\r\n        setIsOpen(false);\r\n    };\r\n    const commandButtons = [\r\n        {\r\n            key: 'newItem',\r\n            name: 'New',\r\n            cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\r\n            iconProps: {\r\n                iconName: 'Add',\r\n            },\r\n            ariaLabel: 'New',\r\n            subMenuProps: {\r\n                items: [\r\n                    {\r\n                        key: 'numberDataItem',\r\n                        name: 'Number',\r\n                    },\r\n                    {\r\n                        key: 'stringDataItem',\r\n                        name: 'Calendar event',\r\n                    },\r\n                    {\r\n                        key: 'boolDataItem',\r\n                        name: 'Boolean',\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n    ];\r\n\r\n    const RenderStringDataEditor = ({ item }: { item: IDataItem }) => {\r\n        const onChange = (_: React.FormEvent, newValue?: string) => {\r\n            var newData = Object.assign({}, data, {\r\n                [item.key]: newValue,\r\n            });\r\n            onParentChange(newData);\r\n        };\r\n        return (\r\n            <TextField\r\n                label={`${item.key} (${item.type})`}\r\n                value={`${item.value}`}\r\n                onChange={onChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    const onRenderCell = (item?: IDataItem, index?: number): JSX.Element => {\r\n        if (!item) {\r\n            return <></>;\r\n        }\r\n        return (\r\n            <div data-is-focusable={true}>\r\n                <div>\r\n                    {item.type === 'string' && (\r\n                        <RenderStringDataEditor item={item} />\r\n                    )}\r\n                    {item.type === 'number' && 'TODO: RenderNumberDataEditor'}\r\n                    {item.type === 'boolean' && 'TODO: RenderBooleanDataEditor'}\r\n                    {/* <TextField\r\n                        label={`${item.key} (${item.type})`}\r\n                        value={`${item.value}`}\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DefaultButton onClick={onOpen}>Open</DefaultButton>\r\n            <Modal\r\n                containerClassName=\"data-editor-main\"\r\n                isOpen={isOpen}\r\n                onDismiss={onClose}\r\n            >\r\n                <CommandBar items={commandButtons} />\r\n                <List items={dataItems} onRenderCell={onRenderCell} />\r\n\r\n                <pre>{JSON.stringify(dataItems, null, 4)}</pre>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","import {\r\n    IStackItemStyles,\r\n    IStackStyles,\r\n    IStackTokens,\r\n    DefaultButton,\r\n} from 'office-ui-fabric-react';\r\nimport { ITextStyles } from 'office-ui-fabric-react/lib/Text';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n    ISkillEffect,\r\n    ISkillValidator,\r\n    ISkill,\r\n    ISkillEffectBase,\r\n} from '../../api/ISkill';\r\nimport SkillEffectMappingEdit from './SkillEffectMappingEdit';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { useSkillEffectSelected } from '../UseSkillEffectSelected';\r\nimport { useSkillEffectListState } from '../UseSkillEffectListState';\r\nimport DataEditor from '../data/DataEditor';\r\n\r\ninterface IProps {\r\n    effect: ISkillEffect;\r\n    onChange: (effect: ISkillEffectBase) => void;\r\n    onBack: () => void;\r\n}\r\n\r\nexport default function SkillEffectEdit({\r\n    effect,\r\n    onChange: onChangeToParent,\r\n    onBack: onBackToParent,\r\n}: IProps) {\r\n    const onBack = () => {\r\n        reset();\r\n    };\r\n    const {\r\n        selectedSkillEffect,\r\n        onEffectSelect,\r\n        onFailedSelect,\r\n        onValidatorSelect,\r\n        reset,\r\n    } = useSkillEffectSelected(effect);\r\n\r\n    const {\r\n        onValidatorAddClicked,\r\n        onEffectAddClick,\r\n        onEffectDeleteClick,\r\n        onFailedAddClick,\r\n        onFailedDeleteClick,\r\n    } = useSkillEffectListState(effect, onChangeToParent);\r\n\r\n    const onChanged = (\r\n        _: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n        newValue: string | undefined\r\n    ) => {\r\n        effect.effect = newValue || '';\r\n        onChangeToParent(effect);\r\n    };\r\n    const onDataChanged = (data: any) => {\r\n        effect.data = data;\r\n        onChangeToParent(effect);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {selectedSkillEffect ? (\r\n                <SkillEffectEdit\r\n                    effect={selectedSkillEffect}\r\n                    onChange={() => console.log('Changed')}\r\n                    onBack={onBack}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultButton onClick={onBackToParent}>Back</DefaultButton>\r\n                    <TextField\r\n                        label=\"Effect Name\"\r\n                        underlined\r\n                        value={effect.effect}\r\n                        onChange={onChanged}\r\n                    />\r\n                    <DataEditor data={effect.data} onChange={onDataChanged} />\r\n                    <SkillEffectMappingEdit\r\n                        validatorList={effect.validatorList || []}\r\n                        effectList={effect.next || []}\r\n                        failedList={effect.failedList || []}\r\n                        events={{\r\n                            onValidatorSelect,\r\n                            onValidatorAddClicked,\r\n                            onEffectSelect,\r\n                            onEffectAddClick,\r\n                            onEffectDeleteClick,\r\n                            onFailedSelect,\r\n                            onFailedAddClick,\r\n                            onFailedDeleteClick,\r\n                        }}\r\n                    />\r\n                </>\r\n            )}\r\n\r\n            <pre>{JSON.stringify(effect, null, 4)}</pre>\r\n        </>\r\n    );\r\n}\r\n","import {\r\n    IStackItemStyles,\r\n    IStackStyles,\r\n    IStackTokens,\r\n    Stack,\r\n} from 'office-ui-fabric-react';\r\nimport { ITextStyles, Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { IEventService } from '../../core/event';\r\nimport { Inject } from '../../core/ioc';\r\nimport { ISkill, ISkillEffect, ISkillEffectBase } from '../api/ISkill';\r\nimport {\r\n    SkillChangedEventData,\r\n    SKILL_CHANGED_EVENT,\r\n} from '../changed/SkillChangedEvent';\r\nimport { getSkill, updateSkill } from '../state/SkillEditorState';\r\nimport SkillEffectEdit from './effect/SkillEffectEdit';\r\nimport SkillEffectMappingEdit from './effect/SkillEffectMappingEdit';\r\nimport { useSkillEffectListState } from './UseSkillEffectListState';\r\nimport { useSkillEffectSelected } from './UseSkillEffectSelected';\r\n\r\n// Styles definition\r\nconst stackStyles: IStackStyles = {\r\n    root: {},\r\n};\r\nconst stackItemStyles: IStackItemStyles = {\r\n    root: {\r\n        fontWeight: 'bold',\r\n        display: 'flex',\r\n        minHeight: '15em',\r\n        width: '50%',\r\n        padding: '1em',\r\n    },\r\n};\r\nconst headerStyles: ITextStyles = {\r\n    root: {\r\n        fontWeight: 'bold',\r\n    },\r\n};\r\nconst stackTokens: IStackTokens = {\r\n    childrenGap: 5,\r\n    padding: '1em',\r\n};\r\n\r\nexport default function SkillEditor({\r\n    match,\r\n}: RouteComponentProps<{ skillId: string }>) {\r\n    const [skill, setSkill] = useState<ISkill | undefined>(\r\n        getSkill(match.params.skillId)\r\n    );\r\n    const {\r\n        selectedSkillEffect,\r\n        selectedSkillEffectIndex,\r\n        selectedSkillFailedIndex,\r\n        onEffectSelect,\r\n        onFailedSelect,\r\n        onValidatorSelect,\r\n        reset,\r\n    } = useSkillEffectSelected(skill);\r\n\r\n    useEffect(() => {\r\n        const eventService: IEventService = Inject(IEventService);\r\n        if (skill) {\r\n            const onSkillUpdated = ({ actionType }: SkillChangedEventData) => {\r\n                if (actionType === 'DELETE_ACTION') {\r\n                    reset();\r\n                }\r\n                setSkill(getSkill(match.params.skillId));\r\n            };\r\n            eventService.on(SKILL_CHANGED_EVENT, onSkillUpdated, 'SkillEditor');\r\n            return () => {\r\n                eventService.off(\r\n                    SKILL_CHANGED_EVENT,\r\n                    onSkillUpdated,\r\n                    'SkillEditor'\r\n                );\r\n            };\r\n        }\r\n    }, [skill]);\r\n\r\n    const onSkillEffectChanged = createOnSkillEffectChanged(\r\n        skill,\r\n        selectedSkillEffectIndex,\r\n        selectedSkillFailedIndex\r\n    );\r\n\r\n    const {\r\n        onValidatorAddClicked,\r\n        onEffectAddClick,\r\n        onEffectDeleteClick,\r\n        onFailedAddClick,\r\n        onFailedDeleteClick,\r\n    } = useSkillEffectListState(skill, onSkillEffectChanged);\r\n\r\n    const onBack = () => {\r\n        reset();\r\n    };\r\n    if (!skill) {\r\n        return (\r\n            <>\r\n                <Text nowrap block onContextMenu={() => alert('open context')}>\r\n                    {match.params.skillId}\r\n                </Text>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <Text nowrap block onContextMenu={() => alert('open context')}>\r\n                {match.params.skillId}\r\n            </Text>\r\n            {selectedSkillEffect ? (\r\n                <SkillEffectEdit\r\n                    effect={selectedSkillEffect}\r\n                    onChange={onSkillEffectChanged}\r\n                    onBack={onBack}\r\n                />\r\n            ) : (\r\n                <Stack>\r\n                    <TextField\r\n                        label=\"Description\"\r\n                        underlined\r\n                        value={skill.description}\r\n                    />\r\n                    <TextField label=\"Type\" underlined value={skill.type} />\r\n                    <TextField label=\"Target\" underlined value={skill.target} />\r\n                    <SkillEffectMappingEdit\r\n                        validatorList={skill.validatorList || []}\r\n                        effectList={skill.next || []}\r\n                        failedList={skill.failedList || []}\r\n                        events={{\r\n                            onValidatorSelect,\r\n                            onValidatorAddClicked,\r\n                            onEffectSelect,\r\n                            onEffectAddClick,\r\n                            onEffectDeleteClick,\r\n                            onFailedSelect,\r\n                            onFailedAddClick,\r\n                            onFailedDeleteClick,\r\n                        }}\r\n                    />\r\n                </Stack>\r\n            )}\r\n            <hr />\r\n            <pre>{JSON.stringify(skill, null, 4)}</pre>\r\n        </>\r\n    );\r\n}\r\n\r\nconst createOnSkillEffectChanged = (\r\n    skill: ISkill | undefined,\r\n    selectedSkillEffectIndex: number,\r\n    selectedSkillFailedIndex: number\r\n) => (effect: ISkillEffectBase) => {\r\n    if (!skill) {\r\n        return;\r\n    }\r\n    if (selectedSkillEffectIndex >= 0) {\r\n        if (!skill.next) {\r\n            skill.next = [];\r\n        }\r\n        skill.next[selectedSkillEffectIndex] = effect as ISkillEffect;\r\n    } else if (selectedSkillFailedIndex >= 0) {\r\n        if (!skill.failedList) {\r\n            skill.failedList = [];\r\n        }\r\n        skill.failedList[selectedSkillFailedIndex] = effect as ISkillEffect;\r\n    }\r\n    updateSkill(skill);\r\n};\r\n","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { SkillList } from \"./list/SkillList\";\r\nimport SkillEditor from './editor/SkillEditor';\r\n\r\nexport function SkillEditorContainer() {\r\n  return (\r\n    <>\r\n      <h1>Skill Editor</h1>\r\n      <Switch>\r\n        <Route path=\"/skill-editor/edit/:skillId\" component={SkillEditor} />\r\n        <Route path=\"/skill-editor\" component={SkillList} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import \"./Editor.css\";\r\nimport * as React from \"react\";\r\nimport { getEditorState, IEditorServerState } from \"./state/EditorState\";\r\nimport { fetchEditorState } from \"./state/FetchEditorState\";\r\nimport EditorHome from \"./home/EditorHome\";\r\nimport TextEditor from \"./text/TextEditor\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport EditorSidebar from \"./sidebar/EditorSidebar\";\r\nimport { createLogger, ILogger } from \"../core/logger\";\r\nimport { IEventService } from \"../core/event\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { EDITOR_STATE_UPDATED } from \"./state/EditorStateUpdated\";\r\nimport { SkillEditorContainer } from \"../skill/SkillEditorContainer\";\r\n\r\nexport interface IProps {}\r\nexport interface IState {\r\n  editorState: IEditorServerState;\r\n}\r\n\r\nclass Editor extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    editorState: getEditorState()\r\n  };\r\n  private readonly _logger: ILogger = createLogger(\"View.Editor\");\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  async componentDidMount() {\r\n    this._eventService.on(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n    try {\r\n      await fetchEditorState();\r\n    } catch (ex) {\r\n      this._logger.error(\"Some Error\", ex);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this._eventService.off(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n  }\r\n  onEditorStateUpdated() {\r\n    this.setState({\r\n      editorState: getEditorState()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor\">\r\n        <div className=\"editor-sidebar\">\r\n          <EditorSidebar editorState={this.state.editorState} />\r\n        </div>\r\n        <div className=\"editor-main\">\r\n          <Switch>\r\n            <Route path=\"/skill-editor\" component={SkillEditorContainer} />\r\n            <Route path=\"/text-editor\" component={TextEditor} />\r\n            <Route path=\"/\" component={EditorHome} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import { setEditorState } from \"./EditorState\";\r\nimport { sendErrorMessage } from \"../../notificationCenter/send/SendErrorMssage\";\r\n\r\nexport const fetchEditorState = (): Promise<void> =>\r\n  fetch(\"serverData/editor-data.json\")\r\n    .then(response => response.json())\r\n    .then(result => setEditorState(result))\r\n    .catch(error =>\r\n      sendErrorMessage(\"Fetch Editor State Error\", JSON.stringify(error))\r\n    );\r\n","import { IEventListener } from \"../api/IEventListener\";\r\nimport { IEventService } from \"../api/IEventService\";\r\nimport { IEvent } from \"../api/IEvent\";\r\nimport { IEventType } from \"../api/IEventType\";\r\n\r\nexport class StandardEventService implements IEventService {\r\n  private _eventListenerList: Map<string, IEventListener[]> = new Map<\r\n    string,\r\n    IEventListener[]\r\n  >();\r\n\r\n  public publish(event: IEvent): void {\r\n    const eventListeners = this._eventListenerList.get(event.type.key) || [];\r\n    const len = eventListeners.length;\r\n    for (let index = 0; index < len; index++) {\r\n      const listener = eventListeners[index];\r\n      try {\r\n        listener.function.call(listener.context, event.data);\r\n      } catch (ex) {\r\n        console.error(\"Listener failed\", ex);\r\n      }\r\n    }\r\n  }\r\n\r\n  public on(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService {\r\n    const listenerList = this._eventListenerList.get(type.key) || [];\r\n    listenerList.push({\r\n      function: eventListener,\r\n      context\r\n    });\r\n    this._eventListenerList.set(type.key, listenerList);\r\n\r\n    return this;\r\n  }\r\n\r\n  public off(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService {\r\n    this._eventListenerList.set(\r\n      type.key,\r\n      (this._eventListenerList.get(type.key) || []).filter(\r\n        listener =>\r\n          listener.function !== eventListener || listener.context !== context\r\n      )\r\n    );\r\n    return this;\r\n  }\r\n}\r\n","export const throttle = (\r\n  fn: Function,\r\n  threshold: number,\r\n  scope?: any\r\n): ((...argList: any[]) => void) => {\r\n  threshold || (threshold = 250);\r\n  let last = +new Date();\r\n  return function(this: any) {\r\n    const context = scope || this,\r\n      now = +new Date(),\r\n      args = arguments;\r\n    if (last && now > last + threshold) {\r\n      fn.apply(context, args);\r\n      last = now;\r\n    }\r\n  };\r\n};\r\n","// import dateFormat from \"dateformat\";\r\nimport { ILogger } from '../api/ILogger';\r\nimport { ILogMessage } from '../api/ILogMessage';\r\nimport { throttleMethod } from '../../throttle';\r\n\r\nexport const LOGGED_MESSAGE_LIST: ILogMessage[] = [];\r\n(window as any).LOGGED_MESSAGES = LOGGED_MESSAGE_LIST;\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n    constructor(\r\n        private readonly _name: string,\r\n        private readonly _isDebug: boolean = true,\r\n        private readonly _isTrace: boolean = true\r\n    ) {}\r\n\r\n    public log(message: string, data: any = '') {\r\n        const messageToLog = `[${this.formattedNowDate()}] [INFO]: [${\r\n            this._name\r\n        }] \\r\\n\\t${message}`;\r\n        this.throttledLog(messageToLog, data);\r\n        LOGGED_MESSAGE_LIST.push({\r\n            level: 'INFO',\r\n            message: messageToLog,\r\n            data,\r\n        });\r\n    }\r\n    public debug(message: string, data: any = '[no-data]') {\r\n        this.formattedNowDate();\r\n        if (!this._isDebug) {\r\n            return;\r\n        }\r\n        const messageToLog = `[${this.formattedNowDate()}] [DEBUG]: [${\r\n            this._name\r\n        }] \\r\\n\\t${message}`;\r\n        console.info(messageToLog, data);\r\n        LOGGED_MESSAGE_LIST.push({\r\n            level: 'DEBUG',\r\n            message: messageToLog,\r\n            data,\r\n        });\r\n    }\r\n    public error(message: string, data: any = '') {\r\n        const messageToLog = `[${this.formattedNowDate()}] [ERROR]: [${\r\n            this._name\r\n        }] \\r\\n\\t${message}`;\r\n        console.error(messageToLog, data);\r\n        LOGGED_MESSAGE_LIST.push({\r\n            level: 'ERROR',\r\n            message: messageToLog,\r\n            data,\r\n        });\r\n    }\r\n    public trace(message: string, data: any = '') {\r\n        if (this._isTrace) {\r\n            const messageToLog = `[${this.formattedNowDate()}] [TRACE]: [${\r\n                this._name\r\n            }] \\r\\n\\t${message}`;\r\n            this.throttledTrace(messageToLog, data);\r\n            LOGGED_MESSAGE_LIST.push({\r\n                level: 'TRACE',\r\n                message: messageToLog,\r\n                data,\r\n            });\r\n        }\r\n    }\r\n    @throttleMethod(1000)\r\n    private throttledLog(messageToLog: string, data: any = '') {\r\n        console.log(messageToLog, data);\r\n    }\r\n    private throttledTrace(messageToLog: string, data: any = '') {\r\n        console.log(messageToLog, data);\r\n        console.trace();\r\n    }\r\n\r\n    /**\r\n     * 01-14-2019 21:22:45.0123456-06:00\r\n     */\r\n    private formattedNowDate() {\r\n        const now = new Date();\r\n        return now.toUTCString();\r\n        // const formattedOffset = dateFormat(now, \"o\");\r\n        // return (\r\n        //   dateFormat(now, \"mm-dd-yyyy HH:MM:ss.l\") +\r\n        //   formattedOffset.slice(0, 3) +\r\n        //   \":\" +\r\n        //   formattedOffset.slice(3)\r\n        // );\r\n    }\r\n}\r\n","import { throttle } from \"../impl/Throttle\";\r\n\r\nexport function throttleMethod(threshold: number) {\r\n  return function(\r\n    this: any,\r\n    target: any,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    const method = descriptor.value;\r\n    descriptor.value = throttle(function(this: any) {\r\n      return method.apply(this, arguments);\r\n    }, threshold);\r\n  };\r\n}\r\n","import { ILogger } from \"../api/ILogger\";\r\nimport { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { ConsoleLogger } from \"../model/ConsoleLogger\";\r\n\r\nexport class StandardLoggerFactory implements ILoggerFactory {\r\n  public create(loggerName: string): ILogger {\r\n    return new ConsoleLogger(loggerName);\r\n  }\r\n}\r\n","import \"./NotificationCenter.css\";\r\nimport * as React from \"react\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { IEventService } from \"../core/event\";\r\n\r\ninterface IProps {}\r\ninterface IState {}\r\n\r\nexport default class NotificationCenter extends React.Component<\r\n  IProps,\r\n  IState\r\n> {\r\n  state: IState = {};\r\n\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  componentDidMount() {}\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <div className=\"notification-center\" />;\r\n  }\r\n}\r\n","import { createSingletonService } from \"./core/ioc\";\r\nimport { IEventService } from \"./core/event\";\r\nimport { StandardEventService } from \"./core/event/model/StandardEventService\";\r\nimport { ILoggerFactory } from \"./core/logger\";\r\nimport { StandardLoggerFactory } from \"./core/logger/factory/StandardLoggerFactory\";\r\n\r\nexport const setupIoC = () => {\r\n  // Setup Event Services\r\n  createSingletonService(IEventService, StandardEventService);\r\n  // Setup logger\r\n  createSingletonService(ILoggerFactory, StandardLoggerFactory);\r\n};\r\n","import './styles.css';\r\nimport * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { HashRouter as Router, NavLink } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router';\r\nimport Editor from './editor/Editor';\r\nimport { setupIoC } from './SetupIoC';\r\nimport NotificationCenter from './notificationCenter/NotificationCenter';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\n// import { FluentCustomizations } from \"@uifabric/fluent-theme\";\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\n\r\nsetupIoC();\r\ninitializeIcons();\r\n\r\nfunction App() {\r\n    return (\r\n        <Fabric>\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <NavLink to=\"/\">Home</NavLink> {' | '}\r\n                    <NavLink to=\"/text-editor\">Text Editor</NavLink> {' | '}\r\n                    <NavLink to=\"/skill-editor\">Skill Editor</NavLink>\r\n                    <Switch>\r\n                        <Route path=\"/\" component={Editor} />\r\n                    </Switch>\r\n                </Router>\r\n                <NotificationCenter />\r\n            </div>\r\n        </Fabric>\r\n    );\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n","import { Config } from \"../container/Config\";\r\nimport { IoCContainer, ConfigImpl } from \"../container/IoCContainer\";\r\nimport { AutoWired } from \"../decorator/AutoWired\";\r\nimport { Provider } from \"../api/Provider\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\n/**\r\n * The IoC Container class. Can be used to register and to retrieve your dependencies.\r\n * You can also use de decorators [[AutoWired]], [[Scoped]], [[Singleton]], [[Provided]] and [[Provides]]\r\n * to configure the dependency directly on the class.\r\n */\r\nexport class Container {\r\n  /**\r\n   * Add a dependency to the Container. If this type is already present, just return its associated\r\n   * configuration object.\r\n   * Example of usage:\r\n   *\r\n   * ```\r\n   * Container.bind(PersonDAO).to(ProgrammerDAO).scope(Scope.Singleton);\r\n   * ```\r\n   * @param source The type that will be bound to the Container\r\n   * @return a container configuration\r\n   */\r\n  public static bind(source: Function): Config {\r\n    if (!IoCContainer.isBound(source)) {\r\n      AutoWired(source);\r\n      return IoCContainer.bind(source).to(source);\r\n    }\r\n\r\n    return IoCContainer.bind(source);\r\n  }\r\n\r\n  /**\r\n   * Retrieve an object from the container. It will resolve all dependencies and apply any type replacement\r\n   * before return the object.\r\n   * If there is no declared dependency to the given source type, an implicity bind is performed to this type.\r\n   * @param source The dependency type to resolve\r\n   * @return an object resolved for the given source type;\r\n   */\r\n  public static get<T>(source: Function & { prototype: T }): T {\r\n    return IoCContainer.get(source);\r\n  }\r\n\r\n  /**\r\n   * Retrieve a type associated with the type provided from the container\r\n   * @param source The dependency type to resolve\r\n   * @return an object resolved for the given source type;\r\n   */\r\n  public static getType(source: Function) {\r\n    return IoCContainer.getType(source);\r\n  }\r\n\r\n  /**\r\n   * Store the state for a specified binding.  Can then be restored later.   Useful for testing.\r\n   * @param source The dependency type\r\n   */\r\n  public static snapshot(source: Function): void {\r\n    const config = Container.bind(source) as ConfigImpl;\r\n    Container.snapshots.providers.set(source, config.iocprovider);\r\n    if (config.iocscope) {\r\n      Container.snapshots.scopes.set(source, config.iocscope);\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Restores the state for a specified binding that was previously captured by snapshot.\r\n   * @param source The dependency type\r\n   */\r\n  public static restore(source: Function): void {\r\n    if (!Container.snapshots.providers.has(source)) {\r\n      throw new TypeError(\"Config for source was never snapshoted.\");\r\n    }\r\n    const config = Container.bind(source);\r\n    config.provider(Container.snapshots.providers.get(source) as any);\r\n    if (Container.snapshots.scopes.has(source)) {\r\n      config.scope(Container.snapshots.scopes.get(source) as any);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Internal storage for snapshots\r\n   * @type {providers: Map<Function, Provider>; scopes: Map<Function, Scope>}\r\n   */\r\n  private static snapshots: {\r\n    providers: Map<Function, Provider>;\r\n    scopes: Map<Function, Scope>;\r\n  } = {\r\n    providers: new Map(),\r\n    scopes: new Map()\r\n  };\r\n}\r\n","import {\r\n  InjectorHanlder,\r\n  IoCContainer,\r\n  ConfigImpl\r\n} from \"../container/IoCContainer\";\r\n\r\n/**\r\n * A decorator to tell the container that this class should its instantiation always handled by the Container.\r\n *\r\n * An AutoWired class will have its constructor overriden to always delegate its instantiation to the IoC Container.\r\n * So, if you write:\r\n *\r\n * ```\r\n * @ AutoWired\r\n * class PersonService {\r\n *   @ Inject\r\n *   personDAO: PersonDAO;\r\n * }\r\n * ```\r\n *\r\n * Any PersonService instance will be created by the IoC Container, even when a direct call to its constructor is called:\r\n *\r\n * ```\r\n * let PersonService = new PersonService(); // will be returned by Container, and all internal dependencies resolved.\r\n * ```\r\n *\r\n * It is the same that use:\r\n *\r\n * ```\r\n * Container.bind(PersonService);\r\n * let personService: PersonService = Container.get(PersonService);\r\n * ```\r\n */\r\nexport function AutoWired(target: Function) {\r\n  // <T extends {new(...args:any[]):{}}>(target:T) {\r\n  const newConstructor = InjectorHanlder.decorateConstructor(target);\r\n  const config: ConfigImpl = IoCContainer.bind(target) as ConfigImpl;\r\n  config.toConstructor(newConstructor);\r\n  return newConstructor;\r\n}\r\n","import { Provider } from \"./Provider\";\r\nimport { InjectorHanlder } from \"../container/IoCContainer\";\r\n\r\n/**\r\n * Class responsible to handle the scope of the instances created by the Container\r\n */\r\nexport abstract class Scope {\r\n  /**\r\n   * A reference to the LocalScope. Local Scope return a new instance for each dependency resolution requested.\r\n   * This is the default scope.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Local: Scope;\r\n  /**\r\n   * A reference to the SingletonScope. Singleton Scope return the same instance for any\r\n   * dependency resolution requested.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Singleton: Scope;\r\n\r\n  /**\r\n   * Method called when the Container needs to resolve a dependency. It should return the instance that will\r\n   * be returned by the Container.\r\n   * @param provider The provider associated with the current bind. Used to create new instances when necessary.\r\n   * @param source The source type of this bind.\r\n   * @return the resolved instance.\r\n   */\r\n  public abstract resolve(provider: Provider, source: Function): any;\r\n\r\n  /**\r\n   * Called by the IoC Container when some configuration is changed on the Container binding.\r\n   * @param source The source type that has its configuration changed.\r\n   */\r\n  public reset(source: Function) {\r\n    // Do nothing\r\n  }\r\n}\r\n\r\n/**\r\n * Default [[Scope]] that always create a new instace for any dependency resolution request\r\n */\r\nclass LocalScope extends Scope {\r\n  public resolve(provider: Provider, source: Function) {\r\n    return provider.get();\r\n  }\r\n}\r\n\r\nScope.Local = new LocalScope();\r\n\r\n/**\r\n * Scope that create only a single instace to handle all dependency resolution requests.\r\n */\r\nclass SingletonScope extends Scope {\r\n  private static instances: Map<Function, any> = new Map<Function, any>();\r\n\r\n  public resolve(provider: Provider, source: any) {\r\n    let instance: any = SingletonScope.instances.get(source);\r\n    if (!instance) {\r\n      source.__block_Instantiation = false;\r\n      instance = provider.get();\r\n      source.__block_Instantiation = true;\r\n      SingletonScope.instances.set(source, instance);\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  public reset(source: Function) {\r\n    SingletonScope.instances.delete(\r\n      InjectorHanlder.getConstructorFromType(source)\r\n    );\r\n  }\r\n}\r\n\r\nScope.Singleton = new SingletonScope();\r\n","import { Scope } from '../api/Scope';\r\nimport { Config } from './Config';\r\nimport { Provider } from '../api/Provider';\r\n\r\n/**\r\n * Internal implementation of IoC Container.\r\n */\r\nexport class IoCContainer {\r\n    public static isBound(source: Function): boolean {\r\n        checkType(source);\r\n        const baseSource = InjectorHanlder.getConstructorFromType(source);\r\n        const config: ConfigImpl | undefined = IoCContainer.bindings.get(\r\n            baseSource\r\n        );\r\n        return !!config;\r\n    }\r\n\r\n    public static bind(source: Function): Config {\r\n        checkType(source);\r\n        const baseSource = InjectorHanlder.getConstructorFromType(source);\r\n        let config: ConfigImpl | undefined = IoCContainer.bindings.get(\r\n            baseSource\r\n        );\r\n        if (!config) {\r\n            config = new ConfigImpl(baseSource);\r\n            IoCContainer.bindings.set(baseSource, config);\r\n        }\r\n        return config;\r\n    }\r\n\r\n    public static get(source: Function) {\r\n        const config: ConfigImpl = IoCContainer.bind(source) as ConfigImpl;\r\n        if (!config.iocprovider) {\r\n            config.to(config.source as FunctionConstructor);\r\n        }\r\n        return config.getInstance();\r\n    }\r\n\r\n    public static getType(source: Function): Function {\r\n        checkType(source);\r\n        const baseSource = InjectorHanlder.getConstructorFromType(source);\r\n        const config: ConfigImpl | undefined = IoCContainer.bindings.get(\r\n            baseSource\r\n        );\r\n        if (!config) {\r\n            throw new TypeError(\r\n                `The type ${\r\n                    source.name\r\n                } hasn't been registered with the IOC Container`\r\n            );\r\n        }\r\n        return config.targetSource || config.source;\r\n    }\r\n\r\n    public static injectProperty(\r\n        target: any,\r\n        key: string,\r\n        propertyType: Function\r\n    ) {\r\n        const propKey = `__${key}`;\r\n        Object.defineProperty(target, key, {\r\n            enumerable: true,\r\n            get() {\r\n                return this[propKey]\r\n                    ? this[propKey]\r\n                    : (this[propKey] = IoCContainer.get(propertyType));\r\n            },\r\n            set(newValue) {\r\n                this[propKey] = newValue;\r\n            },\r\n        });\r\n    }\r\n\r\n    public static assertInstantiable(target: any) {\r\n        if (target.__block_Instantiation) {\r\n            throw new TypeError(\r\n                'Can not instantiate Singleton class. ' +\r\n                    'Ask Container for it, using Container.get'\r\n            );\r\n        }\r\n    }\r\n    private static bindings: Map<FunctionConstructor, ConfigImpl> = new Map<\r\n        FunctionConstructor,\r\n        ConfigImpl\r\n    >();\r\n}\r\n\r\n/**\r\n * Utility function to validate type\r\n */\r\nfunction checkType(source: Object) {\r\n    if (!source) {\r\n        throw new TypeError(\r\n            'Invalid type requested to IoC container. Type is not defined.'\r\n        );\r\n    }\r\n}\r\n\r\nexport class ConfigImpl implements Config {\r\n    public source: Function;\r\n    public targetSource!: Function;\r\n    public iocprovider!: Provider;\r\n    public iocscope?: Scope;\r\n    public decoratedConstructor!: FunctionConstructor;\r\n    public paramTypes!: any[];\r\n\r\n    constructor(source: Function) {\r\n        this.source = source;\r\n    }\r\n\r\n    public to(target: FunctionConstructor) {\r\n        checkType(target);\r\n        const targetSource = InjectorHanlder.getConstructorFromType(target);\r\n        this.targetSource = targetSource;\r\n        if (this.source === targetSource) {\r\n            const configImpl = this;\r\n            this.iocprovider = {\r\n                get: () => {\r\n                    const params = configImpl.getParameters();\r\n                    if (configImpl.decoratedConstructor) {\r\n                        return params\r\n                            ? new configImpl.decoratedConstructor(...params)\r\n                            : new configImpl.decoratedConstructor();\r\n                    }\r\n                    return params ? new target(...params) : new target();\r\n                },\r\n            };\r\n        } else {\r\n            this.iocprovider = {\r\n                get: () => {\r\n                    return IoCContainer.get(target);\r\n                },\r\n            };\r\n        }\r\n        if (this.iocscope) {\r\n            this.iocscope.reset(this.source);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public provider(provider: Provider) {\r\n        this.iocprovider = provider;\r\n        if (this.iocscope) {\r\n            this.iocscope.reset(this.source);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public scope(scope: Scope) {\r\n        this.iocscope = scope;\r\n        if (scope === Scope.Singleton) {\r\n            (this as any).source.__block_Instantiation = true;\r\n            scope.reset(this.source);\r\n        } else if ((this as any).source.__block_Instantiation) {\r\n            delete (this as any).source.__block_Instantiation;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public withParams(...paramTypes: any[]) {\r\n        this.paramTypes = paramTypes;\r\n        return this;\r\n    }\r\n\r\n    public toConstructor(newConstructor: FunctionConstructor) {\r\n        this.decoratedConstructor = newConstructor;\r\n        return this;\r\n    }\r\n\r\n    public getInstance() {\r\n        if (!this.iocscope) {\r\n            this.scope(Scope.Local);\r\n        }\r\n        if (!this.iocscope) {\r\n            throw new Error('IocScope was not set correctly.');\r\n        }\r\n        return this.iocscope.resolve(this.iocprovider, this.source);\r\n    }\r\n\r\n    private getParameters() {\r\n        if (this.paramTypes) {\r\n            return this.paramTypes.map(paramType =>\r\n                IoCContainer.get(paramType)\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Utility class to handle injection behavior on class decorations.\r\n */\r\nexport class InjectorHanlder {\r\n    public static constructorNameRegEx = /function (\\w*)/;\r\n\r\n    public static decorateConstructor(target: Function) {\r\n        let newConstructor: any;\r\n        // tslint:disable-next-line:class-name\r\n        newConstructor = class ioc_wrapper extends (target as FunctionConstructor) {\r\n            constructor(...args: any[]) {\r\n                super(...args);\r\n                IoCContainer.assertInstantiable(target);\r\n            }\r\n        };\r\n        newConstructor.__parent = target;\r\n        return newConstructor;\r\n    }\r\n\r\n    public static hasNamedConstructor(source: Function): boolean {\r\n        if (source.name) {\r\n            return source.name !== 'ioc_wrapper';\r\n        } else {\r\n            try {\r\n                const constructorName = source.prototype.constructor\r\n                    .toString()\r\n                    .match(this.constructorNameRegEx)[1];\r\n                return constructorName && constructorName !== 'ioc_wrapper';\r\n            } catch {\r\n                // make linter happy\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static getConstructorFromType(\r\n        target: Function\r\n    ): FunctionConstructor {\r\n        let typeConstructor: any = target;\r\n        if (this.hasNamedConstructor(typeConstructor)) {\r\n            return typeConstructor as FunctionConstructor;\r\n        }\r\n        typeConstructor = typeConstructor.__parent;\r\n        while (typeConstructor) {\r\n            if (this.hasNamedConstructor(typeConstructor)) {\r\n                return typeConstructor as FunctionConstructor;\r\n            }\r\n            typeConstructor = typeConstructor.__parent;\r\n        }\r\n        throw TypeError(\r\n            'Can not identify the base Type for requested target ' +\r\n                target.toString()\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}