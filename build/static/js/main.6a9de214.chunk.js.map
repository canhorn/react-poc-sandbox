{"version":3,"sources":["core/ioc/model/Container.ts","core/ioc/decorator/AutoWired.ts","core/ioc/api/Scope.ts","core/ioc/index.ts","core/ioc/container/IoCContainer.ts","core/event/index.ts","core/event/api/IEventService.ts","core/event/model/EventType.ts","core/ioc/api/Inject.ts","core/ioc/create/CreateProviderService.ts","core/ioc/create/CreateService.ts","core/ioc/create/CreateSingletonProviderService.ts","core/ioc/create/CreateSingletonService.ts","core/ioc/create/CreateSingletonServiceFactory.ts","editor/state/EditorStateUpdated.ts","editor/state/EditorState.ts","notificationCenter/send/SendErrorMssage.ts","editor/home/EditorHomeRender.tsx","editor/home/EditorHome.ts","editor/text/file/FileEditor.tsx","editor/text/TextEditor.tsx","editor/sidebar/EditorSidebar.tsx","core/logger/api/ILoggerFactory.ts","core/logger/create/CreateLogger.ts","skill/state/SkillEditorState.ts","skill/list/SkillList.tsx","skill/SkillEditor.tsx","editor/Editor.tsx","editor/state/FetchEditorState.ts","core/event/model/StandardEventService.ts","core/throttle/impl/Throttle.ts","core/logger/model/ConsoleLogger.ts","core/throttle/decorator/ThrottleMethod.ts","core/logger/factory/StandardLoggerFactory.ts","notificationCenter/NotificationCenter.tsx","SetupIoC.ts","index.tsx"],"names":["Container","Object","classCallCheck","this","createClass","key","value","source","IoCContainer","isBound","bind","target","newConstructor","InjectorHanlder","decorateConstructor","toConstructor","AutoWired","to","get","getType","config","snapshots","providers","set","iocprovider","iocscope","scopes","has","TypeError","provider","scope","Map","Scope","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","Local","Singleton","LocalScope","SingletonScope","instance","instances","__block_Instantiation","delete","getConstructorFromType","_api_Inject__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_api_Provider__WEBPACK_IMPORTED_MODULE_1__","o","_create_CreateSingletonService__WEBPACK_IMPORTED_MODULE_6__","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","checkType","baseSource","bindings","ConfigImpl","getInstance","concat","name","targetSource","propertyType","propKey","defineProperty","enumerable","newValue","decoratedConstructor","paramTypes","configImpl","params","getParameters","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__","reset","_len","arguments","length","Array","_key","Error","resolve","map","paramType","_ref","ioc_wrapper","_getPrototypeOf2","_this","_len2","args","_key2","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","call","apply","assertInstantiable","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","__parent","constructorName","prototype","constructor","toString","match","constructorNameRegEx","_unused","typeConstructor","hasNamedConstructor","_api_IEventType__WEBPACK_IMPORTED_MODULE_1__","_api_IEventService__WEBPACK_IMPORTED_MODULE_2__","_model_EventType__WEBPACK_IMPORTED_MODULE_3__","IEventService","C_Users_i832863_Source_testing_react_router_poc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","EventType","Inject","_model_Container__WEBPACK_IMPORTED_MODULE_0__","createSingletonService","_api_Scope__WEBPACK_IMPORTED_MODULE_0__","_model_Container__WEBPACK_IMPORTED_MODULE_1__","EDITOR_STATE_UPDATED","STATE","editorState","fileMenu","root","serverFileMap","DEFAULT_FILE","id","type","content","setEditorState","eventService","undefined","assign","publish","getEditorState","setFileContent","file","updatedFile","getFile","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","getFileContent","stop","_x","fileContentId","Promise","reject","fetch","then","response","json","result","publishContentChanged","catch","error","MAIN_CONTENT_CHANGE_LISTENER","listenForMainContentChange","notificationFunction","context","handler","replace","c","r","Math","random","v","forEach","changeListener","EditorHomeRender","props","state","react","className","EditorHome","render","Component","FileEditor","fileId","options","selectOnLineNumbers","_onChangeHandler","editorDidMount","getCurrentValue","editor","console","log","setState","onChange","e","onContentChanged","_this2","ex","prevProps","_this3","lib_default","width","height","language","theme","React","TextEditor","react_router","path","component","EditorSidebar","menuItem","EditorSidebar_SidebarMenuItem","SidebarMenuItem","style","paddingLeft","isFolder","react_router_dom","getContentUrl","children","menuItemChild","ILoggerFactory","createLogger","loggerName","create","getSkillList","skillList","SkillList","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","useEffect","react_default","createElement","Fragment","skill","SkillEditor","Editor","_logger","_eventService","on","onEditorStateUpdated","JSON","stringify","t0","off","EditorSidebar_EditorSidebar","StandardEventService","_eventListenerList","event","eventListeners","len","index","listener","function","data","eventListener","listenerList","push","filter","throttle","fn","threshold","last","Date","now","LOGGED_MESSAGE_LIST","window","LOGGED_MESSAGES","ConsoleLogger","_dec","propertyKey","descriptor","method","_class","_name","_isDebug","_isTrace","message","messageToLog","formattedNowDate","throttledLog","level","info","throttledTrace","trace","toUTCString","applyDecoratedDescriptor","getOwnPropertyDescriptor","StandardLoggerFactory","NotificationCenter","rootElement","document","getElementById","Fabric","NotificationCenter_NotificationCenter"],"mappings":"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","file":"static/js/main.6a9de214.chunk.js","sourcesContent":["import { Config } from \"../container/Config\";\nimport { IoCContainer, ConfigImpl } from \"../container/IoCContainer\";\nimport { AutoWired } from \"../decorator/AutoWired\";\nimport { Provider } from \"../api/Provider\";\nimport { Scope } from \"../api/Scope\";\n\n/**\n * The IoC Container class. Can be used to register and to retrieve your dependencies.\n * You can also use de decorators [[AutoWired]], [[Scoped]], [[Singleton]], [[Provided]] and [[Provides]]\n * to configure the dependency directly on the class.\n */\nexport class Container {\n  /**\n   * Add a dependency to the Container. If this type is already present, just return its associated\n   * configuration object.\n   * Example of usage:\n   *\n   * ```\n   * Container.bind(PersonDAO).to(ProgrammerDAO).scope(Scope.Singleton);\n   * ```\n   * @param source The type that will be bound to the Container\n   * @return a container configuration\n   */\n  public static bind(source: Function): Config {\n    if (!IoCContainer.isBound(source)) {\n      AutoWired(source);\n      return IoCContainer.bind(source).to(source);\n    }\n\n    return IoCContainer.bind(source);\n  }\n\n  /**\n   * Retrieve an object from the container. It will resolve all dependencies and apply any type replacement\n   * before return the object.\n   * If there is no declared dependency to the given source type, an implicity bind is performed to this type.\n   * @param source The dependency type to resolve\n   * @return an object resolved for the given source type;\n   */\n  public static get<T>(source: Function & { prototype: T }): T {\n    return IoCContainer.get(source);\n  }\n\n  /**\n   * Retrieve a type associated with the type provided from the container\n   * @param source The dependency type to resolve\n   * @return an object resolved for the given source type;\n   */\n  public static getType(source: Function) {\n    return IoCContainer.getType(source);\n  }\n\n  /**\n   * Store the state for a specified binding.  Can then be restored later.   Useful for testing.\n   * @param source The dependency type\n   */\n  public static snapshot(source: Function): void {\n    const config = Container.bind(source) as ConfigImpl;\n    Container.snapshots.providers.set(source, config.iocprovider);\n    if (config.iocscope) {\n      Container.snapshots.scopes.set(source, config.iocscope);\n    }\n    return;\n  }\n\n  /**\n   * Restores the state for a specified binding that was previously captured by snapshot.\n   * @param source The dependency type\n   */\n  public static restore(source: Function): void {\n    if (!Container.snapshots.providers.has(source)) {\n      throw new TypeError(\"Config for source was never snapshoted.\");\n    }\n    const config = Container.bind(source);\n    config.provider(Container.snapshots.providers.get(source) as any);\n    if (Container.snapshots.scopes.has(source)) {\n      config.scope(Container.snapshots.scopes.get(source) as any);\n    }\n  }\n\n  /**\n   * Internal storage for snapshots\n   * @type {providers: Map<Function, Provider>; scopes: Map<Function, Scope>}\n   */\n  private static snapshots: {\n    providers: Map<Function, Provider>;\n    scopes: Map<Function, Scope>;\n  } = {\n    providers: new Map(),\n    scopes: new Map()\n  };\n}\n","import {\r\n  InjectorHanlder,\r\n  IoCContainer,\r\n  ConfigImpl\r\n} from \"../container/IoCContainer\";\r\n\r\n/**\r\n * A decorator to tell the container that this class should its instantiation always handled by the Container.\r\n *\r\n * An AutoWired class will have its constructor overriden to always delegate its instantiation to the IoC Container.\r\n * So, if you write:\r\n *\r\n * ```\r\n * @ AutoWired\r\n * class PersonService {\r\n *   @ Inject\r\n *   personDAO: PersonDAO;\r\n * }\r\n * ```\r\n *\r\n * Any PersonService instance will be created by the IoC Container, even when a direct call to its constructor is called:\r\n *\r\n * ```\r\n * let PersonService = new PersonService(); // will be returned by Container, and all internal dependencies resolved.\r\n * ```\r\n *\r\n * It is the same that use:\r\n *\r\n * ```\r\n * Container.bind(PersonService);\r\n * let personService: PersonService = Container.get(PersonService);\r\n * ```\r\n */\r\nexport function AutoWired(target: Function) {\r\n  // <T extends {new(...args:any[]):{}}>(target:T) {\r\n  const newConstructor = InjectorHanlder.decorateConstructor(target);\r\n  const config: ConfigImpl = IoCContainer.bind(target) as ConfigImpl;\r\n  config.toConstructor(newConstructor);\r\n  return newConstructor;\r\n}\r\n","import { Provider } from \"./Provider\";\r\nimport { InjectorHanlder } from \"../container/IoCContainer\";\r\n\r\n/**\r\n * Class responsible to handle the scope of the instances created by the Container\r\n */\r\nexport abstract class Scope {\r\n  /**\r\n   * A reference to the LocalScope. Local Scope return a new instance for each dependency resolution requested.\r\n   * This is the default scope.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Local: Scope;\r\n  /**\r\n   * A reference to the SingletonScope. Singleton Scope return the same instance for any\r\n   * dependency resolution requested.\r\n   */\r\n  // tslint:disable-next-line:variable-name\r\n  public static Singleton: Scope;\r\n\r\n  /**\r\n   * Method called when the Container needs to resolve a dependency. It should return the instance that will\r\n   * be returned by the Container.\r\n   * @param provider The provider associated with the current bind. Used to create new instances when necessary.\r\n   * @param source The source type of this bind.\r\n   * @return the resolved instance.\r\n   */\r\n  public abstract resolve(provider: Provider, source: Function): any;\r\n\r\n  /**\r\n   * Called by the IoC Container when some configuration is changed on the Container binding.\r\n   * @param source The source type that has its configuration changed.\r\n   */\r\n  public reset(source: Function) {\r\n    // Do nothing\r\n  }\r\n}\r\n\r\n/**\r\n * Default [[Scope]] that always create a new instace for any dependency resolution request\r\n */\r\nclass LocalScope extends Scope {\r\n  public resolve(provider: Provider, source: Function) {\r\n    return provider.get();\r\n  }\r\n}\r\n\r\nScope.Local = new LocalScope();\r\n\r\n/**\r\n * Scope that create only a single instace to handle all dependency resolution requests.\r\n */\r\nclass SingletonScope extends Scope {\r\n  private static instances: Map<Function, any> = new Map<Function, any>();\r\n\r\n  public resolve(provider: Provider, source: any) {\r\n    let instance: any = SingletonScope.instances.get(source);\r\n    if (!instance) {\r\n      source.__block_Instantiation = false;\r\n      instance = provider.get();\r\n      source.__block_Instantiation = true;\r\n      SingletonScope.instances.set(source, instance);\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  public reset(source: Function) {\r\n    SingletonScope.instances.delete(\r\n      InjectorHanlder.getConstructorFromType(source)\r\n    );\r\n  }\r\n}\r\n\r\nScope.Singleton = new SingletonScope();\r\n","export * from \"./api/Inject\";\r\nexport * from \"./api/Provider\";\r\nexport * from \"./api/Scope\";\r\n\r\nexport * from \"./create/CreateProviderService\";\r\nexport * from \"./create/CreateService\";\r\nexport * from \"./create/CreateSingletonProviderService\";\r\nexport * from \"./create/CreateSingletonService\";\r\nexport * from \"./create/CreateSingletonServiceFactory\";\r\n","import { Scope } from \"../api/Scope\";\nimport { Config } from \"./Config\";\nimport { Provider } from \"../api/Provider\";\n\n/**\n * Internal implementation of IoC Container.\n */\nexport class IoCContainer {\n  public static isBound(source: Function): boolean {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    const config: ConfigImpl | undefined = IoCContainer.bindings.get(\n      baseSource\n    );\n    return !!config;\n  }\n\n  public static bind(source: Function): Config {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    let config: ConfigImpl | undefined = IoCContainer.bindings.get(baseSource);\n    if (!config) {\n      config = new ConfigImpl(baseSource);\n      IoCContainer.bindings.set(baseSource, config);\n    }\n    return config;\n  }\n\n  public static get(source: Function) {\n    const config: ConfigImpl = IoCContainer.bind(source) as ConfigImpl;\n    if (!config.iocprovider) {\n      config.to(config.source as FunctionConstructor);\n    }\n    return config.getInstance();\n  }\n\n  public static getType(source: Function): Function {\n    checkType(source);\n    const baseSource = InjectorHanlder.getConstructorFromType(source);\n    const config: ConfigImpl | undefined = IoCContainer.bindings.get(\n      baseSource\n    );\n    if (!config) {\n      throw new TypeError(\n        `The type ${source.name} hasn't been registered with the IOC Container`\n      );\n    }\n    return config.targetSource || config.source;\n  }\n\n  public static injectProperty(\n    target: any,\n    key: string,\n    propertyType: Function\n  ) {\n    const propKey = `__${key}`;\n    Object.defineProperty(target, key, {\n      enumerable: true,\n      get() {\n        return this[propKey]\n          ? this[propKey]\n          : (this[propKey] = IoCContainer.get(propertyType));\n      },\n      set(newValue) {\n        this[propKey] = newValue;\n      }\n    });\n  }\n\n  public static assertInstantiable(target: any) {\n    if (target.__block_Instantiation) {\n      throw new TypeError(\n        \"Can not instantiate Singleton class. \" +\n          \"Ask Container for it, using Container.get\"\n      );\n    }\n  }\n  private static bindings: Map<FunctionConstructor, ConfigImpl> = new Map<\n    FunctionConstructor,\n    ConfigImpl\n  >();\n}\n\n/**\n * Utility function to validate type\n */\nfunction checkType(source: Object) {\n  if (!source) {\n    throw new TypeError(\n      \"Invalid type requested to IoC \" + \"container. Type is not defined.\"\n    );\n  }\n}\n\nexport class ConfigImpl implements Config {\n  public source: Function;\n  public targetSource!: Function;\n  public iocprovider!: Provider;\n  public iocscope?: Scope;\n  public decoratedConstructor!: FunctionConstructor;\n  public paramTypes!: any[];\n\n  constructor(source: Function) {\n    this.source = source;\n  }\n\n  public to(target: FunctionConstructor) {\n    checkType(target);\n    const targetSource = InjectorHanlder.getConstructorFromType(target);\n    this.targetSource = targetSource;\n    if (this.source === targetSource) {\n      const configImpl = this;\n      this.iocprovider = {\n        get: () => {\n          const params = configImpl.getParameters();\n          if (configImpl.decoratedConstructor) {\n            return params\n              ? new configImpl.decoratedConstructor(...params)\n              : new configImpl.decoratedConstructor();\n          }\n          return params ? new target(...params) : new target();\n        }\n      };\n    } else {\n      this.iocprovider = {\n        get: () => {\n          return IoCContainer.get(target);\n        }\n      };\n    }\n    if (this.iocscope) {\n      this.iocscope.reset(this.source);\n    }\n    return this;\n  }\n\n  public provider(provider: Provider) {\n    this.iocprovider = provider;\n    if (this.iocscope) {\n      this.iocscope.reset(this.source);\n    }\n    return this;\n  }\n\n  public scope(scope: Scope) {\n    this.iocscope = scope;\n    if (scope === Scope.Singleton) {\n      (this as any).source.__block_Instantiation = true;\n      scope.reset(this.source);\n    } else if ((this as any).source.__block_Instantiation) {\n      delete (this as any).source.__block_Instantiation;\n    }\n    return this;\n  }\n\n  public withParams(...paramTypes: any[]) {\n    this.paramTypes = paramTypes;\n    return this;\n  }\n\n  public toConstructor(newConstructor: FunctionConstructor) {\n    this.decoratedConstructor = newConstructor;\n    return this;\n  }\n\n  public getInstance() {\n    if (!this.iocscope) {\n      this.scope(Scope.Local);\n    }\n    if (!this.iocscope) {\n      throw new Error(\"IocScope was not set correctly.\");\n    }\n    return this.iocscope.resolve(this.iocprovider, this.source);\n  }\n\n  private getParameters() {\n    if (this.paramTypes) {\n      return this.paramTypes.map(paramType => IoCContainer.get(paramType));\n    }\n    return null;\n  }\n}\n\n/**\n * Utility class to handle injection behavior on class decorations.\n */\nexport class InjectorHanlder {\n  public static constructorNameRegEx = /function (\\w*)/;\n\n  public static decorateConstructor(target: Function) {\n    let newConstructor: any;\n    // tslint:disable-next-line:class-name\n    newConstructor = class ioc_wrapper extends (target as FunctionConstructor) {\n      constructor(...args: any[]) {\n        super(...args);\n        IoCContainer.assertInstantiable(target);\n      }\n    };\n    newConstructor.__parent = target;\n    return newConstructor;\n  }\n\n  public static hasNamedConstructor(source: Function): boolean {\n    if (source.name) {\n      return source.name !== \"ioc_wrapper\";\n    } else {\n      try {\n        const constructorName = source.prototype.constructor\n          .toString()\n          .match(this.constructorNameRegEx)[1];\n        return constructorName && constructorName !== \"ioc_wrapper\";\n      } catch {\n        // make linter happy\n      }\n\n      return false;\n    }\n  }\n\n  public static getConstructorFromType(target: Function): FunctionConstructor {\n    let typeConstructor: any = target;\n    if (this.hasNamedConstructor(typeConstructor)) {\n      return typeConstructor as FunctionConstructor;\n    }\n    typeConstructor = typeConstructor.__parent;\n    while (typeConstructor) {\n      if (this.hasNamedConstructor(typeConstructor)) {\n        return typeConstructor as FunctionConstructor;\n      }\n      typeConstructor = typeConstructor.__parent;\n    }\n    throw TypeError(\n      \"Can not identify the base Type for requested target \" + target.toString()\n    );\n  }\n}\n","export * from \"./api/IEvent\";\r\nexport * from \"./api/IEventType\";\r\nexport * from \"./api/IEventService\";\r\n\r\nexport * from \"./model/EventType\";\r\n","import { IEvent } from \"./IEvent\";\r\nimport { IEventType } from \"./IEventType\";\r\n\r\nexport abstract class IEventService {\r\n  public abstract publish(event: IEvent): void;\r\n  public abstract on(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n  public abstract off(\r\n    type: IEventType,\r\n    eventListener: (data: any) => void,\r\n    context: any\r\n  ): IEventService;\r\n}\r\n","import { IEventType } from \"../api/IEventType\";\r\n\r\nexport class EventType implements IEventType {\r\n  constructor(public key: string) {}\r\n}\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const Inject = <T>(bind: Function): T => Container.get<T>(bind);\r\n","import { Provider } from \"../api/Provider\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createProviderService = (bind: Function, provider: Provider) =>\r\n  Container.bind(bind).provider(provider);\r\n","import { Container } from \"../model/Container\";\r\n\r\nexport const createService = (bind: Function, to: Object) =>\r\n  Container.bind(bind).to(to);\r\n","import { Container } from \"../model/Container\";\r\nimport { Provider } from \"../api/Provider\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonProviderService = (\r\n  bind: Function,\r\n  provider: Provider\r\n) =>\r\n  Container.bind(bind)\r\n    .provider(provider)\r\n    .scope(Scope.Singleton);\r\n","import { Scope } from \"../api/Scope\";\r\nimport { Container } from \"../model/Container\";\r\n\r\nexport const createSingletonService = (bind: Function, to: Object) =>\r\n  Container.bind(bind)\r\n    .to(to)\r\n    .scope(Scope.Singleton);\r\n","import { Container } from \"../model/Container\";\r\nimport { Scope } from \"../api/Scope\";\r\n\r\nexport const createSingletonServiceFactory = (\r\n  bind: Function,\r\n  provider: Function\r\n) =>\r\n  Container.bind(bind)\r\n    .provider({ get: () => provider() })\r\n    .scope(Scope.Singleton);\r\n","import { IEventType, EventType, IEvent } from \"../../core/event\";\r\n\r\nexport const EDITOR_STATE_UPDATED: IEventType = new EventType(\r\n  \"EDITOR_STATE_UPDATED\"\r\n);\r\n\r\nexport const createEditorStateUpdatedEvent = (): IEvent => ({\r\n  type: EDITOR_STATE_UPDATED\r\n});\r\n","import { IEventService } from \"../../core/event\";\r\nimport { Inject } from \"../../core/ioc\";\r\nimport { createEditorStateUpdatedEvent } from \"./EditorStateUpdated\";\r\n\r\ninterface InternalState {\r\n  editorState: IEditorServerState;\r\n  serverFileMap: Map<string, IServerFile>;\r\n}\r\n\r\nconst STATE: InternalState = {\r\n  editorState: {\r\n    fileMenu: {\r\n      root: []\r\n    }\r\n  },\r\n  serverFileMap: new Map<string, IServerFile>()\r\n};\r\n\r\nexport const DEFAULT_FILE: IServerFile = {\r\n  id: \"invalid-id\",\r\n  type: \"plaintext\",\r\n  content: \"Loading...\"\r\n};\r\n\r\nexport const setEditorState = (\r\n  editorState: IEditorServerState,\r\n  eventService: IEventService = Inject(IEventService)\r\n) => {\r\n  Object.assign(STATE.editorState, editorState);\r\n  eventService.publish(createEditorStateUpdatedEvent());\r\n};\r\n\r\nexport const getEditorState = () => STATE.editorState;\r\n\r\n/**\r\n * ====================\r\n */\r\n\r\nexport const setFileContent = (id: string, content: string): void => {\r\n  const file = STATE.serverFileMap.get(id) || { id, type: \"new\", content };\r\n  const updatedFile = Object.assign({}, file, { content }) as IServerFile;\r\n  STATE.serverFileMap.set(id, updatedFile);\r\n};\r\n\r\nexport const getFile = async (id: string): Promise<IServerFile> => {\r\n  if (!STATE.serverFileMap.has(id)) {\r\n    // Request file content\r\n    return getFileContent(id);\r\n  }\r\n  return STATE.serverFileMap.get(id);\r\n};\r\nexport const getFileFromMap = (id: string): IServerFile => {\r\n  return STATE.serverFileMap.get(id);\r\n};\r\n\r\nexport const getFileContent = (fileContentId: string) =>\r\n  new Promise<IServerFile>((resolve, reject) => {\r\n    fetch(`/serverData/content/${fileContentId}.json`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        // TODO: Cache content\r\n        STATE.serverFileMap.set(fileContentId, result);\r\n        publishContentChanged();\r\n        return result;\r\n      })\r\n      .then(result => resolve(result))\r\n      .catch(error => reject(error));\r\n  });\r\n\r\nexport const loadFileContentFromServerForMenuItem = (menuItem: IMenuItem) => {};\r\n\r\nconst MAIN_CONTENT_CHANGE_LISTENER: Map<string, IEventListener> = new Map<\r\n  string,\r\n  IEventListener\r\n>();\r\n\r\nexport const listenForMainContentChange = (\r\n  notificationFunction: () => void,\r\n  context: any\r\n): string => {\r\n  const handler = guid();\r\n  MAIN_CONTENT_CHANGE_LISTENER.set(handler, {\r\n    notificationFunction,\r\n    context\r\n  });\r\n  return handler;\r\n};\r\nexport const removeListenerForContentChange = (handler: string): void => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.delete(handler);\r\n};\r\nexport const publishContentChanged = () => {\r\n  MAIN_CONTENT_CHANGE_LISTENER.forEach(changeListener => {\r\n    changeListener.notificationFunction.call(changeListener.context);\r\n  });\r\n};\r\n\r\ninterface IEventListener {\r\n  notificationFunction: () => void;\r\n  context: any;\r\n}\r\n\r\nexport interface IEditorServerState {\r\n  fileMenu: {\r\n    root: Array<IMenuItem>;\r\n  };\r\n}\r\nexport interface IServerFile {\r\n  id: string;\r\n  type: \"json\" | \"csharp\" | \"javascript\" | \"plaintext\";\r\n  content: string;\r\n}\r\nexport interface IMenuItem {\r\n  id: string;\r\n  name: string;\r\n  path: Array<string>;\r\n  isFolder: boolean;\r\n  children: Array<IMenuItem>;\r\n}\r\n\r\nfunction guid(): string {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","export const sendErrorMessage = (title: string, message: string) => {\r\n  // TODO: Publish event\r\n};\r\n","import * as React from \"react\";\r\nimport { IEditorHomeProps, IEditorHomeState } from \"./EditorHome\";\r\n\r\nexport const EditorHomeRender = (\r\n  props: IEditorHomeProps,\r\n  state: IEditorHomeState\r\n) => (\r\n  <div className=\"editor-home\">\r\n    <h1>Editor Home</h1>\r\n  </div>\r\n);\r\n","import { Component } from \"react\";\r\nimport \"./EditorHome.css\";\r\nimport { EditorHomeRender } from \"./EditorHomeRender\";\r\n\r\nexport interface IEditorHomeProps {}\r\nexport interface IEditorHomeState {}\r\n\r\nclass EditorHome extends Component<IEditorHomeProps, IEditorHomeState> {\r\n  state: IEditorHomeState = {};\r\n  async componentDidMount() {}\r\n\r\n  render = () => EditorHomeRender(this.props, this.state);\r\n}\r\n\r\nexport default EditorHome;\r\n","import \"./FileEditor.css\";\r\nimport * as React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport {\r\n  IServerFile,\r\n  setFileContent,\r\n  getFile,\r\n  listenForMainContentChange,\r\n  removeListenerForContentChange,\r\n  DEFAULT_FILE\r\n} from \"../../state/EditorState\";\r\n\r\ninterface IRouterParams {\r\n  fileId: string;\r\n}\r\nexport interface IFileEditorProps extends RouteChildrenProps<IRouterParams> {}\r\nexport interface IFileEditorState {\r\n  fileId: string;\r\n  file: IServerFile;\r\n  options: {\r\n    selectOnLineNumbers: boolean;\r\n  };\r\n}\r\n\r\nclass FileEditor extends React.Component<IFileEditorProps, IFileEditorState> {\r\n  state: IFileEditorState = {\r\n    fileId: \"not-valid\",\r\n    file: DEFAULT_FILE,\r\n    options: {\r\n      selectOnLineNumbers: true\r\n    }\r\n  };\r\n  private _onChangeHandler: string;\r\n  async componentDidMount() {\r\n    this._onChangeHandler = listenForMainContentChange(\r\n      this.onContentChanged,\r\n      this\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    removeListenerForContentChange(this._onChangeHandler);\r\n  }\r\n  private onContentChanged() {\r\n    try {\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          this.setState({\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    } catch (ex) {\r\n      console.error(\"Error\", ex);\r\n    }\r\n  }\r\n  editorDidMount = (getCurrentValue, editor) => {\r\n    console.log(\"editorDidMount\", { getCurrentValue, editor });\r\n    // editor.focus();\r\n    // TODO: Wire to onChange to make sure state is updated\r\n    if (this.props.match !== null) {\r\n      console.log(\"DidMount\", this.props.match.params.fileId as string);\r\n      getFile(this.props.match.params.fileId).then(file =>\r\n        this.setState({\r\n          file\r\n        })\r\n      );\r\n    }\r\n  };\r\n  onChange = (newValue, e) => {\r\n    console.log(this.state.fileId);\r\n    if (this.state.fileId === \"not-valid\") {\r\n      return;\r\n    }\r\n    console.log(\"onChange\", newValue, e);\r\n    setFileContent(this.state.fileId, newValue);\r\n  };\r\n  componentDidUpdate(prevProps: IFileEditorProps) {\r\n    if (prevProps.match.params.fileId !== this.props.match.params.fileId) {\r\n      this.setState({\r\n        fileId: this.props.match.params.fileId,\r\n        file: DEFAULT_FILE\r\n      });\r\n      getFile(this.props.match.params.fileId)\r\n        .then(file => {\r\n          this.setState({\r\n            fileId: this.props.match.params.fileId,\r\n            file\r\n          });\r\n        })\r\n        .catch(error => console.error(\"Error\", error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { file } = this.state;\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <div>({this.props.match.params.fileId})</div>\r\n        <Editor\r\n          key=\"something\"\r\n          width=\"100%\"\r\n          height={300}\r\n          language=\"json\"\r\n          theme=\"dark\"\r\n          value={file.content}\r\n          options={this.state.options}\r\n          editorDidMount={this.editorDidMount}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileEditor;\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport \"./TextEditor.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport FileEditor from \"./file/FileEditor\";\r\n\r\nexport interface ITextEditorProps {}\r\nexport interface ITextEditorState {}\r\n\r\nclass TextEditor extends Component<ITextEditorProps, ITextEditorState> {\r\n  state: ITextEditorState = {};\r\n  async componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <h1>Text Editor</h1>\r\n        <div>\r\n          <Route path=\"/text-editor/file/:fileId\" component={FileEditor} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextEditor;\r\n","import \"./EditorSidebar.css\";\r\nimport * as React from \"react\";\r\nimport { IEditorServerState, IMenuItem } from \"../state/EditorState\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IEventService } from \"../../core/event\";\r\nimport { Inject } from \"../../core/ioc\";\r\nimport { autobind } from \"../../core/autobind\";\r\n\r\ninterface IProps {\r\n  editorState: IEditorServerState;\r\n}\r\ninterface IState {}\r\n\r\nexport default class EditorSidebar extends React.Component<IProps, IState> {\r\n  state: IState = {};\r\n\r\n  componentDidMount() {\r\n    console.log(\"sidebar: \", this.props.editorState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-sidebar\">\r\n        (editor sidebar)\r\n        {this.props.editorState.fileMenu.root.map(menuItem => (\r\n          <SidebarMenuItem key={menuItem.id} menuItem={menuItem} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SidebarMenuItem extends React.Component<{ menuItem: IMenuItem }, {}> {\r\n  render() {\r\n    const { menuItem } = this.props;\r\n    return (\r\n      <div style={{ paddingLeft: \"5px\" }}>\r\n        {menuItem.isFolder ? (\r\n          <span>{menuItem.name}</span>\r\n        ) : (\r\n          <NavLink className=\"menu-link\" to={getContentUrl(menuItem)}>\r\n            {menuItem.name}\r\n          </NavLink>\r\n        )}\r\n        <div>\r\n          {(menuItem.children || []).map(menuItemChild => (\r\n            <SidebarMenuItem key={menuItemChild.id} menuItem={menuItemChild} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getContentUrl = (menuItem: IMenuItem) => {\r\n  return `/text-editor/file/${menuItem.id}`;\r\n};\r\n","import { ILogger } from \"./ILogger\";\r\n\r\nexport abstract class ILoggerFactory {\r\n  public abstract create(loggerName: string): ILogger;\r\n}\r\n","import { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { Inject } from \"../../ioc\";\r\nimport { ILogger } from \"../api/ILogger\";\r\n\r\nexport const createLogger = (\r\n  loggerName: string,\r\n  loggerFactory: ILoggerFactory = Inject(ILoggerFactory)\r\n): ILogger => loggerFactory.create(loggerName);\r\n","import skillEditorState from \"./skill-editor-state.json\";\r\nimport { ISkill } from \"../api/ISkill.js\";\r\n\r\ninterface ISkillEditorState {\r\n  skillList: ISkill[];\r\n}\r\n\r\nconst STATE: ISkillEditorState = skillEditorState;\r\n\r\nexport const getSkillList = () => STATE.skillList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getSkillList } from \"../state/SkillEditorState\";\r\n// import {\r\n//   DetailsList,\r\n//   DetailsListLayoutMode\r\n// } from \"office-ui-fabric-react/lib/DetailsList\";\r\n\r\nconst COLUMNS = [\r\n  {\r\n    key: \"id\",\r\n    name: \"Id\",\r\n    fieldName: \"id\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"name\",\r\n    name: \"Name\",\r\n    fieldName: \"name\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  }\r\n];\r\n\r\nexport function SkillList() {\r\n  const [skillList, setSkillList] = useState(getSkillList());\r\n  const [deailsList, setDetailsList] = useState([]);\r\n  useEffect(() => {}, [skillList]);\r\n  const onItemInvoked = () => {\r\n    console.log(\"hi\");\r\n  };\r\n  return (\r\n    <>\r\n      {skillList.map(skill => (\r\n        <div>{skill.name}</div>\r\n      ))}\r\n      {/* <DetailsList\r\n          items={deailsList}\r\n          columns={COLUMNS}\r\n          setKey=\"set\"\r\n          layoutMode={DetailsListLayoutMode.justified}\r\n          onItemInvoked={onItemInvoked}\r\n        /> */}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { SkillList } from \"./list/SkillList\";\r\n\r\nexport function SkillEditor() {\r\n  return (\r\n    <>\r\n      <h1>Skill Editor</h1>\r\n      <Switch>\r\n        <Route path=\"/skill-editor\" component={SkillList} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import \"./Editor.css\";\r\nimport * as React from \"react\";\r\nimport { getEditorState, IEditorServerState } from \"./state/EditorState\";\r\nimport { fetchEditorState } from \"./state/FetchEditorState\";\r\nimport EditorHome from \"./home/EditorHome\";\r\nimport TextEditor from \"./text/TextEditor\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport EditorSidebar from \"./sidebar/EditorSidebar\";\r\nimport { createLogger, ILogger } from \"../core/logger\";\r\nimport { IEventService } from \"../core/event\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { EDITOR_STATE_UPDATED } from \"./state/EditorStateUpdated\";\r\nimport { SkillEditor } from \"../skill/SkillEditor\";\r\n\r\nexport interface IProps {}\r\nexport interface IState {\r\n  editorState: IEditorServerState;\r\n}\r\n\r\nclass Editor extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    editorState: getEditorState()\r\n  };\r\n  private readonly _logger: ILogger = createLogger(\"View.Editor\");\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  async componentDidMount() {\r\n    this._eventService.on(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n    try {\r\n      await fetchEditorState();\r\n    } catch (ex) {\r\n      this._logger.error(\"Some Error\", ex);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this._eventService.off(\r\n      EDITOR_STATE_UPDATED,\r\n      this.onEditorStateUpdated,\r\n      this\r\n    );\r\n  }\r\n  onEditorStateUpdated() {\r\n    this.setState({\r\n      editorState: getEditorState()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor\">\r\n        <div className=\"editor-sidebar\">\r\n          <EditorSidebar editorState={this.state.editorState} />\r\n        </div>\r\n        <div className=\"editor-main\">\r\n          <Switch>\r\n            <Route path=\"/skill-editor\" component={SkillEditor} />\r\n            <Route path=\"/text-editor\" component={TextEditor} />\r\n            <Route path=\"/\" component={EditorHome} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import { setEditorState } from \"./EditorState\";\r\nimport { sendErrorMessage } from \"../../notificationCenter/send/SendErrorMssage\";\r\n\r\nexport const fetchEditorState = (): Promise<void> =>\r\n  fetch(\"/serverData/editor-data.json\")\r\n    .then(response => response.json())\r\n    .then(result => setEditorState(result))\r\n    .catch(error =>\r\n      sendErrorMessage(\"Fetch Editor State Error\", JSON.stringify(error))\r\n    );\r\n","import { IEventListener } from \"../api/IEventListener\";\nimport { IEventService } from \"../api/IEventService\";\nimport { IEvent } from \"../api/IEvent\";\nimport { IEventType } from \"../api/IEventType\";\n\nexport class StandardEventService implements IEventService {\n  private _eventListenerList: Map<string, IEventListener[]> = new Map<\n    string,\n    IEventListener[]\n  >();\n\n  public publish(event: IEvent): void {\n    const eventListeners = this._eventListenerList.get(event.type.key) || [];\n    const len = eventListeners.length;\n    for (let index = 0; index < len; index++) {\n      const listener = eventListeners[index];\n      try {\n        listener.function.call(listener.context, event.data);\n      } catch (ex) {\n        console.error(\"Listener failed\", ex);\n      }\n    }\n  }\n\n  public on(\n    type: IEventType,\n    eventListener: (data: any) => void,\n    context: any\n  ): IEventService {\n    const listenerList = this._eventListenerList.get(type.key) || [];\n    listenerList.push({\n      function: eventListener,\n      context\n    });\n    this._eventListenerList.set(type.key, listenerList);\n\n    return this;\n  }\n\n  public off(\n    type: IEventType,\n    eventListener: (data: any) => void,\n    context: any\n  ): IEventService {\n    this._eventListenerList.set(\n      type.key,\n      (this._eventListenerList.get(type.key) || []).filter(\n        listener =>\n          listener.function !== eventListener || listener.context !== context\n      )\n    );\n    return this;\n  }\n}\n","export const throttle = (\r\n  fn: Function,\r\n  threshold: number,\r\n  scope?: any\r\n): ((...argList: any[]) => void) => {\r\n  threshold || (threshold = 250);\r\n  let last = +new Date();\r\n  return function(this: any) {\r\n    const context = scope || this,\r\n      now = +new Date(),\r\n      args = arguments;\r\n    if (last && now > last + threshold) {\r\n      fn.apply(context, args);\r\n      last = now;\r\n    }\r\n  };\r\n};\r\n","// import dateFormat from \"dateformat\";\r\nimport { ILogger } from \"../api/ILogger\";\r\nimport { ILogMessage } from \"../api/ILogMessage\";\r\nimport { throttleMethod } from \"../../throttle\";\r\n\r\nexport const LOGGED_MESSAGE_LIST: ILogMessage[] = [];\r\n(window as any).LOGGED_MESSAGES = LOGGED_MESSAGE_LIST;\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n  constructor(\r\n    private readonly _name: string,\r\n    private readonly _isDebug: boolean = true,\r\n    private readonly _isTrace: boolean = true\r\n  ) {\r\n    console.log(\"hi\");\r\n  }\r\n\r\n  public log(message: string, data: any = \"\") {\r\n    const messageToLog = `[${this.formattedNowDate()}] [INFO]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    this.throttledLog(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"INFO\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public debug(message: string, data: any = \"[no-data]\") {\r\n    this.formattedNowDate();\r\n    if (!this._isDebug) {\r\n      return;\r\n    }\r\n    const messageToLog = `[${this.formattedNowDate()}] [DEBUG]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    console.info(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"DEBUG\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public error(message: string, data: any = \"\") {\r\n    const messageToLog = `[${this.formattedNowDate()}] [ERROR]: [${\r\n      this._name\r\n    }] \\r\\n\\t${message}`;\r\n    console.error(messageToLog, data);\r\n    LOGGED_MESSAGE_LIST.push({\r\n      level: \"ERROR\",\r\n      message: messageToLog,\r\n      data\r\n    });\r\n  }\r\n  public trace(message: string, data: any = \"\") {\r\n    if (this._isTrace) {\r\n      const messageToLog = `[${this.formattedNowDate()}] [TRACE]: [${\r\n        this._name\r\n      }] \\r\\n\\t${message}`;\r\n      this.throttledTrace(messageToLog, data);\r\n      LOGGED_MESSAGE_LIST.push({\r\n        level: \"TRACE\",\r\n        message: messageToLog,\r\n        data\r\n      });\r\n    }\r\n  }\r\n  @throttleMethod(1000)\r\n  private throttledLog(messageToLog: string, data: any = \"\") {\r\n    console.log(messageToLog, data);\r\n  }\r\n  private throttledTrace(messageToLog: string, data: any = \"\") {\r\n    console.log(messageToLog, data);\r\n    console.trace();\r\n  }\r\n\r\n  /**\r\n   * 01-14-2019 21:22:45.0123456-06:00\r\n   */\r\n  private formattedNowDate() {\r\n    const now = new Date();\r\n    return now.toUTCString();\r\n    // const formattedOffset = dateFormat(now, \"o\");\r\n    // return (\r\n    //   dateFormat(now, \"mm-dd-yyyy HH:MM:ss.l\") +\r\n    //   formattedOffset.slice(0, 3) +\r\n    //   \":\" +\r\n    //   formattedOffset.slice(3)\r\n    // );\r\n  }\r\n}\r\n","import { throttle } from \"../impl/Throttle\";\r\n\r\nexport function throttleMethod(threshold: number) {\r\n  return function(\r\n    this: any,\r\n    target: any,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ) {\r\n    const method = descriptor.value;\r\n    descriptor.value = throttle(function(this: any) {\r\n      return method.apply(this, arguments);\r\n    }, threshold);\r\n  };\r\n}\r\n","import { ILogger } from \"../api/ILogger\";\r\nimport { ILoggerFactory } from \"../api/ILoggerFactory\";\r\nimport { ConsoleLogger } from \"../model/ConsoleLogger\";\r\n\r\nexport class StandardLoggerFactory implements ILoggerFactory {\r\n  public create(loggerName: string): ILogger {\r\n    return new ConsoleLogger(loggerName);\r\n  }\r\n}\r\n","import \"./NotificationCenter.css\";\r\nimport * as React from \"react\";\r\nimport { Inject } from \"../core/ioc\";\r\nimport { IEventService } from \"../core/event\";\r\n\r\ninterface IProps {}\r\ninterface IState {}\r\n\r\nexport default class NotificationCenter extends React.Component<\r\n  IProps,\r\n  IState\r\n> {\r\n  state: IState = {};\r\n\r\n  private readonly _eventService: IEventService = Inject(IEventService);\r\n\r\n  componentDidMount() {}\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    return <div className=\"notification-center\" />;\r\n  }\r\n}\r\n","import { createSingletonService } from \"./core/ioc\";\r\nimport { IEventService } from \"./core/event\";\r\nimport { StandardEventService } from \"./core/event/model/StandardEventService\";\r\nimport { ILoggerFactory } from \"./core/logger\";\r\nimport { StandardLoggerFactory } from \"./core/logger/factory/StandardLoggerFactory\";\r\n\r\nexport const setupIoC = () => {\r\n  console.log(\"setup ioc\");\r\n  // Setup Event Services\r\n  createSingletonService(IEventService, StandardEventService);\r\n  // Setup logger\r\n  createSingletonService(ILoggerFactory, StandardLoggerFactory);\r\n};\r\n","import \"./styles.css\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router\";\nimport Editor from \"./editor/Editor\";\nimport { setupIoC } from \"./SetupIoC\";\nimport NotificationCenter from \"./notificationCenter/NotificationCenter\";\nimport { Fabric } from \"office-ui-fabric-react/lib/Fabric\";\n// import { FluentCustomizations } from \"@uifabric/fluent-theme\";\n\nsetupIoC();\n\nfunction App() {\n  return (\n    <Fabric>\n      <div className=\"App\">\n        <Router>\n          <NavLink to=\"/\">Home</NavLink> {\" | \"}\n          <NavLink to=\"/text-editor\">Text Editor</NavLink> {\" | \"}\n          <NavLink to=\"/skill-editor\">Skill Editor</NavLink>\n          <Switch>\n            <Route path=\"/\" component={Editor} />\n          </Switch>\n        </Router>\n        <NotificationCenter />\n      </div>\n    </Fabric>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}